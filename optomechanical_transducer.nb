(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1347043,      27780]
NotebookOptionsPosition[   1336623,      27596]
NotebookOutlinePosition[   1337066,      27613]
CellTagsIndexPosition[   1337023,      27610]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 StyleBox[
  RowBox[{
  "Parametric", " ", "Amplification", " ", "of", " ", "an", " ", 
   "Optomechanical", " ", "Quantum", " ", "Interconnect"}], "Title"]], "Input",
 CellChangeTimes->{{3.8619974903335366`*^9, 
  3.861997498587536*^9}},ExpressionUUID->"3db6f3dd-841e-4a6f-9bcd-\
4c0a15026451"],

Cell[CellGroupData[{

Cell["Load the package", "Section",
 CellChangeTimes->{{3.8619974298553314`*^9, 
  3.861997465896758*^9}},ExpressionUUID->"602ada67-5a27-4283-a4c2-\
9c1b72ca574d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"<<", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<Transducer.wl\>\""}],
     ")"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.861997447662382*^9, 3.8619974476633835`*^9}},
 CellLabel->"In[88]:=",ExpressionUUID->"1198645c-241a-4de7-b248-2715065a82b4"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definitions", "Section",
 CellChangeTimes->{{3.860535167285967*^9, 3.860535168236761*^9}, {
   3.860535214770533*^9, 3.860535236977765*^9}, {3.8605352692395897`*^9, 
   3.8605352697615905`*^9}, {3.8619972050585365`*^9, 3.861997206567556*^9}, 
   3.8619972967363815`*^9},ExpressionUUID->"82684d56-8309-4db6-9228-\
826b28f78ed4"],

Cell[CellGroupData[{

Cell["Define symbols", "Subsection",
 CellChangeTimes->{{3.8605353200001144`*^9, 3.8605353246185117`*^9}, {
  3.8615490573819714`*^9, 
  3.8615490592732515`*^9}},ExpressionUUID->"f013a760-8f33-402c-8872-\
0791025025dc"],

Cell["\<\
In this section we define symbols and expressions to use in this notebook.\
\>", "Text",
 CellChangeTimes->{{3.8615490615857563`*^9, 
  3.861549086326906*^9}},ExpressionUUID->"813f50e5-478f-4913-abfb-\
48784c42d6fb"],

Cell[BoxData[{
 RowBox[{"<<", "Notation`"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Symbolize", "[", 
   TemplateBox[{
     SubscriptBox["a", "_"]},
    "NotationTemplateTag"], "]"}], ";", 
  RowBox[{"Symbolize", "[", 
   TemplateBox[{
     SubsuperscriptBox["a", "_", "\[Dagger]"]},
    "NotationTemplateTag"], "]"}], ";", 
  RowBox[{"Symbolize", "[", 
   TemplateBox[{
     SubscriptBox["\[CapitalDelta]", "_"]},
    "NotationTemplateTag"], "]"}], ";", 
  RowBox[{"Symbolize", "[", 
   TemplateBox[{
     SubscriptBox["\[Omega]", "_"]},
    "NotationTemplateTag"], "]"}], ";", 
  RowBox[{"Symbolize", "[", 
   TemplateBox[{
     SubscriptBox["\[Kappa]", "_"]},
    "NotationTemplateTag"], "]"}], ";", 
  RowBox[{"Symbolize", "[", 
   TemplateBox[{
     SubscriptBox["G", "e"]},
    "NotationTemplateTag"], "]"}], ";", 
  RowBox[{"Symbolize", "[", 
   TemplateBox[{
     SubscriptBox["G", "o"]},
    "NotationTemplateTag"], "]"}], ";", 
  RowBox[{"Symbolize", "[", 
   TemplateBox[{
     SubscriptBox["g", "o"]},
    "NotationTemplateTag"], "]"}], ";", 
  RowBox[{"Symbolize", "[", 
   TemplateBox[{
     SubscriptBox["g", "e"]},
    "NotationTemplateTag"], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AssumptionRealValues", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["\[CapitalOmega]", "o"], "\[Element]", "Reals"}], ",", 
     RowBox[{
      SubscriptBox["\[CapitalOmega]", "e"], "\[Element]", "Reals"}], ",", 
     RowBox[{"\[CapitalOmega]", "\[Element]", "Reals"}], ",", 
     RowBox[{
      SubscriptBox["\[Omega]", "m"], "\[Element]", "Reals"}], ",", 
     RowBox[{"t", "\[Element]", "Reals"}], ",", 
     RowBox[{
      SubscriptBox["\[Kappa]", "o"], "\[Element]", "Reals"}], ",", 
     RowBox[{
      SubscriptBox["\[Kappa]", "e"], "\[Element]", "Reals"}], ",", 
     RowBox[{"\[Kappa]", "\[Element]", "Reals"}], ",", 
     RowBox[{
      SubscriptBox["\[CapitalDelta]", "e"], "\[Element]", "Reals"}], ",", 
     RowBox[{
      SubscriptBox["\[CapitalDelta]", "o"], "\[Element]", "Reals"}], ",", 
     RowBox[{"\[CapitalDelta]", "\[Element]", "Reals"}], ",", 
     RowBox[{
      SubscriptBox["g", "e"], "\[Element]", "Reals"}], ",", 
     RowBox[{
      SubscriptBox["g", "o"], "\[Element]", "Reals"}], ",", 
     RowBox[{"g", "\[Element]", "Reals"}]}], "}"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{
  3.8605351474391212`*^9, {3.8607037542058306`*^9, 3.860703757393474*^9}},
 Background->RGBColor[0.88, 1, 0.88],
 CellLabel->"In[68]:=",ExpressionUUID->"c53597f6-cabe-42d8-9425-2ed2ddb1d78d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"The", " ", "A", 
    RowBox[{"(", "t", ")"}], " ", "matrix"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"A", "=", 
     TagBox[
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {
          RowBox[{
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", 
            SubscriptBox["\[CapitalDelta]", "o"]}], "-", 
           FractionBox[
            SubscriptBox["\[Kappa]", "o"], "2"]}], "0", "0", "0", 
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", 
           SubscriptBox["G", "o"]}], 
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", 
           SubscriptBox["G", "o"]}]},
         {"0", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", 
            SubscriptBox["\[CapitalDelta]", "e"]}], "-", 
           FractionBox[
            SubscriptBox["\[Kappa]", "e"], "2"]}], "0", "0", 
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", 
           SubscriptBox["G", "e"]}], 
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", 
           SubscriptBox["G", "e"]}]},
         {"0", "0", 
          RowBox[{
           RowBox[{"\[ImaginaryI]", " ", 
            SubscriptBox["\[CapitalDelta]", "o"]}], "-", 
           FractionBox[
            SubscriptBox["\[Kappa]", "o"], "2"]}], "0", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"Conjugate", "[", 
            SubscriptBox["G", "o"], "]"}]}], 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"Conjugate", "[", 
            SubscriptBox["G", "o"], "]"}]}]},
         {"0", "0", "0", 
          RowBox[{
           RowBox[{"\[ImaginaryI]", " ", 
            SubscriptBox["\[CapitalDelta]", "e"]}], "-", 
           FractionBox[
            SubscriptBox["\[Kappa]", "e"], "2"]}], 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"Conjugate", "[", 
            SubscriptBox["G", "e"], "]"}]}], 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"Conjugate", "[", 
            SubscriptBox["G", "e"], "]"}]}]},
         {
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", 
           RowBox[{"Conjugate", "[", 
            SubscriptBox["G", "o"], "]"}]}], 
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", 
           RowBox[{"Conjugate", "[", 
            SubscriptBox["G", "e"], "]"}]}], 
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", 
           SubscriptBox["G", "o"]}], 
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", 
           SubscriptBox["G", "e"]}], 
          RowBox[{
           RowBox[{"-", 
            FractionBox[
             SubscriptBox["\[Kappa]", "m"], "2"]}], "-", 
           RowBox[{"\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], "0"},
         {
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"Conjugate", "[", 
            SubscriptBox["G", "o"], "]"}]}], 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"Conjugate", "[", 
            SubscriptBox["G", "e"], "]"}]}], 
          RowBox[{"\[ImaginaryI]", " ", 
           SubscriptBox["G", "o"]}], 
          RowBox[{"\[ImaginaryI]", " ", 
           SubscriptBox["G", "e"]}], "0", 
          RowBox[{
           RowBox[{"-", 
            FractionBox[
             SubscriptBox["\[Kappa]", "m"], "2"]}], "+", 
           RowBox[{"\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}]}
        },
        GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}}], "\[NoBreak]", ")"}],
      Function[BoxForm`e$, 
       MatrixForm[BoxForm`e$]]]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"The", " ", "B", " ", "matrix"}], "*)"}], "\[IndentingNewLine]", 
   StyleBox[
    RowBox[{
     RowBox[{"B", "=", 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {
          SqrtBox[
           SubscriptBox["\[Kappa]", 
            RowBox[{"o", ",", "ex"}]]], 
          SqrtBox[
           RowBox[{
            SubscriptBox["\[Kappa]", "o"], "-", 
            SubscriptBox["\[Kappa]", 
             RowBox[{"o", ",", "ex"}]]}]], "0", "0", "0", "0", "0", "0", "0", 
          "0"},
         {"0", "0", 
          SqrtBox[
           SubscriptBox["\[Kappa]", 
            RowBox[{"e", ",", "ex"}]]], 
          SqrtBox[
           RowBox[{
            SubscriptBox["\[Kappa]", "e"], "-", 
            SubscriptBox["\[Kappa]", 
             RowBox[{"e", ",", "ex"}]]}]], "0", "0", "0", "0", "0", "0"},
         {"0", "0", "0", "0", 
          SqrtBox[
           SubscriptBox["\[Kappa]", 
            RowBox[{"o", ",", "ex"}]]], 
          SqrtBox[
           RowBox[{
            SubscriptBox["\[Kappa]", "o"], "-", 
            SubscriptBox["\[Kappa]", 
             RowBox[{"o", ",", "ex"}]]}]], "0", "0", "0", "0"},
         {"0", "0", "0", "0", "0", "0", 
          SqrtBox[
           SubscriptBox["\[Kappa]", 
            RowBox[{"e", ",", "ex"}]]], 
          SqrtBox[
           RowBox[{
            SubscriptBox["\[Kappa]", "e"], "-", 
            SubscriptBox["\[Kappa]", 
             RowBox[{"e", ",", "ex"}]]}]], "0", "0"},
         {"0", "0", "0", "0", "0", "0", "0", "0", 
          SqrtBox[
           SubscriptBox["\[Kappa]", "m"]], "0"},
         {"0", "0", "0", "0", "0", "0", "0", "0", "0", 
          SqrtBox[
           SubscriptBox["\[Kappa]", "m"]]}
        }], "\[NoBreak]", ")"}]}], ";"}],
    Background->RGBColor[0.88, 1, 0.88]], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SymmetricValues", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalDelta]", "e"], "->", 
        SubscriptBox["\[Omega]", "m"]}], ",", 
       RowBox[{
        SubscriptBox["\[CapitalDelta]", "o"], "->", 
        SubscriptBox["\[Omega]", "m"]}], ",", 
       RowBox[{
        SubscriptBox["\[Kappa]", "e"], "->", "\[Kappa]"}], ",", 
       RowBox[{
        SubscriptBox["\[Kappa]", "o"], "->", "\[Kappa]"}], ",", 
       RowBox[{
        SubscriptBox["\[Kappa]", 
         RowBox[{"e", ",", "ex"}]], "->", 
        SubscriptBox["\[Kappa]", "ex"]}], ",", 
       RowBox[{
        SubscriptBox["\[Kappa]", 
         RowBox[{"o", ",", "ex"}]], "->", 
        SubscriptBox["\[Kappa]", "ex"]}], ",", 
       RowBox[{
        SubscriptBox["\[Kappa]", 
         RowBox[{"m", ",", "ex"}]], "->", 
        SubscriptBox["\[Kappa]", "m"]}], ",", 
       RowBox[{"\[Omega]", "->", 
        SubscriptBox["\[Omega]", "m"]}], ",", 
       RowBox[{
        SubscriptBox["G", "e"], "->", "G"}], ",", 
       RowBox[{
        SubscriptBox["G", "o"], "->", "G"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   StyleBox[
    RowBox[{
     RowBox[{"Sym\[CapitalOmega]", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         SubscriptBox["\[CapitalOmega]", "e"], "->", "\[CapitalOmega]"}], ",", 
        RowBox[{
         SubscriptBox["\[CapitalOmega]", "o"], "->", "\[CapitalOmega]"}]}], 
       "}"}]}], ";"}],
    Background->RGBColor[0.88, 1, 0.88]]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.860519163124707*^9, 3.860519164923957*^9}, {
   3.86051924839513*^9, 3.8605192943017817`*^9}, {3.860519333566082*^9, 
   3.860519371061141*^9}, 3.8605351474547405`*^9, {3.8605352885328693`*^9, 
   3.8605352891578608`*^9}, {3.860536602949542*^9, 3.8605366031526823`*^9}, {
   3.861297208075137*^9, 3.8612972085751467`*^9}, {3.86745666324499*^9, 
   3.8674566638296747`*^9}, {3.869600506924964*^9, 3.8696005254456587`*^9}, {
   3.8696033909019194`*^9, 3.869603453748141*^9}, 3.869603524153371*^9, {
   3.869612952170972*^9, 3.8696129624490643`*^9}, {3.869778709173188*^9, 
   3.8697787093125286`*^9}},
 Background->RGBColor[0.88, 1, 0.88],
 CellLabel->"In[71]:=",ExpressionUUID->"42ddad65-e8b4-4be1-aa81-5b3a07e98a94"],

Cell["Define utility functions.", "Text",
 CellChangeTimes->{{3.8697787223770814`*^9, 
  3.8697787353250866`*^9}},ExpressionUUID->"34a80752-47f4-46ea-8d62-\
95dbc28fc1e2"],

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"StripInt", "[", "A_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Dimensions", "[", 
           RowBox[{"A", ",", "1"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "==", "6"}], ",", 
        RowBox[{"ArrayFlatten", "[", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"A", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", 
               RowBox[{";;", "8", ";;", "2"}]}], "]"}], "]"}], ",", 
            RowBox[{"A", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", 
               RowBox[{"9", ";;"}]}], "]"}], "]"}]}], "}"}], "}"}], "]"}], 
        ",", 
        RowBox[{"A", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{";;", " ", "8", ";;", "2"}], ",", 
           RowBox[{";;", "8", ";;", "2"}]}], "]"}], "]"}]}], "]"}]}], "]"}]}],
    ";"}],
  Background->RGBColor[0.88, 1, 0.88]], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"SSum", "[", "T_", "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"Total", "[", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"T", "[", 
         RowBox[{"[", 
          RowBox[{";;", "2"}], "]"}], "]"}], ",", 
        RowBox[{"T", "[", 
         RowBox[{"[", 
          RowBox[{"4", ";;", "6"}], "]"}], "]"}], ",", 
        RowBox[{"T", "[", 
         RowBox[{"[", 
          RowBox[{"8", ";;"}], "]"}], "]"}]}], "]"}], "]"}], "/", "2"}], "+", 
    RowBox[{"3", "*", 
     RowBox[{
      RowBox[{"T", "[", 
       RowBox[{"[", "7", "]"}], "]"}], "/", "2"}]}]}]}],
  Background->RGBColor[0.88, 1, 0.88]]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.869606821049314*^9, 3.869606928803357*^9}, 
   3.869607148003058*^9, {3.8696072057966127`*^9, 3.869607215944984*^9}, {
   3.8696077548467207`*^9, 3.8696077878547444`*^9}, 3.8696129640891623`*^9, {
   3.8697624440816455`*^9, 3.869762444428275*^9}},
 Background->RGBColor[0.88, 1, 0.88],
 CellLabel->"In[75]:=",ExpressionUUID->"3277bb11-9566-403e-b261-ef78c72b3e91"],

Cell["Define default color schemes.", "Text",ExpressionUUID->"d1a517ff-08dc-4ddc-aae8-c81246f06d59"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{"DefaultBlue", "=", 
    TemplateBox[<|"color" -> RGBColor[0.368417, 0.506779, 0.709798]|>,
     "RGBColorSwatchTemplate"]}], ";", 
   RowBox[{"DefaultOrange", "=", 
    TemplateBox[<|"color" -> RGBColor[0.880722, 0.611041, 0.142051]|>,
     "RGBColorSwatchTemplate"]}], ";", 
   RowBox[{"DefaultGreen", "=", 
    TemplateBox[<|"color" -> RGBColor[0.560181, 0.691569, 0.194885]|>,
     "RGBColorSwatchTemplate"]}], ";"}],
  Background->RGBColor[0.88, 1, 0.88]]], "Input",
 InitializationCell->True,
 Background->RGBColor[0.88, 1, 0.88],
 CellLabel->"In[77]:=",ExpressionUUID->"b367610a-f38b-494b-a903-f56b58e40747"]
}, Closed]],

Cell[CellGroupData[{

Cell["Decompose A matrix into a Fourier series", "Subsection",ExpressionUUID->"f28167ca-6d68-486c-8fab-14bed0337d97"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ADcompMap", "=", 
   RowBox[{"AmatDecompose", "[", "A", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Ad", "=", 
   RowBox[{"\"\<diag\>\"", "/.", "ADcompMap"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Am", "=", 
   RowBox[{"\"\<G\>\"", "/.", "ADcompMap"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Ap", "=", 
   RowBox[{
   "\"\<\!\(\*SuperscriptBox[\(G\), \(*\)]\)\>\"", "/.", "ADcompMap"}]}], 
  ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True,
 CellChangeTimes->{3.860521658665753*^9, 3.860521706536454*^9},
 Background->RGBColor[0.88, 1, 0.88],
 CellLabel->"In[78]:=",ExpressionUUID->"385bccdb-8d04-4e91-ac49-fc8e4cf50897"],

Cell[BoxData[
 RowBox[{"Ad", "//", "MatrixForm"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.860521662860204*^9, 3.8605216655268297`*^9}, 
   3.860521706536454*^9},
 Background->RGBColor[0.88, 1, 0.88],
 CellLabel->"In[26]:=",ExpressionUUID->"b452dac3-d073-4e4c-9295-7a8e21a0c6ed"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", 
        SubscriptBox["\[CapitalDelta]", "o"]}], "-", 
       FractionBox[
        SubscriptBox["\[Kappa]", "o"], "2"]}], "0", "0", "0", "0", "0"},
     {"0", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", 
        SubscriptBox["\[CapitalDelta]", "e"]}], "-", 
       FractionBox[
        SubscriptBox["\[Kappa]", "e"], "2"]}], "0", "0", "0", "0"},
     {"0", "0", 
      RowBox[{
       RowBox[{"\[ImaginaryI]", " ", 
        SubscriptBox["\[CapitalDelta]", "o"]}], "-", 
       FractionBox[
        SubscriptBox["\[Kappa]", "o"], "2"]}], "0", "0", "0"},
     {"0", "0", "0", 
      RowBox[{
       RowBox[{"\[ImaginaryI]", " ", 
        SubscriptBox["\[CapitalDelta]", "e"]}], "-", 
       FractionBox[
        SubscriptBox["\[Kappa]", "e"], "2"]}], "0", "0"},
     {"0", "0", "0", "0", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         SubscriptBox["\[Kappa]", "m"], "2"]}], "-", 
       RowBox[{"\[ImaginaryI]", " ", 
        SubscriptBox["\[Omega]", "m"]}]}], "0"},
     {"0", "0", "0", "0", "0", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         SubscriptBox["\[Kappa]", "m"], "2"]}], "+", 
       RowBox[{"\[ImaginaryI]", " ", 
        SubscriptBox["\[Omega]", "m"]}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.8605216659174423`*^9, 3.860521706536454*^9, 
  3.8674458427231216`*^9},
 Background->RGBColor[0.88, 1, 0.88],
 CellLabel->
  "Out[26]//MatrixForm=",ExpressionUUID->"f55b5b5e-d89b-43cc-9b72-\
dd45e81834aa"],

Cell[BoxData[
 RowBox[{"Am", "//", "MatrixForm"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.860521670340522*^9, 3.860521673224161*^9}, 
   3.860521706536454*^9},
 Background->RGBColor[0.88, 1, 0.88],
 CellLabel->"In[27]:=",ExpressionUUID->"58219d23-2952-4c7c-8022-1a8d226242b7"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0", 
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], " ", 
       SubscriptBox["G", "o"]}], 
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], " ", 
       SubscriptBox["G", "o"]}]},
     {"0", "0", "0", "0", 
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], " ", 
       SubscriptBox["G", "e"]}], 
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], " ", 
       SubscriptBox["G", "e"]}]},
     {"0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0"},
     {"0", "0", 
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], " ", 
       SubscriptBox["G", "o"]}], 
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], " ", 
       SubscriptBox["G", "e"]}], "0", "0"},
     {"0", "0", 
      RowBox[{"\[ImaginaryI]", " ", 
       SubscriptBox["G", "o"]}], 
      RowBox[{"\[ImaginaryI]", " ", 
       SubscriptBox["G", "e"]}], "0", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.8605216735528936`*^9, 3.860521706536454*^9, 
  3.8674458446252975`*^9},
 Background->RGBColor[0.88, 1, 0.88],
 CellLabel->
  "Out[27]//MatrixForm=",ExpressionUUID->"08d23d63-ebf9-45fd-9cfd-\
115985fe72f0"],

Cell[BoxData[
 RowBox[{"Ap", "//", "MatrixForm"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.860521674678519*^9, 3.860521706536454*^9}},
 Background->RGBColor[0.88, 1, 0.88],
 CellLabel->"In[28]:=",ExpressionUUID->"9b82c750-3260-4232-887b-f6f7d6bd369a"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", 
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"Conjugate", "[", 
        SubscriptBox["G", "o"], "]"}]}], 
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"Conjugate", "[", 
        SubscriptBox["G", "o"], "]"}]}]},
     {"0", "0", "0", "0", 
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"Conjugate", "[", 
        SubscriptBox["G", "e"], "]"}]}], 
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"Conjugate", "[", 
        SubscriptBox["G", "e"], "]"}]}]},
     {
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], " ", 
       RowBox[{"Conjugate", "[", 
        SubscriptBox["G", "o"], "]"}]}], 
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], " ", 
       RowBox[{"Conjugate", "[", 
        SubscriptBox["G", "e"], "]"}]}], "0", "0", "0", "0"},
     {
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"Conjugate", "[", 
        SubscriptBox["G", "o"], "]"}]}], 
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"Conjugate", "[", 
        SubscriptBox["G", "e"], "]"}]}], "0", "0", "0", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.860521678742449*^9, 3.860521706536454*^9}, 
   3.8674458474203463`*^9},
 Background->RGBColor[0.88, 1, 0.88],
 CellLabel->
  "Out[28]//MatrixForm=",ExpressionUUID->"ccefcc49-a036-43bd-93f5-\
c99959b99ef8"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Solve the steady state ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["G", "i"], TraditionalForm]],ExpressionUUID->
  "26356b6b-2bed-418a-afec-cdbb09182796"]
}], "Subsection",ExpressionUUID->"71cf1a8e-abc6-4448-a7ef-983790c180c1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SteadyGConst", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["G", "e"], "->", 
      RowBox[{
       SubscriptBox["g", "e"], "*", 
       RowBox[{"SolveSteadyConst", "[", 
        RowBox[{
         SubscriptBox["\[CapitalDelta]", "e"], ",", " ", 
         SubscriptBox["\[Kappa]", "e"], ",", " ", 
         SubscriptBox["\[CapitalOmega]", "e"]}], "]"}]}]}], ",", 
     RowBox[{
      SubscriptBox["G", "o"], "->", 
      RowBox[{
       SubscriptBox["g", "o"], "*", 
       RowBox[{"SolveSteadyConst", "[", 
        RowBox[{
         SubscriptBox["\[CapitalDelta]", "o"], ",", " ", 
         SubscriptBox["\[Kappa]", "o"], ",", " ", 
         SubscriptBox["\[CapitalOmega]", "o"]}], "]"}]}]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SteadyGOsc", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["G", "e"], "->", 
      RowBox[{
       SubscriptBox["g", "e"], "*", 
       RowBox[{"SolveSteadyOsc", "[", 
        RowBox[{
         SubscriptBox["\[CapitalDelta]", "e"], ",", 
         SubscriptBox["\[Kappa]", "e"], ",", 
         SubscriptBox["\[CapitalOmega]", "e"], ",", 
         SubscriptBox["\[Omega]", "m"]}], "]"}]}]}], ",", 
     RowBox[{
      SubscriptBox["G", "o"], "->", 
      RowBox[{
       SubscriptBox["g", "o"], "*", 
       RowBox[{"SolveSteadyOsc", "[", 
        RowBox[{
         SubscriptBox["\[CapitalDelta]", "o"], ",", 
         SubscriptBox["\[Kappa]", "o"], ",", 
         SubscriptBox["\[CapitalOmega]", "o"], ",", 
         SubscriptBox["\[Omega]", "m"]}], "]"}]}]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SteadyGConstSym", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"G", "->", 
     RowBox[{"g", "*", 
      RowBox[{"SolveSteadyConst", "[", 
       RowBox[{
        SubscriptBox["\[Omega]", "m"], ",", " ", "\[Kappa]", ",", " ", 
        "\[CapitalOmega]"}], "]"}]}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SteadyGOscSym", "=", 
   RowBox[{"{", 
    RowBox[{"G", "->", 
     RowBox[{"g", "*", 
      RowBox[{"SolveSteadyOsc", "[", 
       RowBox[{
        SubscriptBox["\[Omega]", "m"], ",", "\[Kappa]", ",", 
        "\[CapitalOmega]", ",", 
        SubscriptBox["\[Omega]", "m"]}], "]"}]}]}], "}"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.867445964899315*^9, 3.8674459679747343`*^9}, {
  3.8674549131277933`*^9, 3.8674549133177032`*^9}},
 Background->RGBColor[0.88, 1, 0.88],
 CellLabel->"In[82]:=",ExpressionUUID->"36b9d24d-8318-4910-8787-007368672269"],

Cell[TextData[{
 "The steady state ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["G", "i"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "3876e2b4-3205-41ee-81fe-e7b98bc6e1aa"],
 " with constant drives."
}], "Text",
 CellChangeTimes->{{3.8674550889700108`*^9, 
  3.8674551074898977`*^9}},ExpressionUUID->"1fa5a3df-0e18-4883-8f47-\
bf92e346f0cf"],

Cell[CellGroupData[{

Cell[BoxData["SteadyGConst"], "Input",
 CellChangeTimes->{{3.867445856050073*^9, 3.867445865255844*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"22e6f9cf-8578-4274-9f2f-e083b04abbc8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SubscriptBox["G", "e"], "\[Rule]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"2", " ", 
       SubscriptBox["g", "e"], " ", 
       SubscriptBox["\[CapitalOmega]", "e"]}], 
      RowBox[{
       RowBox[{"2", " ", 
        SubscriptBox["\[CapitalDelta]", "e"]}], "-", 
       RowBox[{"\[ImaginaryI]", " ", 
        SubscriptBox["\[Kappa]", "e"]}]}]]}]}], ",", 
   RowBox[{
    SubscriptBox["G", "o"], "\[Rule]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"2", " ", 
       SubscriptBox["g", "o"], " ", 
       SubscriptBox["\[CapitalOmega]", "o"]}], 
      RowBox[{
       RowBox[{"2", " ", 
        SubscriptBox["\[CapitalDelta]", "o"]}], "-", 
       RowBox[{"\[ImaginaryI]", " ", 
        SubscriptBox["\[Kappa]", "o"]}]}]]}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.867445866092285*^9, 3.8674460206180816`*^9, 
  3.867454888395873*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"37236994-4c53-401b-88c5-cb9eff550927"]
}, Open  ]],

Cell[TextData[{
 "The steady state ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["G", "i"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "b443abc3-9deb-4502-964e-a2c503b55f26"],
 " with parametric drives."
}], "Text",
 CellChangeTimes->{{3.8674551118441143`*^9, 
  3.867455148970292*^9}},ExpressionUUID->"e77d3cdd-7697-46d8-9eb3-\
9c485fbc11cc"],

Cell[CellGroupData[{

Cell[BoxData["SteadyGOsc"], "Input",
 CellChangeTimes->{{3.8674458776023073`*^9, 3.8674458798038206`*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"7ab5d215-15b0-4f0b-a271-84e432eefcae"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SubscriptBox["G", "e"], "\[Rule]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"2", " ", 
       SubscriptBox["g", "e"], " ", 
       SubscriptBox["\[CapitalOmega]", "e"]}], 
      RowBox[{
       RowBox[{"2", " ", 
        SubscriptBox["\[CapitalDelta]", "e"]}], "-", 
       RowBox[{"\[ImaginaryI]", " ", 
        SubscriptBox["\[Kappa]", "e"]}], "-", 
       RowBox[{"4", " ", 
        SubscriptBox["\[Omega]", "m"]}]}]]}]}], ",", 
   RowBox[{
    SubscriptBox["G", "o"], "\[Rule]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"2", " ", 
       SubscriptBox["g", "o"], " ", 
       SubscriptBox["\[CapitalOmega]", "o"]}], 
      RowBox[{
       RowBox[{"2", " ", 
        SubscriptBox["\[CapitalDelta]", "o"]}], "-", 
       RowBox[{"\[ImaginaryI]", " ", 
        SubscriptBox["\[Kappa]", "o"]}], "-", 
       RowBox[{"4", " ", 
        SubscriptBox["\[Omega]", "m"]}]}]]}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.8674549199943438`*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"9745d78d-ad9b-46fe-98e9-da7c15695a52"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Define numerical values", "Subsection",ExpressionUUID->"8e6c692f-9d81-46e6-bf18-2c5a9020f364"],

Cell[BoxData[
 RowBox[{
  RowBox[{"HigginPaper", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["\[Kappa]", "e"], "->", 
      RowBox[{"2.5", "*", "2", "*", "\[Pi]"}]}], ",", 
     RowBox[{
      SubscriptBox["\[Kappa]", 
       RowBox[{"e", ",", "ex"}]], "->", 
      RowBox[{"2.3", "*", "2", "*", "\[Pi]"}]}], ",", 
     RowBox[{
      SubscriptBox["\[CapitalDelta]", "e"], "->", 
      RowBox[{"1.47", "*", "2", "*", "\[Pi]"}]}], ",", 
     RowBox[{
      SubscriptBox["g", "e"], "->", 
      RowBox[{"3.8", "*", "2", "*", "\[Pi]", "*", 
       SuperscriptBox["10", 
        RowBox[{"-", "6"}]]}]}], ",", 
     RowBox[{
      SubscriptBox["\[Kappa]", "o"], "->", 
      RowBox[{"2.1", "*", "2", "*", "\[Pi]"}]}], ",", 
     RowBox[{
      SubscriptBox["\[Kappa]", 
       RowBox[{"o", ",", "ex"}]], "->", 
      RowBox[{"1.1", "*", "2", "*", "\[Pi]"}]}], ",", 
     RowBox[{
      SubscriptBox["\[CapitalDelta]", "o"], "->", 
      RowBox[{"1.11", "*", "2", "*", "\[Pi]"}]}], ",", 
     RowBox[{
      SubscriptBox["g", "o"], "->", 
      RowBox[{"6.6", "*", "2", "*", "\[Pi]", "*", 
       SuperscriptBox["10", 
        RowBox[{"-", "6"}]]}]}], ",", 
     RowBox[{
      SubscriptBox["\[Kappa]", "m"], "->", 
      RowBox[{"N", "[", 
       RowBox[{"11", "*", "2", "*", "\[Pi]", "*", 
        SuperscriptBox["10", 
         RowBox[{"-", "6"}]]}], "]"}]}], ",", 
     RowBox[{
      SubscriptBox["\[Omega]", "m"], "->", 
      RowBox[{"1.4732", "*", "2", "*", "\[Pi]"}]}], ",", 
     RowBox[{
      SubscriptBox["\[Kappa]", 
       RowBox[{"o", ",", "int"}]], "->", 
      RowBox[{
       RowBox[{"2.1", "*", "2", "*", "\[Pi]"}], "-", 
       RowBox[{"1.1", "*", "2", "*", "\[Pi]"}]}]}], ",", 
     RowBox[{
      SubscriptBox["\[Kappa]", 
       RowBox[{"e", ",", "int"}]], "->", 
      RowBox[{
       RowBox[{"2.5", "*", "2", "*", "\[Pi]"}], "-", 
       RowBox[{"2.3", "*", "2", "*", "\[Pi]"}]}]}]}], "}"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.869600607864763*^9, 3.8696006193660145`*^9}, {
  3.869617637875471*^9, 3.8696176380334463`*^9}, {3.870283857800856*^9, 
  3.8702838588766947`*^9}},
 Background->RGBColor[
  0.88, 1, 0.88],ExpressionUUID->"7745686f-0b32-47b7-a977-a6325096aa1c"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Symmetric transducer", "Section",
 CellChangeTimes->{{3.8605365697146387`*^9, 3.8605365753830786`*^9}, {
  3.8613154833909054`*^9, 3.8613155297484083`*^9}, {3.870284207843848*^9, 
  3.870284211357009*^9}},ExpressionUUID->"7867eb35-49ae-477c-9336-\
97a74a0d9b87"],

Cell[CellGroupData[{

Cell["Solve the transfer matrices symbolically up to N=2", "Subsection",
 CellChangeTimes->{{3.8619976354895186`*^9, 3.8619976486834135`*^9}, {
  3.870283794271373*^9, 
  3.870283805439507*^9}},ExpressionUUID->"ca1c2004-083d-492f-8618-\
0f8f5be2b9ef"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"TCon", "=", 
   RowBox[{"TransFConst", "[", 
    RowBox[{"A", ",", " ", "B", ",", " ", 
     SubscriptBox["\[Omega]", "m"], ",", " ", 
     RowBox[{"Assumptions", "->", "AssumptionRealValues"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TOsc", "=", 
   RowBox[{"TransFOsc", "[", 
    RowBox[{"Ad", ",", "Ap", ",", "Am", ",", "B", ",", "1", ",", 
     SubscriptBox["\[Omega]", "m"]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TOsc2", "=", 
   RowBox[{"TransFOsc", "[", 
    RowBox[{"Ad", ",", "Ap", ",", "Am", ",", "B", ",", "2", ",", 
     SubscriptBox["\[Omega]", "m"]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"TOscp", ",", "TOscm"}], "}"}], "=", 
   RowBox[{"TMech", "[", 
    RowBox[{"Ad", ",", "Ap", ",", "Am", ",", "B", ",", "1", ",", 
     SubscriptBox["\[Omega]", "m"], ",", 
     RowBox[{"Assumptions", "->", "AssumptionRealValues"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"TOsc2p", ",", "TOsc2m"}], "}"}], "=", 
   RowBox[{"TMech", "[", 
    RowBox[{"Ad", ",", "Ap", ",", "Am", ",", "B", ",", "2", ",", 
     SubscriptBox["\[Omega]", "m"], ",", 
     RowBox[{"Assumptions", "->", "AssumptionRealValues"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"TOsc4p", ",", "TOsc4m"}], "}"}], "=", 
   RowBox[{"TForth", "[", 
    RowBox[{"Ad", ",", "Ap", ",", "Am", ",", "B", ",", "2", ",", 
     SubscriptBox["\[Omega]", "m"], ",", 
     RowBox[{"Assumptions", "->", "AssumptionRealValues"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.860701423578515*^9, 3.860701448428379*^9}, {
  3.86070154265751*^9, 3.860701551033517*^9}, {3.8607036588050556`*^9, 
  3.8607036649294047`*^9}, {3.867455608772439*^9, 3.867455611894286*^9}, {
  3.869662537221094*^9, 3.869662537493745*^9}, {3.869662654406245*^9, 
  3.8696626847758207`*^9}, {3.869664459014357*^9, 3.8696644593586206`*^9}, {
  3.870283789304385*^9, 3.8702837895031157`*^9}},
 CellLabel->"In[89]:=",ExpressionUUID->"5c80a481-be30-42f9-9a09-2ada8665e21e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Print out the solution", "Subsection",
 CellChangeTimes->{{3.8696153345332155`*^9, 
  3.869615347750327*^9}},ExpressionUUID->"27782b09-ec61-41a6-9e28-\
e630d6218fa6"],

Cell["\<\
The following two blocks shows the form of the transfer matrix with/without \
assumptions.\
\>", "Text",
 CellChangeTimes->{{3.86199789265654*^9, 
  3.8619979285385513`*^9}},ExpressionUUID->"08ba62a5-acc7-409a-b5c2-\
8c65b3faf4e6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TCon", "/.", "SymmetricValues"}], "//", "Simplify"}], "//", 
  "MatrixForm"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.860701505461444*^9, 3.8607015060613966`*^9}, 
   3.8607019740633373`*^9, {3.869606052745058*^9, 3.8696060627107906`*^9}, {
   3.8696082333443274`*^9, 3.869608235141656*^9}, {3.869608619288084*^9, 
   3.8696086378418474`*^9}, 3.8696087511170306`*^9, {3.869615196478033*^9, 
   3.8696152182056046`*^9}, 3.8696152767499533`*^9},
 Background->RGBColor[0.88, 1, 0.88],
 CellLabel->"In[41]:=",ExpressionUUID->"26ab5ffe-71b4-4484-8baf-c02adab789ff"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox[
       RowBox[{
        RowBox[{
         RowBox[{"-", "\[Kappa]"}], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"2", " ", 
            SubscriptBox["\[Kappa]", "ex"]}]}], ")"}], " ", 
         SubscriptBox["\[Kappa]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Kappa]", "m"], "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
        RowBox[{"32", " ", "G", " ", 
         SubscriptBox["\[Omega]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[ImaginaryI]", " ", "\[Kappa]", " ", 
            SubscriptBox["\[Kappa]", "ex"]}], "+", 
           RowBox[{"4", " ", "\[Kappa]", " ", 
            SubscriptBox["\[Omega]", "m"]}], "-", 
           RowBox[{"4", " ", 
            SubscriptBox["\[Kappa]", "ex"], " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}], 
       RowBox[{"\[Kappa]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Kappa]", " ", 
           SubscriptBox["\[Kappa]", "m"], " ", 
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[Kappa]", "m"], "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
          RowBox[{"128", " ", "G", " ", 
           SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]], 
      FractionBox[
       RowBox[{"2", " ", 
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Kappa]", " ", 
           SubscriptBox["\[Kappa]", "m"], " ", 
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[Kappa]", "m"], "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
          RowBox[{"16", " ", "\[ImaginaryI]", " ", "G", " ", 
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "+", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           SubscriptBox["\[Omega]", "m"], " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}], 
       RowBox[{"\[Kappa]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Kappa]", " ", 
           SubscriptBox["\[Kappa]", "m"], " ", 
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[Kappa]", "m"], "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
          RowBox[{"128", " ", "G", " ", 
           SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"32", " ", "\[ImaginaryI]", " ", "G", " ", 
         SubscriptBox["\[Kappa]", "ex"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         SubscriptBox["\[Omega]", "m"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}], 
        RowBox[{"\[Kappa]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "\[Kappa]"}], " ", 
            SubscriptBox["\[Kappa]", "m"], " ", 
            RowBox[{"(", 
             RowBox[{"\[Kappa]", "-", 
              RowBox[{"4", " ", "\[ImaginaryI]", " ", 
               SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["\[Kappa]", "m"], "-", 
              RowBox[{"4", " ", "\[ImaginaryI]", " ", 
               SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
           RowBox[{"128", " ", "G", " ", 
            SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
            RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"32", " ", "G", " ", 
         SqrtBox[
          RowBox[{"\[Kappa]", "-", 
           SubscriptBox["\[Kappa]", "ex"]}]], " ", 
         SqrtBox[
          SubscriptBox["\[Kappa]", "ex"]], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         SubscriptBox["\[Omega]", "m"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}], 
        RowBox[{"\[Kappa]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Kappa]", " ", 
            SubscriptBox["\[Kappa]", "m"], " ", 
            RowBox[{"(", 
             RowBox[{"\[Kappa]", "-", 
              RowBox[{"4", " ", "\[ImaginaryI]", " ", 
               SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[ImaginaryI]", " ", 
               SubscriptBox["\[Kappa]", "m"]}], "+", 
              RowBox[{"4", " ", 
               SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
           RowBox[{"128", " ", "\[ImaginaryI]", " ", "G", " ", 
            SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
            RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"32", " ", "\[ImaginaryI]", " ", 
         SuperscriptBox["G", "2"], " ", 
         SubscriptBox["\[Kappa]", "ex"], " ", 
         SubscriptBox["\[Omega]", "m"]}], 
        RowBox[{
         RowBox[{
          RowBox[{"-", "\[Kappa]"}], " ", 
          SubscriptBox["\[Kappa]", "m"], " ", 
          RowBox[{"(", 
           RowBox[{"\[Kappa]", "-", 
            RowBox[{"4", " ", "\[ImaginaryI]", " ", 
             SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["\[Kappa]", "m"], "-", 
            RowBox[{"4", " ", "\[ImaginaryI]", " ", 
             SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
         RowBox[{"128", " ", "G", " ", 
          SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
          RowBox[{"Conjugate", "[", "G", "]"}]}]}]]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"32", " ", 
         SuperscriptBox["G", "2"], " ", 
         SqrtBox[
          RowBox[{"\[Kappa]", "-", 
           SubscriptBox["\[Kappa]", "ex"]}]], " ", 
         SqrtBox[
          SubscriptBox["\[Kappa]", "ex"]], " ", 
         SubscriptBox["\[Omega]", "m"]}], 
        RowBox[{
         RowBox[{"\[Kappa]", " ", 
          SubscriptBox["\[Kappa]", "m"], " ", 
          RowBox[{"(", 
           RowBox[{"\[Kappa]", "-", 
            RowBox[{"4", " ", "\[ImaginaryI]", " ", 
             SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[ImaginaryI]", " ", 
             SubscriptBox["\[Kappa]", "m"]}], "+", 
            RowBox[{"4", " ", 
             SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
         RowBox[{"128", " ", "\[ImaginaryI]", " ", "G", " ", 
          SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
          RowBox[{"Conjugate", "[", "G", "]"}]}]}]]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"32", " ", "\[ImaginaryI]", " ", 
         SuperscriptBox["G", "2"], " ", 
         SubscriptBox["\[Kappa]", "ex"], " ", 
         SubscriptBox["\[Omega]", "m"]}], 
        RowBox[{
         RowBox[{
          RowBox[{"-", "\[Kappa]"}], " ", 
          SubscriptBox["\[Kappa]", "m"], " ", 
          RowBox[{"(", 
           RowBox[{"\[Kappa]", "-", 
            RowBox[{"4", " ", "\[ImaginaryI]", " ", 
             SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["\[Kappa]", "m"], "-", 
            RowBox[{"4", " ", "\[ImaginaryI]", " ", 
             SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
         RowBox[{"128", " ", "G", " ", 
          SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
          RowBox[{"Conjugate", "[", "G", "]"}]}]}]]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"32", " ", 
         SuperscriptBox["G", "2"], " ", 
         SqrtBox[
          RowBox[{"\[Kappa]", "-", 
           SubscriptBox["\[Kappa]", "ex"]}]], " ", 
         SqrtBox[
          SubscriptBox["\[Kappa]", "ex"]], " ", 
         SubscriptBox["\[Omega]", "m"]}], 
        RowBox[{
         RowBox[{"\[Kappa]", " ", 
          SubscriptBox["\[Kappa]", "m"], " ", 
          RowBox[{"(", 
           RowBox[{"\[Kappa]", "-", 
            RowBox[{"4", " ", "\[ImaginaryI]", " ", 
             SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[ImaginaryI]", " ", 
             SubscriptBox["\[Kappa]", "m"]}], "+", 
            RowBox[{"4", " ", 
             SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
         RowBox[{"128", " ", "\[ImaginaryI]", " ", "G", " ", 
          SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
          RowBox[{"Conjugate", "[", "G", "]"}]}]}]]}], 
      FractionBox[
       RowBox[{"4", " ", "G", " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "m"]], " ", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["\[Kappa]", "m"], "-", 
          RowBox[{"4", " ", "\[ImaginaryI]", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", "\[Kappa]"}], "+", 
          RowBox[{"4", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], 
       RowBox[{
        RowBox[{
         RowBox[{"-", "\[Kappa]"}], " ", 
         SubscriptBox["\[Kappa]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Kappa]", "m"], "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
        RowBox[{"128", " ", "G", " ", 
         SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}]], 
      FractionBox[
       RowBox[{"4", " ", "G", " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        SubsuperscriptBox["\[Kappa]", "m", 
         RowBox[{"3", "/", "2"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", "\[Kappa]"}], "+", 
          RowBox[{"4", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], 
       RowBox[{
        RowBox[{
         RowBox[{"-", "\[Kappa]"}], " ", 
         SubscriptBox["\[Kappa]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Kappa]", "m"], "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
        RowBox[{"128", " ", "G", " ", 
         SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}]]},
     {
      FractionBox[
       RowBox[{"2", " ", 
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Kappa]", " ", 
           SubscriptBox["\[Kappa]", "m"], " ", 
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[Kappa]", "m"], "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
          RowBox[{"16", " ", "\[ImaginaryI]", " ", "G", " ", 
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "+", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           SubscriptBox["\[Omega]", "m"], " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}], 
       RowBox[{"\[Kappa]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Kappa]", " ", 
           SubscriptBox["\[Kappa]", "m"], " ", 
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[Kappa]", "m"], "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
          RowBox[{"128", " ", "G", " ", 
           SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]], 
      FractionBox[
       RowBox[{
        RowBox[{"\[Kappa]", " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"2", " ", 
            SubscriptBox["\[Kappa]", "ex"]}]}], ")"}], " ", 
         SubscriptBox["\[Kappa]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Kappa]", "m"], "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
        RowBox[{"32", " ", "G", " ", 
         SubscriptBox["\[Omega]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[ImaginaryI]", " ", 
            SuperscriptBox["\[Kappa]", "2"]}], "-", 
           RowBox[{"\[ImaginaryI]", " ", "\[Kappa]", " ", 
            SubscriptBox["\[Kappa]", "ex"]}], "+", 
           RowBox[{"4", " ", 
            SubscriptBox["\[Kappa]", "ex"], " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}], 
       RowBox[{"\[Kappa]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Kappa]", " ", 
           SubscriptBox["\[Kappa]", "m"], " ", 
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[Kappa]", "m"], "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
          RowBox[{"128", " ", "G", " ", 
           SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"32", " ", "G", " ", 
         SqrtBox[
          RowBox[{"\[Kappa]", "-", 
           SubscriptBox["\[Kappa]", "ex"]}]], " ", 
         SqrtBox[
          SubscriptBox["\[Kappa]", "ex"]], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         SubscriptBox["\[Omega]", "m"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}], 
        RowBox[{"\[Kappa]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Kappa]", " ", 
            SubscriptBox["\[Kappa]", "m"], " ", 
            RowBox[{"(", 
             RowBox[{"\[Kappa]", "-", 
              RowBox[{"4", " ", "\[ImaginaryI]", " ", 
               SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[ImaginaryI]", " ", 
               SubscriptBox["\[Kappa]", "m"]}], "+", 
              RowBox[{"4", " ", 
               SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
           RowBox[{"128", " ", "\[ImaginaryI]", " ", "G", " ", 
            SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
            RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"32", " ", "\[ImaginaryI]", " ", "G", " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           SubscriptBox["\[Kappa]", "ex"]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         SubscriptBox["\[Omega]", "m"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}], 
        RowBox[{"\[Kappa]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "\[Kappa]"}], " ", 
            SubscriptBox["\[Kappa]", "m"], " ", 
            RowBox[{"(", 
             RowBox[{"\[Kappa]", "-", 
              RowBox[{"4", " ", "\[ImaginaryI]", " ", 
               SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["\[Kappa]", "m"], "-", 
              RowBox[{"4", " ", "\[ImaginaryI]", " ", 
               SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
           RowBox[{"128", " ", "G", " ", 
            SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
            RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"32", " ", 
         SuperscriptBox["G", "2"], " ", 
         SqrtBox[
          RowBox[{"\[Kappa]", "-", 
           SubscriptBox["\[Kappa]", "ex"]}]], " ", 
         SqrtBox[
          SubscriptBox["\[Kappa]", "ex"]], " ", 
         SubscriptBox["\[Omega]", "m"]}], 
        RowBox[{
         RowBox[{"\[Kappa]", " ", 
          SubscriptBox["\[Kappa]", "m"], " ", 
          RowBox[{"(", 
           RowBox[{"\[Kappa]", "-", 
            RowBox[{"4", " ", "\[ImaginaryI]", " ", 
             SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[ImaginaryI]", " ", 
             SubscriptBox["\[Kappa]", "m"]}], "+", 
            RowBox[{"4", " ", 
             SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
         RowBox[{"128", " ", "\[ImaginaryI]", " ", "G", " ", 
          SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
          RowBox[{"Conjugate", "[", "G", "]"}]}]}]]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"32", " ", "\[ImaginaryI]", " ", 
         SuperscriptBox["G", "2"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           SubscriptBox["\[Kappa]", "ex"]}], ")"}], " ", 
         SubscriptBox["\[Omega]", "m"]}], 
        RowBox[{
         RowBox[{
          RowBox[{"-", "\[Kappa]"}], " ", 
          SubscriptBox["\[Kappa]", "m"], " ", 
          RowBox[{"(", 
           RowBox[{"\[Kappa]", "-", 
            RowBox[{"4", " ", "\[ImaginaryI]", " ", 
             SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["\[Kappa]", "m"], "-", 
            RowBox[{"4", " ", "\[ImaginaryI]", " ", 
             SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
         RowBox[{"128", " ", "G", " ", 
          SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
          RowBox[{"Conjugate", "[", "G", "]"}]}]}]]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"32", " ", 
         SuperscriptBox["G", "2"], " ", 
         SqrtBox[
          RowBox[{"\[Kappa]", "-", 
           SubscriptBox["\[Kappa]", "ex"]}]], " ", 
         SqrtBox[
          SubscriptBox["\[Kappa]", "ex"]], " ", 
         SubscriptBox["\[Omega]", "m"]}], 
        RowBox[{
         RowBox[{"\[Kappa]", " ", 
          SubscriptBox["\[Kappa]", "m"], " ", 
          RowBox[{"(", 
           RowBox[{"\[Kappa]", "-", 
            RowBox[{"4", " ", "\[ImaginaryI]", " ", 
             SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[ImaginaryI]", " ", 
             SubscriptBox["\[Kappa]", "m"]}], "+", 
            RowBox[{"4", " ", 
             SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
         RowBox[{"128", " ", "\[ImaginaryI]", " ", "G", " ", 
          SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
          RowBox[{"Conjugate", "[", "G", "]"}]}]}]]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"32", " ", "\[ImaginaryI]", " ", 
         SuperscriptBox["G", "2"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           SubscriptBox["\[Kappa]", "ex"]}], ")"}], " ", 
         SubscriptBox["\[Omega]", "m"]}], 
        RowBox[{
         RowBox[{
          RowBox[{"-", "\[Kappa]"}], " ", 
          SubscriptBox["\[Kappa]", "m"], " ", 
          RowBox[{"(", 
           RowBox[{"\[Kappa]", "-", 
            RowBox[{"4", " ", "\[ImaginaryI]", " ", 
             SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["\[Kappa]", "m"], "-", 
            RowBox[{"4", " ", "\[ImaginaryI]", " ", 
             SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
         RowBox[{"128", " ", "G", " ", 
          SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
          RowBox[{"Conjugate", "[", "G", "]"}]}]}]]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"4", " ", "\[ImaginaryI]", " ", "G", " ", 
         SqrtBox[
          RowBox[{"\[Kappa]", "-", 
           SubscriptBox["\[Kappa]", "ex"]}]], " ", 
         SqrtBox[
          SubscriptBox["\[Kappa]", "m"]], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Kappa]", "m"], "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], 
        RowBox[{
         RowBox[{"\[Kappa]", " ", 
          SubscriptBox["\[Kappa]", "m"], " ", 
          RowBox[{"(", 
           RowBox[{"\[Kappa]", "-", 
            RowBox[{"4", " ", "\[ImaginaryI]", " ", 
             SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["\[Kappa]", "m"], "-", 
            RowBox[{"4", " ", "\[ImaginaryI]", " ", 
             SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
         RowBox[{"128", " ", "G", " ", 
          SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
          RowBox[{"Conjugate", "[", "G", "]"}]}]}]]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"4", " ", "\[ImaginaryI]", " ", "G", " ", 
         SqrtBox[
          RowBox[{"\[Kappa]", "-", 
           SubscriptBox["\[Kappa]", "ex"]}]], " ", 
         SubsuperscriptBox["\[Kappa]", "m", 
          RowBox[{"3", "/", "2"}]], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], 
        RowBox[{
         RowBox[{"\[Kappa]", " ", 
          SubscriptBox["\[Kappa]", "m"], " ", 
          RowBox[{"(", 
           RowBox[{"\[Kappa]", "-", 
            RowBox[{"4", " ", "\[ImaginaryI]", " ", 
             SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["\[Kappa]", "m"], "-", 
            RowBox[{"4", " ", "\[ImaginaryI]", " ", 
             SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
         RowBox[{"128", " ", "G", " ", 
          SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
          RowBox[{"Conjugate", "[", "G", "]"}]}]}]]}]},
     {
      RowBox[{"-", 
       FractionBox[
        RowBox[{"32", " ", "\[ImaginaryI]", " ", "G", " ", 
         SubscriptBox["\[Kappa]", "ex"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         SubscriptBox["\[Omega]", "m"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}], 
        RowBox[{"\[Kappa]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "\[Kappa]"}], " ", 
            SubscriptBox["\[Kappa]", "m"], " ", 
            RowBox[{"(", 
             RowBox[{"\[Kappa]", "-", 
              RowBox[{"4", " ", "\[ImaginaryI]", " ", 
               SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["\[Kappa]", "m"], "-", 
              RowBox[{"4", " ", "\[ImaginaryI]", " ", 
               SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
           RowBox[{"128", " ", "G", " ", 
            SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
            RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"32", " ", "G", " ", 
         SqrtBox[
          RowBox[{"\[Kappa]", "-", 
           SubscriptBox["\[Kappa]", "ex"]}]], " ", 
         SqrtBox[
          SubscriptBox["\[Kappa]", "ex"]], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         SubscriptBox["\[Omega]", "m"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}], 
        RowBox[{"\[Kappa]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Kappa]", " ", 
            SubscriptBox["\[Kappa]", "m"], " ", 
            RowBox[{"(", 
             RowBox[{"\[Kappa]", "-", 
              RowBox[{"4", " ", "\[ImaginaryI]", " ", 
               SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[ImaginaryI]", " ", 
               SubscriptBox["\[Kappa]", "m"]}], "+", 
              RowBox[{"4", " ", 
               SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
           RowBox[{"128", " ", "\[ImaginaryI]", " ", "G", " ", 
            SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
            RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]]}], 
      FractionBox[
       RowBox[{
        RowBox[{
         RowBox[{"-", "\[Kappa]"}], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"2", " ", 
            SubscriptBox["\[Kappa]", "ex"]}]}], ")"}], " ", 
         SubscriptBox["\[Kappa]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Kappa]", "m"], "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
        RowBox[{"32", " ", "G", " ", 
         SubscriptBox["\[Omega]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[ImaginaryI]", " ", "\[Kappa]", " ", 
            SubscriptBox["\[Kappa]", "ex"]}], "+", 
           RowBox[{"4", " ", "\[Kappa]", " ", 
            SubscriptBox["\[Omega]", "m"]}], "-", 
           RowBox[{"4", " ", 
            SubscriptBox["\[Kappa]", "ex"], " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}], 
       RowBox[{"\[Kappa]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Kappa]", " ", 
           SubscriptBox["\[Kappa]", "m"], " ", 
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[Kappa]", "m"], "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
          RowBox[{"128", " ", "G", " ", 
           SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]], 
      FractionBox[
       RowBox[{"2", " ", 
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Kappa]", " ", 
           SubscriptBox["\[Kappa]", "m"], " ", 
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[Kappa]", "m"], "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
          RowBox[{"16", " ", "\[ImaginaryI]", " ", "G", " ", 
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "+", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           SubscriptBox["\[Omega]", "m"], " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}], 
       RowBox[{"\[Kappa]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Kappa]", " ", 
           SubscriptBox["\[Kappa]", "m"], " ", 
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[Kappa]", "m"], "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
          RowBox[{"128", " ", "G", " ", 
           SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"32", " ", "\[ImaginaryI]", " ", 
         SuperscriptBox["G", "2"], " ", 
         SubscriptBox["\[Kappa]", "ex"], " ", 
         SubscriptBox["\[Omega]", "m"]}], 
        RowBox[{
         RowBox[{
          RowBox[{"-", "\[Kappa]"}], " ", 
          SubscriptBox["\[Kappa]", "m"], " ", 
          RowBox[{"(", 
           RowBox[{"\[Kappa]", "-", 
            RowBox[{"4", " ", "\[ImaginaryI]", " ", 
             SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["\[Kappa]", "m"], "-", 
            RowBox[{"4", " ", "\[ImaginaryI]", " ", 
             SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
         RowBox[{"128", " ", "G", " ", 
          SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
          RowBox[{"Conjugate", "[", "G", "]"}]}]}]]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"32", " ", 
         SuperscriptBox["G", "2"], " ", 
         SqrtBox[
          RowBox[{"\[Kappa]", "-", 
           SubscriptBox["\[Kappa]", "ex"]}]], " ", 
         SqrtBox[
          SubscriptBox["\[Kappa]", "ex"]], " ", 
         SubscriptBox["\[Omega]", "m"]}], 
        RowBox[{
         RowBox[{"\[Kappa]", " ", 
          SubscriptBox["\[Kappa]", "m"], " ", 
          RowBox[{"(", 
           RowBox[{"\[Kappa]", "-", 
            RowBox[{"4", " ", "\[ImaginaryI]", " ", 
             SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[ImaginaryI]", " ", 
             SubscriptBox["\[Kappa]", "m"]}], "+", 
            RowBox[{"4", " ", 
             SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
         RowBox[{"128", " ", "\[ImaginaryI]", " ", "G", " ", 
          SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
          RowBox[{"Conjugate", "[", "G", "]"}]}]}]]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"32", " ", "\[ImaginaryI]", " ", 
         SuperscriptBox["G", "2"], " ", 
         SubscriptBox["\[Kappa]", "ex"], " ", 
         SubscriptBox["\[Omega]", "m"]}], 
        RowBox[{
         RowBox[{
          RowBox[{"-", "\[Kappa]"}], " ", 
          SubscriptBox["\[Kappa]", "m"], " ", 
          RowBox[{"(", 
           RowBox[{"\[Kappa]", "-", 
            RowBox[{"4", " ", "\[ImaginaryI]", " ", 
             SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["\[Kappa]", "m"], "-", 
            RowBox[{"4", " ", "\[ImaginaryI]", " ", 
             SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
         RowBox[{"128", " ", "G", " ", 
          SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
          RowBox[{"Conjugate", "[", "G", "]"}]}]}]]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"32", " ", 
         SuperscriptBox["G", "2"], " ", 
         SqrtBox[
          RowBox[{"\[Kappa]", "-", 
           SubscriptBox["\[Kappa]", "ex"]}]], " ", 
         SqrtBox[
          SubscriptBox["\[Kappa]", "ex"]], " ", 
         SubscriptBox["\[Omega]", "m"]}], 
        RowBox[{
         RowBox[{"\[Kappa]", " ", 
          SubscriptBox["\[Kappa]", "m"], " ", 
          RowBox[{"(", 
           RowBox[{"\[Kappa]", "-", 
            RowBox[{"4", " ", "\[ImaginaryI]", " ", 
             SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[ImaginaryI]", " ", 
             SubscriptBox["\[Kappa]", "m"]}], "+", 
            RowBox[{"4", " ", 
             SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
         RowBox[{"128", " ", "\[ImaginaryI]", " ", "G", " ", 
          SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
          RowBox[{"Conjugate", "[", "G", "]"}]}]}]]}], 
      FractionBox[
       RowBox[{"4", " ", "G", " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "m"]], " ", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["\[Kappa]", "m"], "-", 
          RowBox[{"4", " ", "\[ImaginaryI]", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", "\[Kappa]"}], "+", 
          RowBox[{"4", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], 
       RowBox[{
        RowBox[{
         RowBox[{"-", "\[Kappa]"}], " ", 
         SubscriptBox["\[Kappa]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Kappa]", "m"], "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
        RowBox[{"128", " ", "G", " ", 
         SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}]], 
      FractionBox[
       RowBox[{"4", " ", "G", " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        SubsuperscriptBox["\[Kappa]", "m", 
         RowBox[{"3", "/", "2"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", "\[Kappa]"}], "+", 
          RowBox[{"4", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], 
       RowBox[{
        RowBox[{
         RowBox[{"-", "\[Kappa]"}], " ", 
         SubscriptBox["\[Kappa]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Kappa]", "m"], "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
        RowBox[{"128", " ", "G", " ", 
         SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}]]},
     {
      RowBox[{"-", 
       FractionBox[
        RowBox[{"32", " ", "G", " ", 
         SqrtBox[
          RowBox[{"\[Kappa]", "-", 
           SubscriptBox["\[Kappa]", "ex"]}]], " ", 
         SqrtBox[
          SubscriptBox["\[Kappa]", "ex"]], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         SubscriptBox["\[Omega]", "m"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}], 
        RowBox[{"\[Kappa]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Kappa]", " ", 
            SubscriptBox["\[Kappa]", "m"], " ", 
            RowBox[{"(", 
             RowBox[{"\[Kappa]", "-", 
              RowBox[{"4", " ", "\[ImaginaryI]", " ", 
               SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[ImaginaryI]", " ", 
               SubscriptBox["\[Kappa]", "m"]}], "+", 
              RowBox[{"4", " ", 
               SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
           RowBox[{"128", " ", "\[ImaginaryI]", " ", "G", " ", 
            SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
            RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"32", " ", "\[ImaginaryI]", " ", "G", " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           SubscriptBox["\[Kappa]", "ex"]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         SubscriptBox["\[Omega]", "m"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}], 
        RowBox[{"\[Kappa]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "\[Kappa]"}], " ", 
            SubscriptBox["\[Kappa]", "m"], " ", 
            RowBox[{"(", 
             RowBox[{"\[Kappa]", "-", 
              RowBox[{"4", " ", "\[ImaginaryI]", " ", 
               SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["\[Kappa]", "m"], "-", 
              RowBox[{"4", " ", "\[ImaginaryI]", " ", 
               SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
           RowBox[{"128", " ", "G", " ", 
            SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
            RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]]}], 
      FractionBox[
       RowBox[{"2", " ", 
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Kappa]", " ", 
           SubscriptBox["\[Kappa]", "m"], " ", 
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[Kappa]", "m"], "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
          RowBox[{"16", " ", "\[ImaginaryI]", " ", "G", " ", 
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "+", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           SubscriptBox["\[Omega]", "m"], " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}], 
       RowBox[{"\[Kappa]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Kappa]", " ", 
           SubscriptBox["\[Kappa]", "m"], " ", 
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[Kappa]", "m"], "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
          RowBox[{"128", " ", "G", " ", 
           SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]], 
      FractionBox[
       RowBox[{
        RowBox[{"\[Kappa]", " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"2", " ", 
            SubscriptBox["\[Kappa]", "ex"]}]}], ")"}], " ", 
         SubscriptBox["\[Kappa]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Kappa]", "m"], "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
        RowBox[{"32", " ", "G", " ", 
         SubscriptBox["\[Omega]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[ImaginaryI]", " ", 
            SuperscriptBox["\[Kappa]", "2"]}], "-", 
           RowBox[{"\[ImaginaryI]", " ", "\[Kappa]", " ", 
            SubscriptBox["\[Kappa]", "ex"]}], "+", 
           RowBox[{"4", " ", 
            SubscriptBox["\[Kappa]", "ex"], " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}], 
       RowBox[{"\[Kappa]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Kappa]", " ", 
           SubscriptBox["\[Kappa]", "m"], " ", 
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[Kappa]", "m"], "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
          RowBox[{"128", " ", "G", " ", 
           SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"32", " ", 
         SuperscriptBox["G", "2"], " ", 
         SqrtBox[
          RowBox[{"\[Kappa]", "-", 
           SubscriptBox["\[Kappa]", "ex"]}]], " ", 
         SqrtBox[
          SubscriptBox["\[Kappa]", "ex"]], " ", 
         SubscriptBox["\[Omega]", "m"]}], 
        RowBox[{
         RowBox[{"\[Kappa]", " ", 
          SubscriptBox["\[Kappa]", "m"], " ", 
          RowBox[{"(", 
           RowBox[{"\[Kappa]", "-", 
            RowBox[{"4", " ", "\[ImaginaryI]", " ", 
             SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[ImaginaryI]", " ", 
             SubscriptBox["\[Kappa]", "m"]}], "+", 
            RowBox[{"4", " ", 
             SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
         RowBox[{"128", " ", "\[ImaginaryI]", " ", "G", " ", 
          SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
          RowBox[{"Conjugate", "[", "G", "]"}]}]}]]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"32", " ", "\[ImaginaryI]", " ", 
         SuperscriptBox["G", "2"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           SubscriptBox["\[Kappa]", "ex"]}], ")"}], " ", 
         SubscriptBox["\[Omega]", "m"]}], 
        RowBox[{
         RowBox[{
          RowBox[{"-", "\[Kappa]"}], " ", 
          SubscriptBox["\[Kappa]", "m"], " ", 
          RowBox[{"(", 
           RowBox[{"\[Kappa]", "-", 
            RowBox[{"4", " ", "\[ImaginaryI]", " ", 
             SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["\[Kappa]", "m"], "-", 
            RowBox[{"4", " ", "\[ImaginaryI]", " ", 
             SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
         RowBox[{"128", " ", "G", " ", 
          SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
          RowBox[{"Conjugate", "[", "G", "]"}]}]}]]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"32", " ", 
         SuperscriptBox["G", "2"], " ", 
         SqrtBox[
          RowBox[{"\[Kappa]", "-", 
           SubscriptBox["\[Kappa]", "ex"]}]], " ", 
         SqrtBox[
          SubscriptBox["\[Kappa]", "ex"]], " ", 
         SubscriptBox["\[Omega]", "m"]}], 
        RowBox[{
         RowBox[{"\[Kappa]", " ", 
          SubscriptBox["\[Kappa]", "m"], " ", 
          RowBox[{"(", 
           RowBox[{"\[Kappa]", "-", 
            RowBox[{"4", " ", "\[ImaginaryI]", " ", 
             SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[ImaginaryI]", " ", 
             SubscriptBox["\[Kappa]", "m"]}], "+", 
            RowBox[{"4", " ", 
             SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
         RowBox[{"128", " ", "\[ImaginaryI]", " ", "G", " ", 
          SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
          RowBox[{"Conjugate", "[", "G", "]"}]}]}]]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"32", " ", "\[ImaginaryI]", " ", 
         SuperscriptBox["G", "2"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           SubscriptBox["\[Kappa]", "ex"]}], ")"}], " ", 
         SubscriptBox["\[Omega]", "m"]}], 
        RowBox[{
         RowBox[{
          RowBox[{"-", "\[Kappa]"}], " ", 
          SubscriptBox["\[Kappa]", "m"], " ", 
          RowBox[{"(", 
           RowBox[{"\[Kappa]", "-", 
            RowBox[{"4", " ", "\[ImaginaryI]", " ", 
             SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["\[Kappa]", "m"], "-", 
            RowBox[{"4", " ", "\[ImaginaryI]", " ", 
             SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
         RowBox[{"128", " ", "G", " ", 
          SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
          RowBox[{"Conjugate", "[", "G", "]"}]}]}]]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"4", " ", "\[ImaginaryI]", " ", "G", " ", 
         SqrtBox[
          RowBox[{"\[Kappa]", "-", 
           SubscriptBox["\[Kappa]", "ex"]}]], " ", 
         SqrtBox[
          SubscriptBox["\[Kappa]", "m"]], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Kappa]", "m"], "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], 
        RowBox[{
         RowBox[{"\[Kappa]", " ", 
          SubscriptBox["\[Kappa]", "m"], " ", 
          RowBox[{"(", 
           RowBox[{"\[Kappa]", "-", 
            RowBox[{"4", " ", "\[ImaginaryI]", " ", 
             SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["\[Kappa]", "m"], "-", 
            RowBox[{"4", " ", "\[ImaginaryI]", " ", 
             SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
         RowBox[{"128", " ", "G", " ", 
          SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
          RowBox[{"Conjugate", "[", "G", "]"}]}]}]]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"4", " ", "\[ImaginaryI]", " ", "G", " ", 
         SqrtBox[
          RowBox[{"\[Kappa]", "-", 
           SubscriptBox["\[Kappa]", "ex"]}]], " ", 
         SubsuperscriptBox["\[Kappa]", "m", 
          RowBox[{"3", "/", "2"}]], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], 
        RowBox[{
         RowBox[{"\[Kappa]", " ", 
          SubscriptBox["\[Kappa]", "m"], " ", 
          RowBox[{"(", 
           RowBox[{"\[Kappa]", "-", 
            RowBox[{"4", " ", "\[ImaginaryI]", " ", 
             SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["\[Kappa]", "m"], "-", 
            RowBox[{"4", " ", "\[ImaginaryI]", " ", 
             SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
         RowBox[{"128", " ", "G", " ", 
          SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
          RowBox[{"Conjugate", "[", "G", "]"}]}]}]]}]},
     {
      FractionBox[
       RowBox[{"32", " ", "\[ImaginaryI]", " ", 
        SubscriptBox["\[Kappa]", "ex"], " ", 
        SubscriptBox["\[Omega]", "m"], " ", 
        SuperscriptBox[
         RowBox[{"Conjugate", "[", "G", "]"}], "2"]}], 
       RowBox[{
        RowBox[{
         RowBox[{"-", "\[Kappa]"}], " ", 
         SubscriptBox["\[Kappa]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Kappa]", "m"], "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
        RowBox[{"128", " ", "G", " ", 
         SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}]], 
      FractionBox[
       RowBox[{"32", " ", 
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        SubscriptBox["\[Omega]", "m"], " ", 
        SuperscriptBox[
         RowBox[{"Conjugate", "[", "G", "]"}], "2"]}], 
       RowBox[{
        RowBox[{"\[Kappa]", " ", 
         SubscriptBox["\[Kappa]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[ImaginaryI]", " ", 
            SubscriptBox["\[Kappa]", "m"]}], "+", 
           RowBox[{"4", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
        RowBox[{"128", " ", "\[ImaginaryI]", " ", "G", " ", 
         SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}]], 
      FractionBox[
       RowBox[{"32", " ", "\[ImaginaryI]", " ", 
        SubscriptBox["\[Kappa]", "ex"], " ", 
        SubscriptBox["\[Omega]", "m"], " ", 
        SuperscriptBox[
         RowBox[{"Conjugate", "[", "G", "]"}], "2"]}], 
       RowBox[{
        RowBox[{
         RowBox[{"-", "\[Kappa]"}], " ", 
         SubscriptBox["\[Kappa]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Kappa]", "m"], "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
        RowBox[{"128", " ", "G", " ", 
         SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}]], 
      FractionBox[
       RowBox[{"32", " ", 
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        SubscriptBox["\[Omega]", "m"], " ", 
        SuperscriptBox[
         RowBox[{"Conjugate", "[", "G", "]"}], "2"]}], 
       RowBox[{
        RowBox[{"\[Kappa]", " ", 
         SubscriptBox["\[Kappa]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[ImaginaryI]", " ", 
            SubscriptBox["\[Kappa]", "m"]}], "+", 
           RowBox[{"4", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
        RowBox[{"128", " ", "\[ImaginaryI]", " ", "G", " ", 
         SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}]], 
      FractionBox[
       RowBox[{
        RowBox[{"\[Kappa]", " ", 
         SubscriptBox["\[Kappa]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["\[Kappa]", "ex"], "+", 
              RowBox[{"2", " ", "\[ImaginaryI]", " ", 
               SubscriptBox["\[Omega]", "m"]}]}], ")"}]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Kappa]", "m"], "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[ImaginaryI]", " ", "\[Kappa]"}], "+", 
           RowBox[{"4", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
        RowBox[{"32", " ", "G", " ", 
         SubscriptBox["\[Omega]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Kappa]", " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["\[Kappa]", "ex"], "+", 
              RowBox[{"4", " ", "\[ImaginaryI]", " ", 
               SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
           RowBox[{"8", " ", 
            SubscriptBox["\[Omega]", "m"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], " ", 
               SubscriptBox["\[Kappa]", "ex"]}], "+", 
              RowBox[{"2", " ", 
               SubscriptBox["\[Omega]", "m"]}]}], ")"}]}]}], ")"}], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", "\[Kappa]"}], "+", 
          RowBox[{"4", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[Kappa]"}], " ", 
           SubscriptBox["\[Kappa]", "m"], " ", 
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[Kappa]", "m"], "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
          RowBox[{"128", " ", "G", " ", 
           SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]], 
      FractionBox[
       RowBox[{"2", " ", 
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Kappa]", " ", 
           SubscriptBox["\[Kappa]", "m"], " ", 
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[ImaginaryI]", " ", 
              SubscriptBox["\[Kappa]", "m"]}], "+", 
             RowBox[{"4", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
          RowBox[{"16", " ", "G", " ", 
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "-", 
             RowBox[{"8", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           SubscriptBox["\[Omega]", "m"], " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Kappa]", "-", 
          RowBox[{"4", " ", "\[ImaginaryI]", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Kappa]", " ", 
           SubscriptBox["\[Kappa]", "m"], " ", 
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[ImaginaryI]", " ", 
              SubscriptBox["\[Kappa]", "m"]}], "+", 
             RowBox[{"4", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
          RowBox[{"128", " ", "\[ImaginaryI]", " ", "G", " ", 
           SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]], 
      FractionBox[
       RowBox[{"32", " ", "\[ImaginaryI]", " ", "G", " ", "\[Kappa]", " ", 
        SubscriptBox["\[Kappa]", "ex"], " ", 
        SubscriptBox["\[Omega]", "m"], " ", 
        RowBox[{"Conjugate", "[", "G", "]"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Kappa]", "-", 
          RowBox[{"4", " ", "\[ImaginaryI]", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[Kappa]"}], " ", 
           SubscriptBox["\[Kappa]", "m"], " ", 
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[Kappa]", "m"], "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
          RowBox[{"128", " ", "G", " ", 
           SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]], 
      FractionBox[
       RowBox[{"32", " ", "G", " ", "\[Kappa]", " ", 
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        SubscriptBox["\[Omega]", "m"], " ", 
        RowBox[{"Conjugate", "[", "G", "]"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Kappa]", "-", 
          RowBox[{"4", " ", "\[ImaginaryI]", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Kappa]", " ", 
           SubscriptBox["\[Kappa]", "m"], " ", 
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[ImaginaryI]", " ", 
              SubscriptBox["\[Kappa]", "m"]}], "+", 
             RowBox[{"4", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
          RowBox[{"128", " ", "\[ImaginaryI]", " ", "G", " ", 
           SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]], 
      FractionBox[
       RowBox[{"4", " ", "\[Kappa]", " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "m"]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           SubscriptBox["\[Kappa]", "m"]}], "+", 
          RowBox[{"4", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        RowBox[{"Conjugate", "[", "G", "]"}]}], 
       RowBox[{
        RowBox[{"\[Kappa]", " ", 
         SubscriptBox["\[Kappa]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Kappa]", "m"], "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
        RowBox[{"128", " ", "G", " ", 
         SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}]], 
      FractionBox[
       RowBox[{"4", " ", "\[ImaginaryI]", " ", "\[Kappa]", " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        SubsuperscriptBox["\[Kappa]", "m", 
         RowBox[{"3", "/", "2"}]], " ", 
        RowBox[{"Conjugate", "[", "G", "]"}]}], 
       RowBox[{
        RowBox[{"\[Kappa]", " ", 
         SubscriptBox["\[Kappa]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Kappa]", "m"], "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
        RowBox[{"128", " ", "G", " ", 
         SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}]]},
     {
      FractionBox[
       RowBox[{"32", " ", 
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        SubscriptBox["\[Omega]", "m"], " ", 
        SuperscriptBox[
         RowBox[{"Conjugate", "[", "G", "]"}], "2"]}], 
       RowBox[{
        RowBox[{"\[Kappa]", " ", 
         SubscriptBox["\[Kappa]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[ImaginaryI]", " ", 
            SubscriptBox["\[Kappa]", "m"]}], "+", 
           RowBox[{"4", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
        RowBox[{"128", " ", "\[ImaginaryI]", " ", "G", " ", 
         SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}]], 
      FractionBox[
       RowBox[{"32", " ", 
        RowBox[{"(", 
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}], ")"}], " ", 
        SubscriptBox["\[Omega]", "m"], " ", 
        SuperscriptBox[
         RowBox[{"Conjugate", "[", "G", "]"}], "2"]}], 
       RowBox[{
        RowBox[{"\[Kappa]", " ", 
         SubscriptBox["\[Kappa]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[ImaginaryI]", " ", 
            SubscriptBox["\[Kappa]", "m"]}], "+", 
           RowBox[{"4", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
        RowBox[{"128", " ", "\[ImaginaryI]", " ", "G", " ", 
         SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}]], 
      FractionBox[
       RowBox[{"32", " ", 
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        SubscriptBox["\[Omega]", "m"], " ", 
        SuperscriptBox[
         RowBox[{"Conjugate", "[", "G", "]"}], "2"]}], 
       RowBox[{
        RowBox[{"\[Kappa]", " ", 
         SubscriptBox["\[Kappa]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[ImaginaryI]", " ", 
            SubscriptBox["\[Kappa]", "m"]}], "+", 
           RowBox[{"4", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
        RowBox[{"128", " ", "\[ImaginaryI]", " ", "G", " ", 
         SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}]], 
      FractionBox[
       RowBox[{"32", " ", 
        RowBox[{"(", 
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}], ")"}], " ", 
        SubscriptBox["\[Omega]", "m"], " ", 
        SuperscriptBox[
         RowBox[{"Conjugate", "[", "G", "]"}], "2"]}], 
       RowBox[{
        RowBox[{"\[Kappa]", " ", 
         SubscriptBox["\[Kappa]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[ImaginaryI]", " ", 
            SubscriptBox["\[Kappa]", "m"]}], "+", 
           RowBox[{"4", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
        RowBox[{"128", " ", "\[ImaginaryI]", " ", "G", " ", 
         SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}]], 
      FractionBox[
       RowBox[{"2", " ", 
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Kappa]", " ", 
           SubscriptBox["\[Kappa]", "m"], " ", 
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[ImaginaryI]", " ", 
              SubscriptBox["\[Kappa]", "m"]}], "+", 
             RowBox[{"4", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
          RowBox[{"16", " ", "G", " ", 
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "-", 
             RowBox[{"8", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           SubscriptBox["\[Omega]", "m"], " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Kappa]", "-", 
          RowBox[{"4", " ", "\[ImaginaryI]", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Kappa]", " ", 
           SubscriptBox["\[Kappa]", "m"], " ", 
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[ImaginaryI]", " ", 
              SubscriptBox["\[Kappa]", "m"]}], "+", 
             RowBox[{"4", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
          RowBox[{"128", " ", "\[ImaginaryI]", " ", "G", " ", 
           SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]], 
      FractionBox[
       RowBox[{
        RowBox[{"\[Kappa]", " ", 
         SubscriptBox["\[Kappa]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Kappa]", "m"], "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"2", " ", 
            SubscriptBox["\[Kappa]", "ex"]}], "+", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[ImaginaryI]", " ", "\[Kappa]"}], "+", 
           RowBox[{"4", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
        RowBox[{"32", " ", "G", " ", 
         SubscriptBox["\[Omega]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[Kappa]", "2"], "-", 
           RowBox[{"\[Kappa]", " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["\[Kappa]", "ex"], "+", 
              RowBox[{"4", " ", "\[ImaginaryI]", " ", 
               SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
           RowBox[{"8", " ", 
            SubscriptBox["\[Omega]", "m"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[ImaginaryI]", " ", 
               SubscriptBox["\[Kappa]", "ex"]}], "+", 
              RowBox[{"2", " ", 
               SubscriptBox["\[Omega]", "m"]}]}], ")"}]}]}], ")"}], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Kappa]", "-", 
          RowBox[{"4", " ", "\[ImaginaryI]", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Kappa]", " ", 
           SubscriptBox["\[Kappa]", "m"], " ", 
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[ImaginaryI]", " ", 
              SubscriptBox["\[Kappa]", "m"]}], "+", 
             RowBox[{"4", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
          RowBox[{"128", " ", "\[ImaginaryI]", " ", "G", " ", 
           SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]], 
      FractionBox[
       RowBox[{"32", " ", "G", " ", "\[Kappa]", " ", 
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        SubscriptBox["\[Omega]", "m"], " ", 
        RowBox[{"Conjugate", "[", "G", "]"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Kappa]", "-", 
          RowBox[{"4", " ", "\[ImaginaryI]", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Kappa]", " ", 
           SubscriptBox["\[Kappa]", "m"], " ", 
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[ImaginaryI]", " ", 
              SubscriptBox["\[Kappa]", "m"]}], "+", 
             RowBox[{"4", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
          RowBox[{"128", " ", "\[ImaginaryI]", " ", "G", " ", 
           SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]], 
      FractionBox[
       RowBox[{"32", " ", "\[ImaginaryI]", " ", "G", " ", "\[Kappa]", " ", 
        RowBox[{"(", 
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}], ")"}], " ", 
        SubscriptBox["\[Omega]", "m"], " ", 
        RowBox[{"Conjugate", "[", "G", "]"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Kappa]", "-", 
          RowBox[{"4", " ", "\[ImaginaryI]", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[Kappa]"}], " ", 
           SubscriptBox["\[Kappa]", "m"], " ", 
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[Kappa]", "m"], "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
          RowBox[{"128", " ", "G", " ", 
           SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]], 
      FractionBox[
       RowBox[{"4", " ", "\[Kappa]", " ", 
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "m"]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           SubscriptBox["\[Kappa]", "m"]}], "+", 
          RowBox[{"4", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        RowBox[{"Conjugate", "[", "G", "]"}]}], 
       RowBox[{
        RowBox[{"\[Kappa]", " ", 
         SubscriptBox["\[Kappa]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Kappa]", "m"], "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
        RowBox[{"128", " ", "G", " ", 
         SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}]], 
      FractionBox[
       RowBox[{"4", " ", "\[ImaginaryI]", " ", "\[Kappa]", " ", 
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SubsuperscriptBox["\[Kappa]", "m", 
         RowBox[{"3", "/", "2"}]], " ", 
        RowBox[{"Conjugate", "[", "G", "]"}]}], 
       RowBox[{
        RowBox[{"\[Kappa]", " ", 
         SubscriptBox["\[Kappa]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Kappa]", "m"], "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
        RowBox[{"128", " ", "G", " ", 
         SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}]]},
     {
      FractionBox[
       RowBox[{"32", " ", "\[ImaginaryI]", " ", 
        SubscriptBox["\[Kappa]", "ex"], " ", 
        SubscriptBox["\[Omega]", "m"], " ", 
        SuperscriptBox[
         RowBox[{"Conjugate", "[", "G", "]"}], "2"]}], 
       RowBox[{
        RowBox[{
         RowBox[{"-", "\[Kappa]"}], " ", 
         SubscriptBox["\[Kappa]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Kappa]", "m"], "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
        RowBox[{"128", " ", "G", " ", 
         SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}]], 
      FractionBox[
       RowBox[{"32", " ", 
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        SubscriptBox["\[Omega]", "m"], " ", 
        SuperscriptBox[
         RowBox[{"Conjugate", "[", "G", "]"}], "2"]}], 
       RowBox[{
        RowBox[{"\[Kappa]", " ", 
         SubscriptBox["\[Kappa]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[ImaginaryI]", " ", 
            SubscriptBox["\[Kappa]", "m"]}], "+", 
           RowBox[{"4", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
        RowBox[{"128", " ", "\[ImaginaryI]", " ", "G", " ", 
         SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}]], 
      FractionBox[
       RowBox[{"32", " ", "\[ImaginaryI]", " ", 
        SubscriptBox["\[Kappa]", "ex"], " ", 
        SubscriptBox["\[Omega]", "m"], " ", 
        SuperscriptBox[
         RowBox[{"Conjugate", "[", "G", "]"}], "2"]}], 
       RowBox[{
        RowBox[{
         RowBox[{"-", "\[Kappa]"}], " ", 
         SubscriptBox["\[Kappa]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Kappa]", "m"], "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
        RowBox[{"128", " ", "G", " ", 
         SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}]], 
      FractionBox[
       RowBox[{"32", " ", 
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        SubscriptBox["\[Omega]", "m"], " ", 
        SuperscriptBox[
         RowBox[{"Conjugate", "[", "G", "]"}], "2"]}], 
       RowBox[{
        RowBox[{"\[Kappa]", " ", 
         SubscriptBox["\[Kappa]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[ImaginaryI]", " ", 
            SubscriptBox["\[Kappa]", "m"]}], "+", 
           RowBox[{"4", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
        RowBox[{"128", " ", "\[ImaginaryI]", " ", "G", " ", 
         SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}]], 
      FractionBox[
       RowBox[{"32", " ", "\[ImaginaryI]", " ", "G", " ", "\[Kappa]", " ", 
        SubscriptBox["\[Kappa]", "ex"], " ", 
        SubscriptBox["\[Omega]", "m"], " ", 
        RowBox[{"Conjugate", "[", "G", "]"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Kappa]", "-", 
          RowBox[{"4", " ", "\[ImaginaryI]", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[Kappa]"}], " ", 
           SubscriptBox["\[Kappa]", "m"], " ", 
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[Kappa]", "m"], "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
          RowBox[{"128", " ", "G", " ", 
           SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]], 
      FractionBox[
       RowBox[{"32", " ", "G", " ", "\[Kappa]", " ", 
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        SubscriptBox["\[Omega]", "m"], " ", 
        RowBox[{"Conjugate", "[", "G", "]"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Kappa]", "-", 
          RowBox[{"4", " ", "\[ImaginaryI]", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Kappa]", " ", 
           SubscriptBox["\[Kappa]", "m"], " ", 
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[ImaginaryI]", " ", 
              SubscriptBox["\[Kappa]", "m"]}], "+", 
             RowBox[{"4", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
          RowBox[{"128", " ", "\[ImaginaryI]", " ", "G", " ", 
           SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]], 
      FractionBox[
       RowBox[{
        RowBox[{"\[Kappa]", " ", 
         SubscriptBox["\[Kappa]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["\[Kappa]", "ex"], "+", 
              RowBox[{"2", " ", "\[ImaginaryI]", " ", 
               SubscriptBox["\[Omega]", "m"]}]}], ")"}]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Kappa]", "m"], "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[ImaginaryI]", " ", "\[Kappa]"}], "+", 
           RowBox[{"4", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
        RowBox[{"32", " ", "G", " ", 
         SubscriptBox["\[Omega]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Kappa]", " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["\[Kappa]", "ex"], "+", 
              RowBox[{"4", " ", "\[ImaginaryI]", " ", 
               SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
           RowBox[{"8", " ", 
            SubscriptBox["\[Omega]", "m"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], " ", 
               SubscriptBox["\[Kappa]", "ex"]}], "+", 
              RowBox[{"2", " ", 
               SubscriptBox["\[Omega]", "m"]}]}], ")"}]}]}], ")"}], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", "\[Kappa]"}], "+", 
          RowBox[{"4", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[Kappa]"}], " ", 
           SubscriptBox["\[Kappa]", "m"], " ", 
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[Kappa]", "m"], "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
          RowBox[{"128", " ", "G", " ", 
           SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]], 
      FractionBox[
       RowBox[{"2", " ", 
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Kappa]", " ", 
           SubscriptBox["\[Kappa]", "m"], " ", 
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[ImaginaryI]", " ", 
              SubscriptBox["\[Kappa]", "m"]}], "+", 
             RowBox[{"4", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
          RowBox[{"16", " ", "G", " ", 
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "-", 
             RowBox[{"8", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           SubscriptBox["\[Omega]", "m"], " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Kappa]", "-", 
          RowBox[{"4", " ", "\[ImaginaryI]", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Kappa]", " ", 
           SubscriptBox["\[Kappa]", "m"], " ", 
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[ImaginaryI]", " ", 
              SubscriptBox["\[Kappa]", "m"]}], "+", 
             RowBox[{"4", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
          RowBox[{"128", " ", "\[ImaginaryI]", " ", "G", " ", 
           SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]], 
      FractionBox[
       RowBox[{"4", " ", "\[Kappa]", " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "m"]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           SubscriptBox["\[Kappa]", "m"]}], "+", 
          RowBox[{"4", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        RowBox[{"Conjugate", "[", "G", "]"}]}], 
       RowBox[{
        RowBox[{"\[Kappa]", " ", 
         SubscriptBox["\[Kappa]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Kappa]", "m"], "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
        RowBox[{"128", " ", "G", " ", 
         SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}]], 
      FractionBox[
       RowBox[{"4", " ", "\[ImaginaryI]", " ", "\[Kappa]", " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        SubsuperscriptBox["\[Kappa]", "m", 
         RowBox[{"3", "/", "2"}]], " ", 
        RowBox[{"Conjugate", "[", "G", "]"}]}], 
       RowBox[{
        RowBox[{"\[Kappa]", " ", 
         SubscriptBox["\[Kappa]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Kappa]", "m"], "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
        RowBox[{"128", " ", "G", " ", 
         SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}]]},
     {
      FractionBox[
       RowBox[{"32", " ", 
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        SubscriptBox["\[Omega]", "m"], " ", 
        SuperscriptBox[
         RowBox[{"Conjugate", "[", "G", "]"}], "2"]}], 
       RowBox[{
        RowBox[{"\[Kappa]", " ", 
         SubscriptBox["\[Kappa]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[ImaginaryI]", " ", 
            SubscriptBox["\[Kappa]", "m"]}], "+", 
           RowBox[{"4", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
        RowBox[{"128", " ", "\[ImaginaryI]", " ", "G", " ", 
         SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}]], 
      FractionBox[
       RowBox[{"32", " ", 
        RowBox[{"(", 
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}], ")"}], " ", 
        SubscriptBox["\[Omega]", "m"], " ", 
        SuperscriptBox[
         RowBox[{"Conjugate", "[", "G", "]"}], "2"]}], 
       RowBox[{
        RowBox[{"\[Kappa]", " ", 
         SubscriptBox["\[Kappa]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[ImaginaryI]", " ", 
            SubscriptBox["\[Kappa]", "m"]}], "+", 
           RowBox[{"4", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
        RowBox[{"128", " ", "\[ImaginaryI]", " ", "G", " ", 
         SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}]], 
      FractionBox[
       RowBox[{"32", " ", 
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        SubscriptBox["\[Omega]", "m"], " ", 
        SuperscriptBox[
         RowBox[{"Conjugate", "[", "G", "]"}], "2"]}], 
       RowBox[{
        RowBox[{"\[Kappa]", " ", 
         SubscriptBox["\[Kappa]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[ImaginaryI]", " ", 
            SubscriptBox["\[Kappa]", "m"]}], "+", 
           RowBox[{"4", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
        RowBox[{"128", " ", "\[ImaginaryI]", " ", "G", " ", 
         SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}]], 
      FractionBox[
       RowBox[{"32", " ", 
        RowBox[{"(", 
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}], ")"}], " ", 
        SubscriptBox["\[Omega]", "m"], " ", 
        SuperscriptBox[
         RowBox[{"Conjugate", "[", "G", "]"}], "2"]}], 
       RowBox[{
        RowBox[{"\[Kappa]", " ", 
         SubscriptBox["\[Kappa]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[ImaginaryI]", " ", 
            SubscriptBox["\[Kappa]", "m"]}], "+", 
           RowBox[{"4", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
        RowBox[{"128", " ", "\[ImaginaryI]", " ", "G", " ", 
         SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}]], 
      FractionBox[
       RowBox[{"32", " ", "G", " ", "\[Kappa]", " ", 
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        SubscriptBox["\[Omega]", "m"], " ", 
        RowBox[{"Conjugate", "[", "G", "]"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Kappa]", "-", 
          RowBox[{"4", " ", "\[ImaginaryI]", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Kappa]", " ", 
           SubscriptBox["\[Kappa]", "m"], " ", 
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[ImaginaryI]", " ", 
              SubscriptBox["\[Kappa]", "m"]}], "+", 
             RowBox[{"4", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
          RowBox[{"128", " ", "\[ImaginaryI]", " ", "G", " ", 
           SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]], 
      FractionBox[
       RowBox[{"32", " ", "\[ImaginaryI]", " ", "G", " ", "\[Kappa]", " ", 
        RowBox[{"(", 
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}], ")"}], " ", 
        SubscriptBox["\[Omega]", "m"], " ", 
        RowBox[{"Conjugate", "[", "G", "]"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Kappa]", "-", 
          RowBox[{"4", " ", "\[ImaginaryI]", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[Kappa]"}], " ", 
           SubscriptBox["\[Kappa]", "m"], " ", 
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[Kappa]", "m"], "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
          RowBox[{"128", " ", "G", " ", 
           SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]], 
      FractionBox[
       RowBox[{"2", " ", 
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Kappa]", " ", 
           SubscriptBox["\[Kappa]", "m"], " ", 
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[ImaginaryI]", " ", 
              SubscriptBox["\[Kappa]", "m"]}], "+", 
             RowBox[{"4", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
          RowBox[{"16", " ", "G", " ", 
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "-", 
             RowBox[{"8", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           SubscriptBox["\[Omega]", "m"], " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Kappa]", "-", 
          RowBox[{"4", " ", "\[ImaginaryI]", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Kappa]", " ", 
           SubscriptBox["\[Kappa]", "m"], " ", 
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[ImaginaryI]", " ", 
              SubscriptBox["\[Kappa]", "m"]}], "+", 
             RowBox[{"4", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
          RowBox[{"128", " ", "\[ImaginaryI]", " ", "G", " ", 
           SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]], 
      FractionBox[
       RowBox[{
        RowBox[{"\[Kappa]", " ", 
         SubscriptBox["\[Kappa]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Kappa]", "m"], "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"2", " ", 
            SubscriptBox["\[Kappa]", "ex"]}], "+", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[ImaginaryI]", " ", "\[Kappa]"}], "+", 
           RowBox[{"4", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
        RowBox[{"32", " ", "G", " ", 
         SubscriptBox["\[Omega]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[Kappa]", "2"], "-", 
           RowBox[{"\[Kappa]", " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["\[Kappa]", "ex"], "+", 
              RowBox[{"4", " ", "\[ImaginaryI]", " ", 
               SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
           RowBox[{"8", " ", 
            SubscriptBox["\[Omega]", "m"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[ImaginaryI]", " ", 
               SubscriptBox["\[Kappa]", "ex"]}], "+", 
              RowBox[{"2", " ", 
               SubscriptBox["\[Omega]", "m"]}]}], ")"}]}]}], ")"}], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Kappa]", "-", 
          RowBox[{"4", " ", "\[ImaginaryI]", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Kappa]", " ", 
           SubscriptBox["\[Kappa]", "m"], " ", 
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[ImaginaryI]", " ", 
              SubscriptBox["\[Kappa]", "m"]}], "+", 
             RowBox[{"4", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
          RowBox[{"128", " ", "\[ImaginaryI]", " ", "G", " ", 
           SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]], 
      FractionBox[
       RowBox[{"4", " ", "\[Kappa]", " ", 
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "m"]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           SubscriptBox["\[Kappa]", "m"]}], "+", 
          RowBox[{"4", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        RowBox[{"Conjugate", "[", "G", "]"}]}], 
       RowBox[{
        RowBox[{"\[Kappa]", " ", 
         SubscriptBox["\[Kappa]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Kappa]", "m"], "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
        RowBox[{"128", " ", "G", " ", 
         SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}]], 
      FractionBox[
       RowBox[{"4", " ", "\[ImaginaryI]", " ", "\[Kappa]", " ", 
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SubsuperscriptBox["\[Kappa]", "m", 
         RowBox[{"3", "/", "2"}]], " ", 
        RowBox[{"Conjugate", "[", "G", "]"}]}], 
       RowBox[{
        RowBox[{"\[Kappa]", " ", 
         SubscriptBox["\[Kappa]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Kappa]", "m"], "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
        RowBox[{"128", " ", "G", " ", 
         SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}]]},
     {
      FractionBox[
       RowBox[{"4", " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "m"]], " ", 
        RowBox[{"(", 
         RowBox[{"\[Kappa]", "-", 
          RowBox[{"4", " ", "\[ImaginaryI]", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["\[Kappa]", "m"], "-", 
          RowBox[{"4", " ", "\[ImaginaryI]", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        RowBox[{"Conjugate", "[", "G", "]"}]}], 
       RowBox[{
        RowBox[{"\[Kappa]", " ", 
         SubscriptBox["\[Kappa]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[ImaginaryI]", " ", 
            SubscriptBox["\[Kappa]", "m"]}], "+", 
           RowBox[{"4", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
        RowBox[{"128", " ", "\[ImaginaryI]", " ", "G", " ", 
         SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}]], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"4", " ", "\[ImaginaryI]", " ", 
         SqrtBox[
          RowBox[{"\[Kappa]", "-", 
           SubscriptBox["\[Kappa]", "ex"]}]], " ", 
         SqrtBox[
          SubscriptBox["\[Kappa]", "m"]], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Kappa]", "m"], "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}], 
        RowBox[{
         RowBox[{"\[Kappa]", " ", 
          SubscriptBox["\[Kappa]", "m"], " ", 
          RowBox[{"(", 
           RowBox[{"\[Kappa]", "-", 
            RowBox[{"4", " ", "\[ImaginaryI]", " ", 
             SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["\[Kappa]", "m"], "-", 
            RowBox[{"4", " ", "\[ImaginaryI]", " ", 
             SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
         RowBox[{"128", " ", "G", " ", 
          SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
          RowBox[{"Conjugate", "[", "G", "]"}]}]}]]}], 
      FractionBox[
       RowBox[{"4", " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "m"]], " ", 
        RowBox[{"(", 
         RowBox[{"\[Kappa]", "-", 
          RowBox[{"4", " ", "\[ImaginaryI]", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["\[Kappa]", "m"], "-", 
          RowBox[{"4", " ", "\[ImaginaryI]", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        RowBox[{"Conjugate", "[", "G", "]"}]}], 
       RowBox[{
        RowBox[{"\[Kappa]", " ", 
         SubscriptBox["\[Kappa]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[ImaginaryI]", " ", 
            SubscriptBox["\[Kappa]", "m"]}], "+", 
           RowBox[{"4", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
        RowBox[{"128", " ", "\[ImaginaryI]", " ", "G", " ", 
         SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}]], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"4", " ", "\[ImaginaryI]", " ", 
         SqrtBox[
          RowBox[{"\[Kappa]", "-", 
           SubscriptBox["\[Kappa]", "ex"]}]], " ", 
         SqrtBox[
          SubscriptBox["\[Kappa]", "m"]], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Kappa]", "m"], "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}], 
        RowBox[{
         RowBox[{"\[Kappa]", " ", 
          SubscriptBox["\[Kappa]", "m"], " ", 
          RowBox[{"(", 
           RowBox[{"\[Kappa]", "-", 
            RowBox[{"4", " ", "\[ImaginaryI]", " ", 
             SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["\[Kappa]", "m"], "-", 
            RowBox[{"4", " ", "\[ImaginaryI]", " ", 
             SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
         RowBox[{"128", " ", "G", " ", 
          SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
          RowBox[{"Conjugate", "[", "G", "]"}]}]}]]}], 
      FractionBox[
       RowBox[{"4", " ", "G", " ", "\[Kappa]", " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "m"]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           SubscriptBox["\[Kappa]", "m"]}], "+", 
          RowBox[{"4", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], 
       RowBox[{
        RowBox[{
         RowBox[{"-", "\[Kappa]"}], " ", 
         SubscriptBox["\[Kappa]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Kappa]", "m"], "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
        RowBox[{"128", " ", "G", " ", 
         SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}]], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"4", " ", "\[ImaginaryI]", " ", "G", " ", "\[Kappa]", " ", 
         SqrtBox[
          RowBox[{"\[Kappa]", "-", 
           SubscriptBox["\[Kappa]", "ex"]}]], " ", 
         SqrtBox[
          SubscriptBox["\[Kappa]", "m"]], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Kappa]", "m"], "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], 
        RowBox[{
         RowBox[{"\[Kappa]", " ", 
          SubscriptBox["\[Kappa]", "m"], " ", 
          RowBox[{"(", 
           RowBox[{"\[Kappa]", "-", 
            RowBox[{"4", " ", "\[ImaginaryI]", " ", 
             SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["\[Kappa]", "m"], "-", 
            RowBox[{"4", " ", "\[ImaginaryI]", " ", 
             SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
         RowBox[{"128", " ", "G", " ", 
          SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
          RowBox[{"Conjugate", "[", "G", "]"}]}]}]]}], 
      FractionBox[
       RowBox[{"4", " ", "G", " ", "\[Kappa]", " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "m"]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           SubscriptBox["\[Kappa]", "m"]}], "+", 
          RowBox[{"4", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], 
       RowBox[{
        RowBox[{
         RowBox[{"-", "\[Kappa]"}], " ", 
         SubscriptBox["\[Kappa]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Kappa]", "m"], "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
        RowBox[{"128", " ", "G", " ", 
         SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}]], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"4", " ", "\[ImaginaryI]", " ", "G", " ", "\[Kappa]", " ", 
         SqrtBox[
          RowBox[{"\[Kappa]", "-", 
           SubscriptBox["\[Kappa]", "ex"]}]], " ", 
         SqrtBox[
          SubscriptBox["\[Kappa]", "m"]], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Kappa]", "m"], "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], 
        RowBox[{
         RowBox[{"\[Kappa]", " ", 
          SubscriptBox["\[Kappa]", "m"], " ", 
          RowBox[{"(", 
           RowBox[{"\[Kappa]", "-", 
            RowBox[{"4", " ", "\[ImaginaryI]", " ", 
             SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["\[Kappa]", "m"], "-", 
            RowBox[{"4", " ", "\[ImaginaryI]", " ", 
             SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
         RowBox[{"128", " ", "G", " ", 
          SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
          RowBox[{"Conjugate", "[", "G", "]"}]}]}]]}], 
      FractionBox[
       RowBox[{
        RowBox[{"\[Kappa]", " ", 
         SubscriptBox["\[Kappa]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Kappa]", "m"], "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
        RowBox[{"64", " ", "G", " ", 
         SubscriptBox["\[Omega]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[ImaginaryI]", " ", 
            SubscriptBox["\[Kappa]", "m"]}], "+", 
           RowBox[{"2", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}], 
       RowBox[{
        RowBox[{"\[Kappa]", " ", 
         SubscriptBox["\[Kappa]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Kappa]", "m"], "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
        RowBox[{"128", " ", "G", " ", 
         SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}]], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"64", " ", "\[ImaginaryI]", " ", "G", " ", 
         SubscriptBox["\[Kappa]", "m"], " ", 
         SubscriptBox["\[Omega]", "m"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}], 
        RowBox[{
         RowBox[{
          RowBox[{"-", "\[Kappa]"}], " ", 
          SubscriptBox["\[Kappa]", "m"], " ", 
          RowBox[{"(", 
           RowBox[{"\[Kappa]", "-", 
            RowBox[{"4", " ", "\[ImaginaryI]", " ", 
             SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["\[Kappa]", "m"], "-", 
            RowBox[{"4", " ", "\[ImaginaryI]", " ", 
             SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
         RowBox[{"128", " ", "G", " ", 
          SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
          RowBox[{"Conjugate", "[", "G", "]"}]}]}]]}]},
     {
      FractionBox[
       RowBox[{"4", " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        SubsuperscriptBox["\[Kappa]", "m", 
         RowBox[{"3", "/", "2"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", "\[Kappa]"}], "+", 
          RowBox[{"4", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        RowBox[{"Conjugate", "[", "G", "]"}]}], 
       RowBox[{
        RowBox[{"\[Kappa]", " ", 
         SubscriptBox["\[Kappa]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Kappa]", "m"], "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
        RowBox[{"128", " ", "G", " ", 
         SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}]], 
      FractionBox[
       RowBox[{"4", " ", 
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SubsuperscriptBox["\[Kappa]", "m", 
         RowBox[{"3", "/", "2"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", "\[Kappa]"}], "+", 
          RowBox[{"4", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        RowBox[{"Conjugate", "[", "G", "]"}]}], 
       RowBox[{
        RowBox[{"\[Kappa]", " ", 
         SubscriptBox["\[Kappa]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Kappa]", "m"], "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
        RowBox[{"128", " ", "G", " ", 
         SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}]], 
      FractionBox[
       RowBox[{"4", " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        SubsuperscriptBox["\[Kappa]", "m", 
         RowBox[{"3", "/", "2"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", "\[Kappa]"}], "+", 
          RowBox[{"4", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        RowBox[{"Conjugate", "[", "G", "]"}]}], 
       RowBox[{
        RowBox[{"\[Kappa]", " ", 
         SubscriptBox["\[Kappa]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Kappa]", "m"], "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
        RowBox[{"128", " ", "G", " ", 
         SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}]], 
      FractionBox[
       RowBox[{"4", " ", 
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SubsuperscriptBox["\[Kappa]", "m", 
         RowBox[{"3", "/", "2"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", "\[Kappa]"}], "+", 
          RowBox[{"4", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        RowBox[{"Conjugate", "[", "G", "]"}]}], 
       RowBox[{
        RowBox[{"\[Kappa]", " ", 
         SubscriptBox["\[Kappa]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Kappa]", "m"], "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
        RowBox[{"128", " ", "G", " ", 
         SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}]], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"4", " ", "\[ImaginaryI]", " ", "G", " ", "\[Kappa]", " ", 
         SqrtBox[
          SubscriptBox["\[Kappa]", "ex"]], " ", 
         SubsuperscriptBox["\[Kappa]", "m", 
          RowBox[{"3", "/", "2"}]]}], 
        RowBox[{
         RowBox[{
          RowBox[{"-", "\[Kappa]"}], " ", 
          SubscriptBox["\[Kappa]", "m"], " ", 
          RowBox[{"(", 
           RowBox[{"\[Kappa]", "-", 
            RowBox[{"4", " ", "\[ImaginaryI]", " ", 
             SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["\[Kappa]", "m"], "-", 
            RowBox[{"4", " ", "\[ImaginaryI]", " ", 
             SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
         RowBox[{"128", " ", "G", " ", 
          SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
          RowBox[{"Conjugate", "[", "G", "]"}]}]}]]}], 
      FractionBox[
       RowBox[{"4", " ", "\[ImaginaryI]", " ", "G", " ", "\[Kappa]", " ", 
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SubsuperscriptBox["\[Kappa]", "m", 
         RowBox[{"3", "/", "2"}]]}], 
       RowBox[{
        RowBox[{"\[Kappa]", " ", 
         SubscriptBox["\[Kappa]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Kappa]", "m"], "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
        RowBox[{"128", " ", "G", " ", 
         SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}]], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"4", " ", "\[ImaginaryI]", " ", "G", " ", "\[Kappa]", " ", 
         SqrtBox[
          SubscriptBox["\[Kappa]", "ex"]], " ", 
         SubsuperscriptBox["\[Kappa]", "m", 
          RowBox[{"3", "/", "2"}]]}], 
        RowBox[{
         RowBox[{
          RowBox[{"-", "\[Kappa]"}], " ", 
          SubscriptBox["\[Kappa]", "m"], " ", 
          RowBox[{"(", 
           RowBox[{"\[Kappa]", "-", 
            RowBox[{"4", " ", "\[ImaginaryI]", " ", 
             SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["\[Kappa]", "m"], "-", 
            RowBox[{"4", " ", "\[ImaginaryI]", " ", 
             SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
         RowBox[{"128", " ", "G", " ", 
          SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
          RowBox[{"Conjugate", "[", "G", "]"}]}]}]]}], 
      FractionBox[
       RowBox[{"4", " ", "\[ImaginaryI]", " ", "G", " ", "\[Kappa]", " ", 
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SubsuperscriptBox["\[Kappa]", "m", 
         RowBox[{"3", "/", "2"}]]}], 
       RowBox[{
        RowBox[{"\[Kappa]", " ", 
         SubscriptBox["\[Kappa]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Kappa]", "m"], "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
        RowBox[{"128", " ", "G", " ", 
         SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}]], 
      FractionBox[
       RowBox[{"64", " ", "\[ImaginaryI]", " ", "G", " ", 
        SubscriptBox["\[Kappa]", "m"], " ", 
        SubscriptBox["\[Omega]", "m"], " ", 
        RowBox[{"Conjugate", "[", "G", "]"}]}], 
       RowBox[{
        RowBox[{
         RowBox[{"-", "\[Kappa]"}], " ", 
         SubscriptBox["\[Kappa]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Kappa]", "m"], "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
        RowBox[{"128", " ", "G", " ", 
         SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}]], 
      FractionBox[
       RowBox[{
        RowBox[{"\[Kappa]", " ", 
         SubscriptBox["\[Kappa]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Kappa]", "m"], "+", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
        RowBox[{"64", " ", "G", " ", 
         SubscriptBox["\[Omega]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", 
            SubscriptBox["\[Kappa]", "m"]}], "+", 
           RowBox[{"2", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}], 
       RowBox[{
        RowBox[{"\[Kappa]", " ", 
         SubscriptBox["\[Kappa]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Kappa]", "m"], "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
        RowBox[{"128", " ", "G", " ", 
         SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}]]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.860701497993511*^9, 3.86070150679451*^9}, 
   3.8607019740633373`*^9, 3.8613154929291887`*^9, 3.8674555783334217`*^9, 
   3.869605994371125*^9, 3.869606063835713*^9, 3.869608235608549*^9, {
   3.8696086346076794`*^9, 3.869608638731307*^9}, 3.869608753411111*^9, {
   3.869615202382593*^9, 3.8696152208176413`*^9}, 3.869615278243101*^9},
 Background->RGBColor[0.88, 1, 0.88],
 CellLabel->
  "Out[41]//MatrixForm=",ExpressionUUID->"e26f6c5b-2d5b-4444-acad-\
2792ec1e715f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TCon", "/.", "SymmetricValues"}], "//", "Simplify"}], "//", 
  "MatrixForm"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.860701135822539*^9, 3.8607019740633373`*^9, {3.8696152577216606`*^9, 
   3.8696152739404693`*^9}},
 Background->RGBColor[0.88, 1, 0.88],
 CellLabel->"In[40]:=",ExpressionUUID->"e4bb0d9b-81db-4030-a95f-052984063be5"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox[
       RowBox[{
        RowBox[{
         RowBox[{"-", "\[Kappa]"}], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"2", " ", 
            SubscriptBox["\[Kappa]", "ex"]}]}], ")"}], " ", 
         SubscriptBox["\[Kappa]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Kappa]", "m"], "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
        RowBox[{"32", " ", "G", " ", 
         SubscriptBox["\[Omega]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[ImaginaryI]", " ", "\[Kappa]", " ", 
            SubscriptBox["\[Kappa]", "ex"]}], "+", 
           RowBox[{"4", " ", "\[Kappa]", " ", 
            SubscriptBox["\[Omega]", "m"]}], "-", 
           RowBox[{"4", " ", 
            SubscriptBox["\[Kappa]", "ex"], " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}], 
       RowBox[{"\[Kappa]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Kappa]", " ", 
           SubscriptBox["\[Kappa]", "m"], " ", 
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[Kappa]", "m"], "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
          RowBox[{"128", " ", "G", " ", 
           SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]], 
      FractionBox[
       RowBox[{"2", " ", 
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Kappa]", " ", 
           SubscriptBox["\[Kappa]", "m"], " ", 
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[Kappa]", "m"], "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
          RowBox[{"16", " ", "\[ImaginaryI]", " ", "G", " ", 
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "+", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           SubscriptBox["\[Omega]", "m"], " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}], 
       RowBox[{"\[Kappa]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Kappa]", " ", 
           SubscriptBox["\[Kappa]", "m"], " ", 
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[Kappa]", "m"], "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
          RowBox[{"128", " ", "G", " ", 
           SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"32", " ", "\[ImaginaryI]", " ", "G", " ", 
         SubscriptBox["\[Kappa]", "ex"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         SubscriptBox["\[Omega]", "m"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}], 
        RowBox[{"\[Kappa]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "\[Kappa]"}], " ", 
            SubscriptBox["\[Kappa]", "m"], " ", 
            RowBox[{"(", 
             RowBox[{"\[Kappa]", "-", 
              RowBox[{"4", " ", "\[ImaginaryI]", " ", 
               SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["\[Kappa]", "m"], "-", 
              RowBox[{"4", " ", "\[ImaginaryI]", " ", 
               SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
           RowBox[{"128", " ", "G", " ", 
            SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
            RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"32", " ", "G", " ", 
         SqrtBox[
          RowBox[{"\[Kappa]", "-", 
           SubscriptBox["\[Kappa]", "ex"]}]], " ", 
         SqrtBox[
          SubscriptBox["\[Kappa]", "ex"]], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         SubscriptBox["\[Omega]", "m"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}], 
        RowBox[{"\[Kappa]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Kappa]", " ", 
            SubscriptBox["\[Kappa]", "m"], " ", 
            RowBox[{"(", 
             RowBox[{"\[Kappa]", "-", 
              RowBox[{"4", " ", "\[ImaginaryI]", " ", 
               SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[ImaginaryI]", " ", 
               SubscriptBox["\[Kappa]", "m"]}], "+", 
              RowBox[{"4", " ", 
               SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
           RowBox[{"128", " ", "\[ImaginaryI]", " ", "G", " ", 
            SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
            RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"32", " ", "\[ImaginaryI]", " ", 
         SuperscriptBox["G", "2"], " ", 
         SubscriptBox["\[Kappa]", "ex"], " ", 
         SubscriptBox["\[Omega]", "m"]}], 
        RowBox[{
         RowBox[{
          RowBox[{"-", "\[Kappa]"}], " ", 
          SubscriptBox["\[Kappa]", "m"], " ", 
          RowBox[{"(", 
           RowBox[{"\[Kappa]", "-", 
            RowBox[{"4", " ", "\[ImaginaryI]", " ", 
             SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["\[Kappa]", "m"], "-", 
            RowBox[{"4", " ", "\[ImaginaryI]", " ", 
             SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
         RowBox[{"128", " ", "G", " ", 
          SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
          RowBox[{"Conjugate", "[", "G", "]"}]}]}]]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"32", " ", 
         SuperscriptBox["G", "2"], " ", 
         SqrtBox[
          RowBox[{"\[Kappa]", "-", 
           SubscriptBox["\[Kappa]", "ex"]}]], " ", 
         SqrtBox[
          SubscriptBox["\[Kappa]", "ex"]], " ", 
         SubscriptBox["\[Omega]", "m"]}], 
        RowBox[{
         RowBox[{"\[Kappa]", " ", 
          SubscriptBox["\[Kappa]", "m"], " ", 
          RowBox[{"(", 
           RowBox[{"\[Kappa]", "-", 
            RowBox[{"4", " ", "\[ImaginaryI]", " ", 
             SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[ImaginaryI]", " ", 
             SubscriptBox["\[Kappa]", "m"]}], "+", 
            RowBox[{"4", " ", 
             SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
         RowBox[{"128", " ", "\[ImaginaryI]", " ", "G", " ", 
          SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
          RowBox[{"Conjugate", "[", "G", "]"}]}]}]]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"32", " ", "\[ImaginaryI]", " ", 
         SuperscriptBox["G", "2"], " ", 
         SubscriptBox["\[Kappa]", "ex"], " ", 
         SubscriptBox["\[Omega]", "m"]}], 
        RowBox[{
         RowBox[{
          RowBox[{"-", "\[Kappa]"}], " ", 
          SubscriptBox["\[Kappa]", "m"], " ", 
          RowBox[{"(", 
           RowBox[{"\[Kappa]", "-", 
            RowBox[{"4", " ", "\[ImaginaryI]", " ", 
             SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["\[Kappa]", "m"], "-", 
            RowBox[{"4", " ", "\[ImaginaryI]", " ", 
             SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
         RowBox[{"128", " ", "G", " ", 
          SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
          RowBox[{"Conjugate", "[", "G", "]"}]}]}]]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"32", " ", 
         SuperscriptBox["G", "2"], " ", 
         SqrtBox[
          RowBox[{"\[Kappa]", "-", 
           SubscriptBox["\[Kappa]", "ex"]}]], " ", 
         SqrtBox[
          SubscriptBox["\[Kappa]", "ex"]], " ", 
         SubscriptBox["\[Omega]", "m"]}], 
        RowBox[{
         RowBox[{"\[Kappa]", " ", 
          SubscriptBox["\[Kappa]", "m"], " ", 
          RowBox[{"(", 
           RowBox[{"\[Kappa]", "-", 
            RowBox[{"4", " ", "\[ImaginaryI]", " ", 
             SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[ImaginaryI]", " ", 
             SubscriptBox["\[Kappa]", "m"]}], "+", 
            RowBox[{"4", " ", 
             SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
         RowBox[{"128", " ", "\[ImaginaryI]", " ", "G", " ", 
          SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
          RowBox[{"Conjugate", "[", "G", "]"}]}]}]]}], 
      FractionBox[
       RowBox[{"4", " ", "G", " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "m"]], " ", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["\[Kappa]", "m"], "-", 
          RowBox[{"4", " ", "\[ImaginaryI]", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", "\[Kappa]"}], "+", 
          RowBox[{"4", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], 
       RowBox[{
        RowBox[{
         RowBox[{"-", "\[Kappa]"}], " ", 
         SubscriptBox["\[Kappa]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Kappa]", "m"], "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
        RowBox[{"128", " ", "G", " ", 
         SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}]], 
      FractionBox[
       RowBox[{"4", " ", "G", " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        SubsuperscriptBox["\[Kappa]", "m", 
         RowBox[{"3", "/", "2"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", "\[Kappa]"}], "+", 
          RowBox[{"4", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], 
       RowBox[{
        RowBox[{
         RowBox[{"-", "\[Kappa]"}], " ", 
         SubscriptBox["\[Kappa]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Kappa]", "m"], "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
        RowBox[{"128", " ", "G", " ", 
         SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}]]},
     {
      FractionBox[
       RowBox[{"2", " ", 
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Kappa]", " ", 
           SubscriptBox["\[Kappa]", "m"], " ", 
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[Kappa]", "m"], "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
          RowBox[{"16", " ", "\[ImaginaryI]", " ", "G", " ", 
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "+", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           SubscriptBox["\[Omega]", "m"], " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}], 
       RowBox[{"\[Kappa]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Kappa]", " ", 
           SubscriptBox["\[Kappa]", "m"], " ", 
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[Kappa]", "m"], "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
          RowBox[{"128", " ", "G", " ", 
           SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]], 
      FractionBox[
       RowBox[{
        RowBox[{"\[Kappa]", " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"2", " ", 
            SubscriptBox["\[Kappa]", "ex"]}]}], ")"}], " ", 
         SubscriptBox["\[Kappa]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Kappa]", "m"], "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
        RowBox[{"32", " ", "G", " ", 
         SubscriptBox["\[Omega]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[ImaginaryI]", " ", 
            SuperscriptBox["\[Kappa]", "2"]}], "-", 
           RowBox[{"\[ImaginaryI]", " ", "\[Kappa]", " ", 
            SubscriptBox["\[Kappa]", "ex"]}], "+", 
           RowBox[{"4", " ", 
            SubscriptBox["\[Kappa]", "ex"], " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}], 
       RowBox[{"\[Kappa]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Kappa]", " ", 
           SubscriptBox["\[Kappa]", "m"], " ", 
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[Kappa]", "m"], "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
          RowBox[{"128", " ", "G", " ", 
           SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"32", " ", "G", " ", 
         SqrtBox[
          RowBox[{"\[Kappa]", "-", 
           SubscriptBox["\[Kappa]", "ex"]}]], " ", 
         SqrtBox[
          SubscriptBox["\[Kappa]", "ex"]], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         SubscriptBox["\[Omega]", "m"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}], 
        RowBox[{"\[Kappa]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Kappa]", " ", 
            SubscriptBox["\[Kappa]", "m"], " ", 
            RowBox[{"(", 
             RowBox[{"\[Kappa]", "-", 
              RowBox[{"4", " ", "\[ImaginaryI]", " ", 
               SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[ImaginaryI]", " ", 
               SubscriptBox["\[Kappa]", "m"]}], "+", 
              RowBox[{"4", " ", 
               SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
           RowBox[{"128", " ", "\[ImaginaryI]", " ", "G", " ", 
            SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
            RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"32", " ", "\[ImaginaryI]", " ", "G", " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           SubscriptBox["\[Kappa]", "ex"]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         SubscriptBox["\[Omega]", "m"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}], 
        RowBox[{"\[Kappa]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "\[Kappa]"}], " ", 
            SubscriptBox["\[Kappa]", "m"], " ", 
            RowBox[{"(", 
             RowBox[{"\[Kappa]", "-", 
              RowBox[{"4", " ", "\[ImaginaryI]", " ", 
               SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["\[Kappa]", "m"], "-", 
              RowBox[{"4", " ", "\[ImaginaryI]", " ", 
               SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
           RowBox[{"128", " ", "G", " ", 
            SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
            RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"32", " ", 
         SuperscriptBox["G", "2"], " ", 
         SqrtBox[
          RowBox[{"\[Kappa]", "-", 
           SubscriptBox["\[Kappa]", "ex"]}]], " ", 
         SqrtBox[
          SubscriptBox["\[Kappa]", "ex"]], " ", 
         SubscriptBox["\[Omega]", "m"]}], 
        RowBox[{
         RowBox[{"\[Kappa]", " ", 
          SubscriptBox["\[Kappa]", "m"], " ", 
          RowBox[{"(", 
           RowBox[{"\[Kappa]", "-", 
            RowBox[{"4", " ", "\[ImaginaryI]", " ", 
             SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[ImaginaryI]", " ", 
             SubscriptBox["\[Kappa]", "m"]}], "+", 
            RowBox[{"4", " ", 
             SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
         RowBox[{"128", " ", "\[ImaginaryI]", " ", "G", " ", 
          SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
          RowBox[{"Conjugate", "[", "G", "]"}]}]}]]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"32", " ", "\[ImaginaryI]", " ", 
         SuperscriptBox["G", "2"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           SubscriptBox["\[Kappa]", "ex"]}], ")"}], " ", 
         SubscriptBox["\[Omega]", "m"]}], 
        RowBox[{
         RowBox[{
          RowBox[{"-", "\[Kappa]"}], " ", 
          SubscriptBox["\[Kappa]", "m"], " ", 
          RowBox[{"(", 
           RowBox[{"\[Kappa]", "-", 
            RowBox[{"4", " ", "\[ImaginaryI]", " ", 
             SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["\[Kappa]", "m"], "-", 
            RowBox[{"4", " ", "\[ImaginaryI]", " ", 
             SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
         RowBox[{"128", " ", "G", " ", 
          SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
          RowBox[{"Conjugate", "[", "G", "]"}]}]}]]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"32", " ", 
         SuperscriptBox["G", "2"], " ", 
         SqrtBox[
          RowBox[{"\[Kappa]", "-", 
           SubscriptBox["\[Kappa]", "ex"]}]], " ", 
         SqrtBox[
          SubscriptBox["\[Kappa]", "ex"]], " ", 
         SubscriptBox["\[Omega]", "m"]}], 
        RowBox[{
         RowBox[{"\[Kappa]", " ", 
          SubscriptBox["\[Kappa]", "m"], " ", 
          RowBox[{"(", 
           RowBox[{"\[Kappa]", "-", 
            RowBox[{"4", " ", "\[ImaginaryI]", " ", 
             SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[ImaginaryI]", " ", 
             SubscriptBox["\[Kappa]", "m"]}], "+", 
            RowBox[{"4", " ", 
             SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
         RowBox[{"128", " ", "\[ImaginaryI]", " ", "G", " ", 
          SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
          RowBox[{"Conjugate", "[", "G", "]"}]}]}]]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"32", " ", "\[ImaginaryI]", " ", 
         SuperscriptBox["G", "2"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           SubscriptBox["\[Kappa]", "ex"]}], ")"}], " ", 
         SubscriptBox["\[Omega]", "m"]}], 
        RowBox[{
         RowBox[{
          RowBox[{"-", "\[Kappa]"}], " ", 
          SubscriptBox["\[Kappa]", "m"], " ", 
          RowBox[{"(", 
           RowBox[{"\[Kappa]", "-", 
            RowBox[{"4", " ", "\[ImaginaryI]", " ", 
             SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["\[Kappa]", "m"], "-", 
            RowBox[{"4", " ", "\[ImaginaryI]", " ", 
             SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
         RowBox[{"128", " ", "G", " ", 
          SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
          RowBox[{"Conjugate", "[", "G", "]"}]}]}]]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"4", " ", "\[ImaginaryI]", " ", "G", " ", 
         SqrtBox[
          RowBox[{"\[Kappa]", "-", 
           SubscriptBox["\[Kappa]", "ex"]}]], " ", 
         SqrtBox[
          SubscriptBox["\[Kappa]", "m"]], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Kappa]", "m"], "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], 
        RowBox[{
         RowBox[{"\[Kappa]", " ", 
          SubscriptBox["\[Kappa]", "m"], " ", 
          RowBox[{"(", 
           RowBox[{"\[Kappa]", "-", 
            RowBox[{"4", " ", "\[ImaginaryI]", " ", 
             SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["\[Kappa]", "m"], "-", 
            RowBox[{"4", " ", "\[ImaginaryI]", " ", 
             SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
         RowBox[{"128", " ", "G", " ", 
          SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
          RowBox[{"Conjugate", "[", "G", "]"}]}]}]]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"4", " ", "\[ImaginaryI]", " ", "G", " ", 
         SqrtBox[
          RowBox[{"\[Kappa]", "-", 
           SubscriptBox["\[Kappa]", "ex"]}]], " ", 
         SubsuperscriptBox["\[Kappa]", "m", 
          RowBox[{"3", "/", "2"}]], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], 
        RowBox[{
         RowBox[{"\[Kappa]", " ", 
          SubscriptBox["\[Kappa]", "m"], " ", 
          RowBox[{"(", 
           RowBox[{"\[Kappa]", "-", 
            RowBox[{"4", " ", "\[ImaginaryI]", " ", 
             SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["\[Kappa]", "m"], "-", 
            RowBox[{"4", " ", "\[ImaginaryI]", " ", 
             SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
         RowBox[{"128", " ", "G", " ", 
          SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
          RowBox[{"Conjugate", "[", "G", "]"}]}]}]]}]},
     {
      RowBox[{"-", 
       FractionBox[
        RowBox[{"32", " ", "\[ImaginaryI]", " ", "G", " ", 
         SubscriptBox["\[Kappa]", "ex"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         SubscriptBox["\[Omega]", "m"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}], 
        RowBox[{"\[Kappa]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "\[Kappa]"}], " ", 
            SubscriptBox["\[Kappa]", "m"], " ", 
            RowBox[{"(", 
             RowBox[{"\[Kappa]", "-", 
              RowBox[{"4", " ", "\[ImaginaryI]", " ", 
               SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["\[Kappa]", "m"], "-", 
              RowBox[{"4", " ", "\[ImaginaryI]", " ", 
               SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
           RowBox[{"128", " ", "G", " ", 
            SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
            RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"32", " ", "G", " ", 
         SqrtBox[
          RowBox[{"\[Kappa]", "-", 
           SubscriptBox["\[Kappa]", "ex"]}]], " ", 
         SqrtBox[
          SubscriptBox["\[Kappa]", "ex"]], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         SubscriptBox["\[Omega]", "m"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}], 
        RowBox[{"\[Kappa]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Kappa]", " ", 
            SubscriptBox["\[Kappa]", "m"], " ", 
            RowBox[{"(", 
             RowBox[{"\[Kappa]", "-", 
              RowBox[{"4", " ", "\[ImaginaryI]", " ", 
               SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[ImaginaryI]", " ", 
               SubscriptBox["\[Kappa]", "m"]}], "+", 
              RowBox[{"4", " ", 
               SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
           RowBox[{"128", " ", "\[ImaginaryI]", " ", "G", " ", 
            SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
            RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]]}], 
      FractionBox[
       RowBox[{
        RowBox[{
         RowBox[{"-", "\[Kappa]"}], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"2", " ", 
            SubscriptBox["\[Kappa]", "ex"]}]}], ")"}], " ", 
         SubscriptBox["\[Kappa]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Kappa]", "m"], "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
        RowBox[{"32", " ", "G", " ", 
         SubscriptBox["\[Omega]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[ImaginaryI]", " ", "\[Kappa]", " ", 
            SubscriptBox["\[Kappa]", "ex"]}], "+", 
           RowBox[{"4", " ", "\[Kappa]", " ", 
            SubscriptBox["\[Omega]", "m"]}], "-", 
           RowBox[{"4", " ", 
            SubscriptBox["\[Kappa]", "ex"], " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}], 
       RowBox[{"\[Kappa]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Kappa]", " ", 
           SubscriptBox["\[Kappa]", "m"], " ", 
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[Kappa]", "m"], "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
          RowBox[{"128", " ", "G", " ", 
           SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]], 
      FractionBox[
       RowBox[{"2", " ", 
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Kappa]", " ", 
           SubscriptBox["\[Kappa]", "m"], " ", 
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[Kappa]", "m"], "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
          RowBox[{"16", " ", "\[ImaginaryI]", " ", "G", " ", 
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "+", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           SubscriptBox["\[Omega]", "m"], " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}], 
       RowBox[{"\[Kappa]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Kappa]", " ", 
           SubscriptBox["\[Kappa]", "m"], " ", 
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[Kappa]", "m"], "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
          RowBox[{"128", " ", "G", " ", 
           SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"32", " ", "\[ImaginaryI]", " ", 
         SuperscriptBox["G", "2"], " ", 
         SubscriptBox["\[Kappa]", "ex"], " ", 
         SubscriptBox["\[Omega]", "m"]}], 
        RowBox[{
         RowBox[{
          RowBox[{"-", "\[Kappa]"}], " ", 
          SubscriptBox["\[Kappa]", "m"], " ", 
          RowBox[{"(", 
           RowBox[{"\[Kappa]", "-", 
            RowBox[{"4", " ", "\[ImaginaryI]", " ", 
             SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["\[Kappa]", "m"], "-", 
            RowBox[{"4", " ", "\[ImaginaryI]", " ", 
             SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
         RowBox[{"128", " ", "G", " ", 
          SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
          RowBox[{"Conjugate", "[", "G", "]"}]}]}]]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"32", " ", 
         SuperscriptBox["G", "2"], " ", 
         SqrtBox[
          RowBox[{"\[Kappa]", "-", 
           SubscriptBox["\[Kappa]", "ex"]}]], " ", 
         SqrtBox[
          SubscriptBox["\[Kappa]", "ex"]], " ", 
         SubscriptBox["\[Omega]", "m"]}], 
        RowBox[{
         RowBox[{"\[Kappa]", " ", 
          SubscriptBox["\[Kappa]", "m"], " ", 
          RowBox[{"(", 
           RowBox[{"\[Kappa]", "-", 
            RowBox[{"4", " ", "\[ImaginaryI]", " ", 
             SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[ImaginaryI]", " ", 
             SubscriptBox["\[Kappa]", "m"]}], "+", 
            RowBox[{"4", " ", 
             SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
         RowBox[{"128", " ", "\[ImaginaryI]", " ", "G", " ", 
          SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
          RowBox[{"Conjugate", "[", "G", "]"}]}]}]]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"32", " ", "\[ImaginaryI]", " ", 
         SuperscriptBox["G", "2"], " ", 
         SubscriptBox["\[Kappa]", "ex"], " ", 
         SubscriptBox["\[Omega]", "m"]}], 
        RowBox[{
         RowBox[{
          RowBox[{"-", "\[Kappa]"}], " ", 
          SubscriptBox["\[Kappa]", "m"], " ", 
          RowBox[{"(", 
           RowBox[{"\[Kappa]", "-", 
            RowBox[{"4", " ", "\[ImaginaryI]", " ", 
             SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["\[Kappa]", "m"], "-", 
            RowBox[{"4", " ", "\[ImaginaryI]", " ", 
             SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
         RowBox[{"128", " ", "G", " ", 
          SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
          RowBox[{"Conjugate", "[", "G", "]"}]}]}]]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"32", " ", 
         SuperscriptBox["G", "2"], " ", 
         SqrtBox[
          RowBox[{"\[Kappa]", "-", 
           SubscriptBox["\[Kappa]", "ex"]}]], " ", 
         SqrtBox[
          SubscriptBox["\[Kappa]", "ex"]], " ", 
         SubscriptBox["\[Omega]", "m"]}], 
        RowBox[{
         RowBox[{"\[Kappa]", " ", 
          SubscriptBox["\[Kappa]", "m"], " ", 
          RowBox[{"(", 
           RowBox[{"\[Kappa]", "-", 
            RowBox[{"4", " ", "\[ImaginaryI]", " ", 
             SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[ImaginaryI]", " ", 
             SubscriptBox["\[Kappa]", "m"]}], "+", 
            RowBox[{"4", " ", 
             SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
         RowBox[{"128", " ", "\[ImaginaryI]", " ", "G", " ", 
          SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
          RowBox[{"Conjugate", "[", "G", "]"}]}]}]]}], 
      FractionBox[
       RowBox[{"4", " ", "G", " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "m"]], " ", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["\[Kappa]", "m"], "-", 
          RowBox[{"4", " ", "\[ImaginaryI]", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", "\[Kappa]"}], "+", 
          RowBox[{"4", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], 
       RowBox[{
        RowBox[{
         RowBox[{"-", "\[Kappa]"}], " ", 
         SubscriptBox["\[Kappa]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Kappa]", "m"], "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
        RowBox[{"128", " ", "G", " ", 
         SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}]], 
      FractionBox[
       RowBox[{"4", " ", "G", " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        SubsuperscriptBox["\[Kappa]", "m", 
         RowBox[{"3", "/", "2"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", "\[Kappa]"}], "+", 
          RowBox[{"4", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], 
       RowBox[{
        RowBox[{
         RowBox[{"-", "\[Kappa]"}], " ", 
         SubscriptBox["\[Kappa]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Kappa]", "m"], "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
        RowBox[{"128", " ", "G", " ", 
         SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}]]},
     {
      RowBox[{"-", 
       FractionBox[
        RowBox[{"32", " ", "G", " ", 
         SqrtBox[
          RowBox[{"\[Kappa]", "-", 
           SubscriptBox["\[Kappa]", "ex"]}]], " ", 
         SqrtBox[
          SubscriptBox["\[Kappa]", "ex"]], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         SubscriptBox["\[Omega]", "m"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}], 
        RowBox[{"\[Kappa]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Kappa]", " ", 
            SubscriptBox["\[Kappa]", "m"], " ", 
            RowBox[{"(", 
             RowBox[{"\[Kappa]", "-", 
              RowBox[{"4", " ", "\[ImaginaryI]", " ", 
               SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[ImaginaryI]", " ", 
               SubscriptBox["\[Kappa]", "m"]}], "+", 
              RowBox[{"4", " ", 
               SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
           RowBox[{"128", " ", "\[ImaginaryI]", " ", "G", " ", 
            SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
            RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"32", " ", "\[ImaginaryI]", " ", "G", " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           SubscriptBox["\[Kappa]", "ex"]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         SubscriptBox["\[Omega]", "m"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}], 
        RowBox[{"\[Kappa]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "\[Kappa]"}], " ", 
            SubscriptBox["\[Kappa]", "m"], " ", 
            RowBox[{"(", 
             RowBox[{"\[Kappa]", "-", 
              RowBox[{"4", " ", "\[ImaginaryI]", " ", 
               SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["\[Kappa]", "m"], "-", 
              RowBox[{"4", " ", "\[ImaginaryI]", " ", 
               SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
           RowBox[{"128", " ", "G", " ", 
            SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
            RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]]}], 
      FractionBox[
       RowBox[{"2", " ", 
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Kappa]", " ", 
           SubscriptBox["\[Kappa]", "m"], " ", 
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[Kappa]", "m"], "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
          RowBox[{"16", " ", "\[ImaginaryI]", " ", "G", " ", 
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "+", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           SubscriptBox["\[Omega]", "m"], " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}], 
       RowBox[{"\[Kappa]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Kappa]", " ", 
           SubscriptBox["\[Kappa]", "m"], " ", 
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[Kappa]", "m"], "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
          RowBox[{"128", " ", "G", " ", 
           SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]], 
      FractionBox[
       RowBox[{
        RowBox[{"\[Kappa]", " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"2", " ", 
            SubscriptBox["\[Kappa]", "ex"]}]}], ")"}], " ", 
         SubscriptBox["\[Kappa]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Kappa]", "m"], "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
        RowBox[{"32", " ", "G", " ", 
         SubscriptBox["\[Omega]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[ImaginaryI]", " ", 
            SuperscriptBox["\[Kappa]", "2"]}], "-", 
           RowBox[{"\[ImaginaryI]", " ", "\[Kappa]", " ", 
            SubscriptBox["\[Kappa]", "ex"]}], "+", 
           RowBox[{"4", " ", 
            SubscriptBox["\[Kappa]", "ex"], " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}], 
       RowBox[{"\[Kappa]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Kappa]", " ", 
           SubscriptBox["\[Kappa]", "m"], " ", 
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[Kappa]", "m"], "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
          RowBox[{"128", " ", "G", " ", 
           SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"32", " ", 
         SuperscriptBox["G", "2"], " ", 
         SqrtBox[
          RowBox[{"\[Kappa]", "-", 
           SubscriptBox["\[Kappa]", "ex"]}]], " ", 
         SqrtBox[
          SubscriptBox["\[Kappa]", "ex"]], " ", 
         SubscriptBox["\[Omega]", "m"]}], 
        RowBox[{
         RowBox[{"\[Kappa]", " ", 
          SubscriptBox["\[Kappa]", "m"], " ", 
          RowBox[{"(", 
           RowBox[{"\[Kappa]", "-", 
            RowBox[{"4", " ", "\[ImaginaryI]", " ", 
             SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[ImaginaryI]", " ", 
             SubscriptBox["\[Kappa]", "m"]}], "+", 
            RowBox[{"4", " ", 
             SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
         RowBox[{"128", " ", "\[ImaginaryI]", " ", "G", " ", 
          SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
          RowBox[{"Conjugate", "[", "G", "]"}]}]}]]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"32", " ", "\[ImaginaryI]", " ", 
         SuperscriptBox["G", "2"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           SubscriptBox["\[Kappa]", "ex"]}], ")"}], " ", 
         SubscriptBox["\[Omega]", "m"]}], 
        RowBox[{
         RowBox[{
          RowBox[{"-", "\[Kappa]"}], " ", 
          SubscriptBox["\[Kappa]", "m"], " ", 
          RowBox[{"(", 
           RowBox[{"\[Kappa]", "-", 
            RowBox[{"4", " ", "\[ImaginaryI]", " ", 
             SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["\[Kappa]", "m"], "-", 
            RowBox[{"4", " ", "\[ImaginaryI]", " ", 
             SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
         RowBox[{"128", " ", "G", " ", 
          SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
          RowBox[{"Conjugate", "[", "G", "]"}]}]}]]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"32", " ", 
         SuperscriptBox["G", "2"], " ", 
         SqrtBox[
          RowBox[{"\[Kappa]", "-", 
           SubscriptBox["\[Kappa]", "ex"]}]], " ", 
         SqrtBox[
          SubscriptBox["\[Kappa]", "ex"]], " ", 
         SubscriptBox["\[Omega]", "m"]}], 
        RowBox[{
         RowBox[{"\[Kappa]", " ", 
          SubscriptBox["\[Kappa]", "m"], " ", 
          RowBox[{"(", 
           RowBox[{"\[Kappa]", "-", 
            RowBox[{"4", " ", "\[ImaginaryI]", " ", 
             SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[ImaginaryI]", " ", 
             SubscriptBox["\[Kappa]", "m"]}], "+", 
            RowBox[{"4", " ", 
             SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
         RowBox[{"128", " ", "\[ImaginaryI]", " ", "G", " ", 
          SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
          RowBox[{"Conjugate", "[", "G", "]"}]}]}]]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"32", " ", "\[ImaginaryI]", " ", 
         SuperscriptBox["G", "2"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           SubscriptBox["\[Kappa]", "ex"]}], ")"}], " ", 
         SubscriptBox["\[Omega]", "m"]}], 
        RowBox[{
         RowBox[{
          RowBox[{"-", "\[Kappa]"}], " ", 
          SubscriptBox["\[Kappa]", "m"], " ", 
          RowBox[{"(", 
           RowBox[{"\[Kappa]", "-", 
            RowBox[{"4", " ", "\[ImaginaryI]", " ", 
             SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["\[Kappa]", "m"], "-", 
            RowBox[{"4", " ", "\[ImaginaryI]", " ", 
             SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
         RowBox[{"128", " ", "G", " ", 
          SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
          RowBox[{"Conjugate", "[", "G", "]"}]}]}]]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"4", " ", "\[ImaginaryI]", " ", "G", " ", 
         SqrtBox[
          RowBox[{"\[Kappa]", "-", 
           SubscriptBox["\[Kappa]", "ex"]}]], " ", 
         SqrtBox[
          SubscriptBox["\[Kappa]", "m"]], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Kappa]", "m"], "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], 
        RowBox[{
         RowBox[{"\[Kappa]", " ", 
          SubscriptBox["\[Kappa]", "m"], " ", 
          RowBox[{"(", 
           RowBox[{"\[Kappa]", "-", 
            RowBox[{"4", " ", "\[ImaginaryI]", " ", 
             SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["\[Kappa]", "m"], "-", 
            RowBox[{"4", " ", "\[ImaginaryI]", " ", 
             SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
         RowBox[{"128", " ", "G", " ", 
          SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
          RowBox[{"Conjugate", "[", "G", "]"}]}]}]]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"4", " ", "\[ImaginaryI]", " ", "G", " ", 
         SqrtBox[
          RowBox[{"\[Kappa]", "-", 
           SubscriptBox["\[Kappa]", "ex"]}]], " ", 
         SubsuperscriptBox["\[Kappa]", "m", 
          RowBox[{"3", "/", "2"}]], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], 
        RowBox[{
         RowBox[{"\[Kappa]", " ", 
          SubscriptBox["\[Kappa]", "m"], " ", 
          RowBox[{"(", 
           RowBox[{"\[Kappa]", "-", 
            RowBox[{"4", " ", "\[ImaginaryI]", " ", 
             SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["\[Kappa]", "m"], "-", 
            RowBox[{"4", " ", "\[ImaginaryI]", " ", 
             SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
         RowBox[{"128", " ", "G", " ", 
          SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
          RowBox[{"Conjugate", "[", "G", "]"}]}]}]]}]},
     {
      FractionBox[
       RowBox[{"32", " ", "\[ImaginaryI]", " ", 
        SubscriptBox["\[Kappa]", "ex"], " ", 
        SubscriptBox["\[Omega]", "m"], " ", 
        SuperscriptBox[
         RowBox[{"Conjugate", "[", "G", "]"}], "2"]}], 
       RowBox[{
        RowBox[{
         RowBox[{"-", "\[Kappa]"}], " ", 
         SubscriptBox["\[Kappa]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Kappa]", "m"], "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
        RowBox[{"128", " ", "G", " ", 
         SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}]], 
      FractionBox[
       RowBox[{"32", " ", 
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        SubscriptBox["\[Omega]", "m"], " ", 
        SuperscriptBox[
         RowBox[{"Conjugate", "[", "G", "]"}], "2"]}], 
       RowBox[{
        RowBox[{"\[Kappa]", " ", 
         SubscriptBox["\[Kappa]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[ImaginaryI]", " ", 
            SubscriptBox["\[Kappa]", "m"]}], "+", 
           RowBox[{"4", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
        RowBox[{"128", " ", "\[ImaginaryI]", " ", "G", " ", 
         SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}]], 
      FractionBox[
       RowBox[{"32", " ", "\[ImaginaryI]", " ", 
        SubscriptBox["\[Kappa]", "ex"], " ", 
        SubscriptBox["\[Omega]", "m"], " ", 
        SuperscriptBox[
         RowBox[{"Conjugate", "[", "G", "]"}], "2"]}], 
       RowBox[{
        RowBox[{
         RowBox[{"-", "\[Kappa]"}], " ", 
         SubscriptBox["\[Kappa]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Kappa]", "m"], "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
        RowBox[{"128", " ", "G", " ", 
         SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}]], 
      FractionBox[
       RowBox[{"32", " ", 
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        SubscriptBox["\[Omega]", "m"], " ", 
        SuperscriptBox[
         RowBox[{"Conjugate", "[", "G", "]"}], "2"]}], 
       RowBox[{
        RowBox[{"\[Kappa]", " ", 
         SubscriptBox["\[Kappa]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[ImaginaryI]", " ", 
            SubscriptBox["\[Kappa]", "m"]}], "+", 
           RowBox[{"4", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
        RowBox[{"128", " ", "\[ImaginaryI]", " ", "G", " ", 
         SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}]], 
      FractionBox[
       RowBox[{
        RowBox[{"\[Kappa]", " ", 
         SubscriptBox["\[Kappa]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["\[Kappa]", "ex"], "+", 
              RowBox[{"2", " ", "\[ImaginaryI]", " ", 
               SubscriptBox["\[Omega]", "m"]}]}], ")"}]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Kappa]", "m"], "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[ImaginaryI]", " ", "\[Kappa]"}], "+", 
           RowBox[{"4", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
        RowBox[{"32", " ", "G", " ", 
         SubscriptBox["\[Omega]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Kappa]", " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["\[Kappa]", "ex"], "+", 
              RowBox[{"4", " ", "\[ImaginaryI]", " ", 
               SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
           RowBox[{"8", " ", 
            SubscriptBox["\[Omega]", "m"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], " ", 
               SubscriptBox["\[Kappa]", "ex"]}], "+", 
              RowBox[{"2", " ", 
               SubscriptBox["\[Omega]", "m"]}]}], ")"}]}]}], ")"}], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", "\[Kappa]"}], "+", 
          RowBox[{"4", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[Kappa]"}], " ", 
           SubscriptBox["\[Kappa]", "m"], " ", 
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[Kappa]", "m"], "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
          RowBox[{"128", " ", "G", " ", 
           SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]], 
      FractionBox[
       RowBox[{"2", " ", 
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Kappa]", " ", 
           SubscriptBox["\[Kappa]", "m"], " ", 
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[ImaginaryI]", " ", 
              SubscriptBox["\[Kappa]", "m"]}], "+", 
             RowBox[{"4", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
          RowBox[{"16", " ", "G", " ", 
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "-", 
             RowBox[{"8", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           SubscriptBox["\[Omega]", "m"], " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Kappa]", "-", 
          RowBox[{"4", " ", "\[ImaginaryI]", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Kappa]", " ", 
           SubscriptBox["\[Kappa]", "m"], " ", 
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[ImaginaryI]", " ", 
              SubscriptBox["\[Kappa]", "m"]}], "+", 
             RowBox[{"4", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
          RowBox[{"128", " ", "\[ImaginaryI]", " ", "G", " ", 
           SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]], 
      FractionBox[
       RowBox[{"32", " ", "\[ImaginaryI]", " ", "G", " ", "\[Kappa]", " ", 
        SubscriptBox["\[Kappa]", "ex"], " ", 
        SubscriptBox["\[Omega]", "m"], " ", 
        RowBox[{"Conjugate", "[", "G", "]"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Kappa]", "-", 
          RowBox[{"4", " ", "\[ImaginaryI]", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[Kappa]"}], " ", 
           SubscriptBox["\[Kappa]", "m"], " ", 
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[Kappa]", "m"], "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
          RowBox[{"128", " ", "G", " ", 
           SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]], 
      FractionBox[
       RowBox[{"32", " ", "G", " ", "\[Kappa]", " ", 
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        SubscriptBox["\[Omega]", "m"], " ", 
        RowBox[{"Conjugate", "[", "G", "]"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Kappa]", "-", 
          RowBox[{"4", " ", "\[ImaginaryI]", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Kappa]", " ", 
           SubscriptBox["\[Kappa]", "m"], " ", 
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[ImaginaryI]", " ", 
              SubscriptBox["\[Kappa]", "m"]}], "+", 
             RowBox[{"4", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
          RowBox[{"128", " ", "\[ImaginaryI]", " ", "G", " ", 
           SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]], 
      FractionBox[
       RowBox[{"4", " ", "\[Kappa]", " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "m"]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           SubscriptBox["\[Kappa]", "m"]}], "+", 
          RowBox[{"4", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        RowBox[{"Conjugate", "[", "G", "]"}]}], 
       RowBox[{
        RowBox[{"\[Kappa]", " ", 
         SubscriptBox["\[Kappa]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Kappa]", "m"], "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
        RowBox[{"128", " ", "G", " ", 
         SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}]], 
      FractionBox[
       RowBox[{"4", " ", "\[ImaginaryI]", " ", "\[Kappa]", " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        SubsuperscriptBox["\[Kappa]", "m", 
         RowBox[{"3", "/", "2"}]], " ", 
        RowBox[{"Conjugate", "[", "G", "]"}]}], 
       RowBox[{
        RowBox[{"\[Kappa]", " ", 
         SubscriptBox["\[Kappa]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Kappa]", "m"], "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
        RowBox[{"128", " ", "G", " ", 
         SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}]]},
     {
      FractionBox[
       RowBox[{"32", " ", 
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        SubscriptBox["\[Omega]", "m"], " ", 
        SuperscriptBox[
         RowBox[{"Conjugate", "[", "G", "]"}], "2"]}], 
       RowBox[{
        RowBox[{"\[Kappa]", " ", 
         SubscriptBox["\[Kappa]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[ImaginaryI]", " ", 
            SubscriptBox["\[Kappa]", "m"]}], "+", 
           RowBox[{"4", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
        RowBox[{"128", " ", "\[ImaginaryI]", " ", "G", " ", 
         SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}]], 
      FractionBox[
       RowBox[{"32", " ", 
        RowBox[{"(", 
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}], ")"}], " ", 
        SubscriptBox["\[Omega]", "m"], " ", 
        SuperscriptBox[
         RowBox[{"Conjugate", "[", "G", "]"}], "2"]}], 
       RowBox[{
        RowBox[{"\[Kappa]", " ", 
         SubscriptBox["\[Kappa]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[ImaginaryI]", " ", 
            SubscriptBox["\[Kappa]", "m"]}], "+", 
           RowBox[{"4", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
        RowBox[{"128", " ", "\[ImaginaryI]", " ", "G", " ", 
         SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}]], 
      FractionBox[
       RowBox[{"32", " ", 
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        SubscriptBox["\[Omega]", "m"], " ", 
        SuperscriptBox[
         RowBox[{"Conjugate", "[", "G", "]"}], "2"]}], 
       RowBox[{
        RowBox[{"\[Kappa]", " ", 
         SubscriptBox["\[Kappa]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[ImaginaryI]", " ", 
            SubscriptBox["\[Kappa]", "m"]}], "+", 
           RowBox[{"4", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
        RowBox[{"128", " ", "\[ImaginaryI]", " ", "G", " ", 
         SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}]], 
      FractionBox[
       RowBox[{"32", " ", 
        RowBox[{"(", 
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}], ")"}], " ", 
        SubscriptBox["\[Omega]", "m"], " ", 
        SuperscriptBox[
         RowBox[{"Conjugate", "[", "G", "]"}], "2"]}], 
       RowBox[{
        RowBox[{"\[Kappa]", " ", 
         SubscriptBox["\[Kappa]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[ImaginaryI]", " ", 
            SubscriptBox["\[Kappa]", "m"]}], "+", 
           RowBox[{"4", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
        RowBox[{"128", " ", "\[ImaginaryI]", " ", "G", " ", 
         SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}]], 
      FractionBox[
       RowBox[{"2", " ", 
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Kappa]", " ", 
           SubscriptBox["\[Kappa]", "m"], " ", 
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[ImaginaryI]", " ", 
              SubscriptBox["\[Kappa]", "m"]}], "+", 
             RowBox[{"4", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
          RowBox[{"16", " ", "G", " ", 
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "-", 
             RowBox[{"8", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           SubscriptBox["\[Omega]", "m"], " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Kappa]", "-", 
          RowBox[{"4", " ", "\[ImaginaryI]", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Kappa]", " ", 
           SubscriptBox["\[Kappa]", "m"], " ", 
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[ImaginaryI]", " ", 
              SubscriptBox["\[Kappa]", "m"]}], "+", 
             RowBox[{"4", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
          RowBox[{"128", " ", "\[ImaginaryI]", " ", "G", " ", 
           SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]], 
      FractionBox[
       RowBox[{
        RowBox[{"\[Kappa]", " ", 
         SubscriptBox["\[Kappa]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Kappa]", "m"], "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"2", " ", 
            SubscriptBox["\[Kappa]", "ex"]}], "+", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[ImaginaryI]", " ", "\[Kappa]"}], "+", 
           RowBox[{"4", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
        RowBox[{"32", " ", "G", " ", 
         SubscriptBox["\[Omega]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[Kappa]", "2"], "-", 
           RowBox[{"\[Kappa]", " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["\[Kappa]", "ex"], "+", 
              RowBox[{"4", " ", "\[ImaginaryI]", " ", 
               SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
           RowBox[{"8", " ", 
            SubscriptBox["\[Omega]", "m"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[ImaginaryI]", " ", 
               SubscriptBox["\[Kappa]", "ex"]}], "+", 
              RowBox[{"2", " ", 
               SubscriptBox["\[Omega]", "m"]}]}], ")"}]}]}], ")"}], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Kappa]", "-", 
          RowBox[{"4", " ", "\[ImaginaryI]", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Kappa]", " ", 
           SubscriptBox["\[Kappa]", "m"], " ", 
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[ImaginaryI]", " ", 
              SubscriptBox["\[Kappa]", "m"]}], "+", 
             RowBox[{"4", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
          RowBox[{"128", " ", "\[ImaginaryI]", " ", "G", " ", 
           SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]], 
      FractionBox[
       RowBox[{"32", " ", "G", " ", "\[Kappa]", " ", 
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        SubscriptBox["\[Omega]", "m"], " ", 
        RowBox[{"Conjugate", "[", "G", "]"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Kappa]", "-", 
          RowBox[{"4", " ", "\[ImaginaryI]", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Kappa]", " ", 
           SubscriptBox["\[Kappa]", "m"], " ", 
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[ImaginaryI]", " ", 
              SubscriptBox["\[Kappa]", "m"]}], "+", 
             RowBox[{"4", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
          RowBox[{"128", " ", "\[ImaginaryI]", " ", "G", " ", 
           SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]], 
      FractionBox[
       RowBox[{"32", " ", "\[ImaginaryI]", " ", "G", " ", "\[Kappa]", " ", 
        RowBox[{"(", 
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}], ")"}], " ", 
        SubscriptBox["\[Omega]", "m"], " ", 
        RowBox[{"Conjugate", "[", "G", "]"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Kappa]", "-", 
          RowBox[{"4", " ", "\[ImaginaryI]", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[Kappa]"}], " ", 
           SubscriptBox["\[Kappa]", "m"], " ", 
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[Kappa]", "m"], "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
          RowBox[{"128", " ", "G", " ", 
           SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]], 
      FractionBox[
       RowBox[{"4", " ", "\[Kappa]", " ", 
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "m"]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           SubscriptBox["\[Kappa]", "m"]}], "+", 
          RowBox[{"4", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        RowBox[{"Conjugate", "[", "G", "]"}]}], 
       RowBox[{
        RowBox[{"\[Kappa]", " ", 
         SubscriptBox["\[Kappa]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Kappa]", "m"], "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
        RowBox[{"128", " ", "G", " ", 
         SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}]], 
      FractionBox[
       RowBox[{"4", " ", "\[ImaginaryI]", " ", "\[Kappa]", " ", 
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SubsuperscriptBox["\[Kappa]", "m", 
         RowBox[{"3", "/", "2"}]], " ", 
        RowBox[{"Conjugate", "[", "G", "]"}]}], 
       RowBox[{
        RowBox[{"\[Kappa]", " ", 
         SubscriptBox["\[Kappa]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Kappa]", "m"], "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
        RowBox[{"128", " ", "G", " ", 
         SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}]]},
     {
      FractionBox[
       RowBox[{"32", " ", "\[ImaginaryI]", " ", 
        SubscriptBox["\[Kappa]", "ex"], " ", 
        SubscriptBox["\[Omega]", "m"], " ", 
        SuperscriptBox[
         RowBox[{"Conjugate", "[", "G", "]"}], "2"]}], 
       RowBox[{
        RowBox[{
         RowBox[{"-", "\[Kappa]"}], " ", 
         SubscriptBox["\[Kappa]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Kappa]", "m"], "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
        RowBox[{"128", " ", "G", " ", 
         SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}]], 
      FractionBox[
       RowBox[{"32", " ", 
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        SubscriptBox["\[Omega]", "m"], " ", 
        SuperscriptBox[
         RowBox[{"Conjugate", "[", "G", "]"}], "2"]}], 
       RowBox[{
        RowBox[{"\[Kappa]", " ", 
         SubscriptBox["\[Kappa]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[ImaginaryI]", " ", 
            SubscriptBox["\[Kappa]", "m"]}], "+", 
           RowBox[{"4", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
        RowBox[{"128", " ", "\[ImaginaryI]", " ", "G", " ", 
         SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}]], 
      FractionBox[
       RowBox[{"32", " ", "\[ImaginaryI]", " ", 
        SubscriptBox["\[Kappa]", "ex"], " ", 
        SubscriptBox["\[Omega]", "m"], " ", 
        SuperscriptBox[
         RowBox[{"Conjugate", "[", "G", "]"}], "2"]}], 
       RowBox[{
        RowBox[{
         RowBox[{"-", "\[Kappa]"}], " ", 
         SubscriptBox["\[Kappa]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Kappa]", "m"], "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
        RowBox[{"128", " ", "G", " ", 
         SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}]], 
      FractionBox[
       RowBox[{"32", " ", 
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        SubscriptBox["\[Omega]", "m"], " ", 
        SuperscriptBox[
         RowBox[{"Conjugate", "[", "G", "]"}], "2"]}], 
       RowBox[{
        RowBox[{"\[Kappa]", " ", 
         SubscriptBox["\[Kappa]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[ImaginaryI]", " ", 
            SubscriptBox["\[Kappa]", "m"]}], "+", 
           RowBox[{"4", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
        RowBox[{"128", " ", "\[ImaginaryI]", " ", "G", " ", 
         SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}]], 
      FractionBox[
       RowBox[{"32", " ", "\[ImaginaryI]", " ", "G", " ", "\[Kappa]", " ", 
        SubscriptBox["\[Kappa]", "ex"], " ", 
        SubscriptBox["\[Omega]", "m"], " ", 
        RowBox[{"Conjugate", "[", "G", "]"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Kappa]", "-", 
          RowBox[{"4", " ", "\[ImaginaryI]", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[Kappa]"}], " ", 
           SubscriptBox["\[Kappa]", "m"], " ", 
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[Kappa]", "m"], "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
          RowBox[{"128", " ", "G", " ", 
           SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]], 
      FractionBox[
       RowBox[{"32", " ", "G", " ", "\[Kappa]", " ", 
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        SubscriptBox["\[Omega]", "m"], " ", 
        RowBox[{"Conjugate", "[", "G", "]"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Kappa]", "-", 
          RowBox[{"4", " ", "\[ImaginaryI]", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Kappa]", " ", 
           SubscriptBox["\[Kappa]", "m"], " ", 
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[ImaginaryI]", " ", 
              SubscriptBox["\[Kappa]", "m"]}], "+", 
             RowBox[{"4", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
          RowBox[{"128", " ", "\[ImaginaryI]", " ", "G", " ", 
           SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]], 
      FractionBox[
       RowBox[{
        RowBox[{"\[Kappa]", " ", 
         SubscriptBox["\[Kappa]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["\[Kappa]", "ex"], "+", 
              RowBox[{"2", " ", "\[ImaginaryI]", " ", 
               SubscriptBox["\[Omega]", "m"]}]}], ")"}]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Kappa]", "m"], "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[ImaginaryI]", " ", "\[Kappa]"}], "+", 
           RowBox[{"4", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
        RowBox[{"32", " ", "G", " ", 
         SubscriptBox["\[Omega]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Kappa]", " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["\[Kappa]", "ex"], "+", 
              RowBox[{"4", " ", "\[ImaginaryI]", " ", 
               SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
           RowBox[{"8", " ", 
            SubscriptBox["\[Omega]", "m"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], " ", 
               SubscriptBox["\[Kappa]", "ex"]}], "+", 
              RowBox[{"2", " ", 
               SubscriptBox["\[Omega]", "m"]}]}], ")"}]}]}], ")"}], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", "\[Kappa]"}], "+", 
          RowBox[{"4", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[Kappa]"}], " ", 
           SubscriptBox["\[Kappa]", "m"], " ", 
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[Kappa]", "m"], "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
          RowBox[{"128", " ", "G", " ", 
           SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]], 
      FractionBox[
       RowBox[{"2", " ", 
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Kappa]", " ", 
           SubscriptBox["\[Kappa]", "m"], " ", 
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[ImaginaryI]", " ", 
              SubscriptBox["\[Kappa]", "m"]}], "+", 
             RowBox[{"4", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
          RowBox[{"16", " ", "G", " ", 
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "-", 
             RowBox[{"8", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           SubscriptBox["\[Omega]", "m"], " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Kappa]", "-", 
          RowBox[{"4", " ", "\[ImaginaryI]", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Kappa]", " ", 
           SubscriptBox["\[Kappa]", "m"], " ", 
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[ImaginaryI]", " ", 
              SubscriptBox["\[Kappa]", "m"]}], "+", 
             RowBox[{"4", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
          RowBox[{"128", " ", "\[ImaginaryI]", " ", "G", " ", 
           SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]], 
      FractionBox[
       RowBox[{"4", " ", "\[Kappa]", " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "m"]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           SubscriptBox["\[Kappa]", "m"]}], "+", 
          RowBox[{"4", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        RowBox[{"Conjugate", "[", "G", "]"}]}], 
       RowBox[{
        RowBox[{"\[Kappa]", " ", 
         SubscriptBox["\[Kappa]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Kappa]", "m"], "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
        RowBox[{"128", " ", "G", " ", 
         SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}]], 
      FractionBox[
       RowBox[{"4", " ", "\[ImaginaryI]", " ", "\[Kappa]", " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        SubsuperscriptBox["\[Kappa]", "m", 
         RowBox[{"3", "/", "2"}]], " ", 
        RowBox[{"Conjugate", "[", "G", "]"}]}], 
       RowBox[{
        RowBox[{"\[Kappa]", " ", 
         SubscriptBox["\[Kappa]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Kappa]", "m"], "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
        RowBox[{"128", " ", "G", " ", 
         SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}]]},
     {
      FractionBox[
       RowBox[{"32", " ", 
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        SubscriptBox["\[Omega]", "m"], " ", 
        SuperscriptBox[
         RowBox[{"Conjugate", "[", "G", "]"}], "2"]}], 
       RowBox[{
        RowBox[{"\[Kappa]", " ", 
         SubscriptBox["\[Kappa]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[ImaginaryI]", " ", 
            SubscriptBox["\[Kappa]", "m"]}], "+", 
           RowBox[{"4", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
        RowBox[{"128", " ", "\[ImaginaryI]", " ", "G", " ", 
         SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}]], 
      FractionBox[
       RowBox[{"32", " ", 
        RowBox[{"(", 
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}], ")"}], " ", 
        SubscriptBox["\[Omega]", "m"], " ", 
        SuperscriptBox[
         RowBox[{"Conjugate", "[", "G", "]"}], "2"]}], 
       RowBox[{
        RowBox[{"\[Kappa]", " ", 
         SubscriptBox["\[Kappa]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[ImaginaryI]", " ", 
            SubscriptBox["\[Kappa]", "m"]}], "+", 
           RowBox[{"4", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
        RowBox[{"128", " ", "\[ImaginaryI]", " ", "G", " ", 
         SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}]], 
      FractionBox[
       RowBox[{"32", " ", 
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        SubscriptBox["\[Omega]", "m"], " ", 
        SuperscriptBox[
         RowBox[{"Conjugate", "[", "G", "]"}], "2"]}], 
       RowBox[{
        RowBox[{"\[Kappa]", " ", 
         SubscriptBox["\[Kappa]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[ImaginaryI]", " ", 
            SubscriptBox["\[Kappa]", "m"]}], "+", 
           RowBox[{"4", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
        RowBox[{"128", " ", "\[ImaginaryI]", " ", "G", " ", 
         SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}]], 
      FractionBox[
       RowBox[{"32", " ", 
        RowBox[{"(", 
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}], ")"}], " ", 
        SubscriptBox["\[Omega]", "m"], " ", 
        SuperscriptBox[
         RowBox[{"Conjugate", "[", "G", "]"}], "2"]}], 
       RowBox[{
        RowBox[{"\[Kappa]", " ", 
         SubscriptBox["\[Kappa]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[ImaginaryI]", " ", 
            SubscriptBox["\[Kappa]", "m"]}], "+", 
           RowBox[{"4", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
        RowBox[{"128", " ", "\[ImaginaryI]", " ", "G", " ", 
         SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}]], 
      FractionBox[
       RowBox[{"32", " ", "G", " ", "\[Kappa]", " ", 
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        SubscriptBox["\[Omega]", "m"], " ", 
        RowBox[{"Conjugate", "[", "G", "]"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Kappa]", "-", 
          RowBox[{"4", " ", "\[ImaginaryI]", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Kappa]", " ", 
           SubscriptBox["\[Kappa]", "m"], " ", 
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[ImaginaryI]", " ", 
              SubscriptBox["\[Kappa]", "m"]}], "+", 
             RowBox[{"4", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
          RowBox[{"128", " ", "\[ImaginaryI]", " ", "G", " ", 
           SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]], 
      FractionBox[
       RowBox[{"32", " ", "\[ImaginaryI]", " ", "G", " ", "\[Kappa]", " ", 
        RowBox[{"(", 
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}], ")"}], " ", 
        SubscriptBox["\[Omega]", "m"], " ", 
        RowBox[{"Conjugate", "[", "G", "]"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Kappa]", "-", 
          RowBox[{"4", " ", "\[ImaginaryI]", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[Kappa]"}], " ", 
           SubscriptBox["\[Kappa]", "m"], " ", 
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[Kappa]", "m"], "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
          RowBox[{"128", " ", "G", " ", 
           SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]], 
      FractionBox[
       RowBox[{"2", " ", 
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Kappa]", " ", 
           SubscriptBox["\[Kappa]", "m"], " ", 
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[ImaginaryI]", " ", 
              SubscriptBox["\[Kappa]", "m"]}], "+", 
             RowBox[{"4", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
          RowBox[{"16", " ", "G", " ", 
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "-", 
             RowBox[{"8", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           SubscriptBox["\[Omega]", "m"], " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Kappa]", "-", 
          RowBox[{"4", " ", "\[ImaginaryI]", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Kappa]", " ", 
           SubscriptBox["\[Kappa]", "m"], " ", 
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[ImaginaryI]", " ", 
              SubscriptBox["\[Kappa]", "m"]}], "+", 
             RowBox[{"4", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
          RowBox[{"128", " ", "\[ImaginaryI]", " ", "G", " ", 
           SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]], 
      FractionBox[
       RowBox[{
        RowBox[{"\[Kappa]", " ", 
         SubscriptBox["\[Kappa]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Kappa]", "m"], "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"2", " ", 
            SubscriptBox["\[Kappa]", "ex"]}], "+", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[ImaginaryI]", " ", "\[Kappa]"}], "+", 
           RowBox[{"4", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
        RowBox[{"32", " ", "G", " ", 
         SubscriptBox["\[Omega]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[Kappa]", "2"], "-", 
           RowBox[{"\[Kappa]", " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["\[Kappa]", "ex"], "+", 
              RowBox[{"4", " ", "\[ImaginaryI]", " ", 
               SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
           RowBox[{"8", " ", 
            SubscriptBox["\[Omega]", "m"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[ImaginaryI]", " ", 
               SubscriptBox["\[Kappa]", "ex"]}], "+", 
              RowBox[{"2", " ", 
               SubscriptBox["\[Omega]", "m"]}]}], ")"}]}]}], ")"}], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Kappa]", "-", 
          RowBox[{"4", " ", "\[ImaginaryI]", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Kappa]", " ", 
           SubscriptBox["\[Kappa]", "m"], " ", 
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[ImaginaryI]", " ", 
              SubscriptBox["\[Kappa]", "m"]}], "+", 
             RowBox[{"4", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
          RowBox[{"128", " ", "\[ImaginaryI]", " ", "G", " ", 
           SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]], 
      FractionBox[
       RowBox[{"4", " ", "\[Kappa]", " ", 
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "m"]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           SubscriptBox["\[Kappa]", "m"]}], "+", 
          RowBox[{"4", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        RowBox[{"Conjugate", "[", "G", "]"}]}], 
       RowBox[{
        RowBox[{"\[Kappa]", " ", 
         SubscriptBox["\[Kappa]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Kappa]", "m"], "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
        RowBox[{"128", " ", "G", " ", 
         SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}]], 
      FractionBox[
       RowBox[{"4", " ", "\[ImaginaryI]", " ", "\[Kappa]", " ", 
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SubsuperscriptBox["\[Kappa]", "m", 
         RowBox[{"3", "/", "2"}]], " ", 
        RowBox[{"Conjugate", "[", "G", "]"}]}], 
       RowBox[{
        RowBox[{"\[Kappa]", " ", 
         SubscriptBox["\[Kappa]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Kappa]", "m"], "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
        RowBox[{"128", " ", "G", " ", 
         SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}]]},
     {
      FractionBox[
       RowBox[{"4", " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "m"]], " ", 
        RowBox[{"(", 
         RowBox[{"\[Kappa]", "-", 
          RowBox[{"4", " ", "\[ImaginaryI]", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["\[Kappa]", "m"], "-", 
          RowBox[{"4", " ", "\[ImaginaryI]", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        RowBox[{"Conjugate", "[", "G", "]"}]}], 
       RowBox[{
        RowBox[{"\[Kappa]", " ", 
         SubscriptBox["\[Kappa]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[ImaginaryI]", " ", 
            SubscriptBox["\[Kappa]", "m"]}], "+", 
           RowBox[{"4", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
        RowBox[{"128", " ", "\[ImaginaryI]", " ", "G", " ", 
         SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}]], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"4", " ", "\[ImaginaryI]", " ", 
         SqrtBox[
          RowBox[{"\[Kappa]", "-", 
           SubscriptBox["\[Kappa]", "ex"]}]], " ", 
         SqrtBox[
          SubscriptBox["\[Kappa]", "m"]], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Kappa]", "m"], "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}], 
        RowBox[{
         RowBox[{"\[Kappa]", " ", 
          SubscriptBox["\[Kappa]", "m"], " ", 
          RowBox[{"(", 
           RowBox[{"\[Kappa]", "-", 
            RowBox[{"4", " ", "\[ImaginaryI]", " ", 
             SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["\[Kappa]", "m"], "-", 
            RowBox[{"4", " ", "\[ImaginaryI]", " ", 
             SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
         RowBox[{"128", " ", "G", " ", 
          SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
          RowBox[{"Conjugate", "[", "G", "]"}]}]}]]}], 
      FractionBox[
       RowBox[{"4", " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "m"]], " ", 
        RowBox[{"(", 
         RowBox[{"\[Kappa]", "-", 
          RowBox[{"4", " ", "\[ImaginaryI]", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["\[Kappa]", "m"], "-", 
          RowBox[{"4", " ", "\[ImaginaryI]", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        RowBox[{"Conjugate", "[", "G", "]"}]}], 
       RowBox[{
        RowBox[{"\[Kappa]", " ", 
         SubscriptBox["\[Kappa]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[ImaginaryI]", " ", 
            SubscriptBox["\[Kappa]", "m"]}], "+", 
           RowBox[{"4", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
        RowBox[{"128", " ", "\[ImaginaryI]", " ", "G", " ", 
         SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}]], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"4", " ", "\[ImaginaryI]", " ", 
         SqrtBox[
          RowBox[{"\[Kappa]", "-", 
           SubscriptBox["\[Kappa]", "ex"]}]], " ", 
         SqrtBox[
          SubscriptBox["\[Kappa]", "m"]], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Kappa]", "m"], "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}], 
        RowBox[{
         RowBox[{"\[Kappa]", " ", 
          SubscriptBox["\[Kappa]", "m"], " ", 
          RowBox[{"(", 
           RowBox[{"\[Kappa]", "-", 
            RowBox[{"4", " ", "\[ImaginaryI]", " ", 
             SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["\[Kappa]", "m"], "-", 
            RowBox[{"4", " ", "\[ImaginaryI]", " ", 
             SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
         RowBox[{"128", " ", "G", " ", 
          SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
          RowBox[{"Conjugate", "[", "G", "]"}]}]}]]}], 
      FractionBox[
       RowBox[{"4", " ", "G", " ", "\[Kappa]", " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "m"]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           SubscriptBox["\[Kappa]", "m"]}], "+", 
          RowBox[{"4", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], 
       RowBox[{
        RowBox[{
         RowBox[{"-", "\[Kappa]"}], " ", 
         SubscriptBox["\[Kappa]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Kappa]", "m"], "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
        RowBox[{"128", " ", "G", " ", 
         SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}]], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"4", " ", "\[ImaginaryI]", " ", "G", " ", "\[Kappa]", " ", 
         SqrtBox[
          RowBox[{"\[Kappa]", "-", 
           SubscriptBox["\[Kappa]", "ex"]}]], " ", 
         SqrtBox[
          SubscriptBox["\[Kappa]", "m"]], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Kappa]", "m"], "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], 
        RowBox[{
         RowBox[{"\[Kappa]", " ", 
          SubscriptBox["\[Kappa]", "m"], " ", 
          RowBox[{"(", 
           RowBox[{"\[Kappa]", "-", 
            RowBox[{"4", " ", "\[ImaginaryI]", " ", 
             SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["\[Kappa]", "m"], "-", 
            RowBox[{"4", " ", "\[ImaginaryI]", " ", 
             SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
         RowBox[{"128", " ", "G", " ", 
          SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
          RowBox[{"Conjugate", "[", "G", "]"}]}]}]]}], 
      FractionBox[
       RowBox[{"4", " ", "G", " ", "\[Kappa]", " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "m"]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           SubscriptBox["\[Kappa]", "m"]}], "+", 
          RowBox[{"4", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], 
       RowBox[{
        RowBox[{
         RowBox[{"-", "\[Kappa]"}], " ", 
         SubscriptBox["\[Kappa]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Kappa]", "m"], "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
        RowBox[{"128", " ", "G", " ", 
         SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}]], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"4", " ", "\[ImaginaryI]", " ", "G", " ", "\[Kappa]", " ", 
         SqrtBox[
          RowBox[{"\[Kappa]", "-", 
           SubscriptBox["\[Kappa]", "ex"]}]], " ", 
         SqrtBox[
          SubscriptBox["\[Kappa]", "m"]], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Kappa]", "m"], "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], 
        RowBox[{
         RowBox[{"\[Kappa]", " ", 
          SubscriptBox["\[Kappa]", "m"], " ", 
          RowBox[{"(", 
           RowBox[{"\[Kappa]", "-", 
            RowBox[{"4", " ", "\[ImaginaryI]", " ", 
             SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["\[Kappa]", "m"], "-", 
            RowBox[{"4", " ", "\[ImaginaryI]", " ", 
             SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
         RowBox[{"128", " ", "G", " ", 
          SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
          RowBox[{"Conjugate", "[", "G", "]"}]}]}]]}], 
      FractionBox[
       RowBox[{
        RowBox[{"\[Kappa]", " ", 
         SubscriptBox["\[Kappa]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Kappa]", "m"], "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
        RowBox[{"64", " ", "G", " ", 
         SubscriptBox["\[Omega]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[ImaginaryI]", " ", 
            SubscriptBox["\[Kappa]", "m"]}], "+", 
           RowBox[{"2", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}], 
       RowBox[{
        RowBox[{"\[Kappa]", " ", 
         SubscriptBox["\[Kappa]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Kappa]", "m"], "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
        RowBox[{"128", " ", "G", " ", 
         SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}]], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"64", " ", "\[ImaginaryI]", " ", "G", " ", 
         SubscriptBox["\[Kappa]", "m"], " ", 
         SubscriptBox["\[Omega]", "m"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}], 
        RowBox[{
         RowBox[{
          RowBox[{"-", "\[Kappa]"}], " ", 
          SubscriptBox["\[Kappa]", "m"], " ", 
          RowBox[{"(", 
           RowBox[{"\[Kappa]", "-", 
            RowBox[{"4", " ", "\[ImaginaryI]", " ", 
             SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["\[Kappa]", "m"], "-", 
            RowBox[{"4", " ", "\[ImaginaryI]", " ", 
             SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
         RowBox[{"128", " ", "G", " ", 
          SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
          RowBox[{"Conjugate", "[", "G", "]"}]}]}]]}]},
     {
      FractionBox[
       RowBox[{"4", " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        SubsuperscriptBox["\[Kappa]", "m", 
         RowBox[{"3", "/", "2"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", "\[Kappa]"}], "+", 
          RowBox[{"4", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        RowBox[{"Conjugate", "[", "G", "]"}]}], 
       RowBox[{
        RowBox[{"\[Kappa]", " ", 
         SubscriptBox["\[Kappa]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Kappa]", "m"], "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
        RowBox[{"128", " ", "G", " ", 
         SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}]], 
      FractionBox[
       RowBox[{"4", " ", 
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SubsuperscriptBox["\[Kappa]", "m", 
         RowBox[{"3", "/", "2"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", "\[Kappa]"}], "+", 
          RowBox[{"4", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        RowBox[{"Conjugate", "[", "G", "]"}]}], 
       RowBox[{
        RowBox[{"\[Kappa]", " ", 
         SubscriptBox["\[Kappa]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Kappa]", "m"], "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
        RowBox[{"128", " ", "G", " ", 
         SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}]], 
      FractionBox[
       RowBox[{"4", " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        SubsuperscriptBox["\[Kappa]", "m", 
         RowBox[{"3", "/", "2"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", "\[Kappa]"}], "+", 
          RowBox[{"4", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        RowBox[{"Conjugate", "[", "G", "]"}]}], 
       RowBox[{
        RowBox[{"\[Kappa]", " ", 
         SubscriptBox["\[Kappa]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Kappa]", "m"], "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
        RowBox[{"128", " ", "G", " ", 
         SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}]], 
      FractionBox[
       RowBox[{"4", " ", 
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SubsuperscriptBox["\[Kappa]", "m", 
         RowBox[{"3", "/", "2"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", "\[Kappa]"}], "+", 
          RowBox[{"4", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        RowBox[{"Conjugate", "[", "G", "]"}]}], 
       RowBox[{
        RowBox[{"\[Kappa]", " ", 
         SubscriptBox["\[Kappa]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Kappa]", "m"], "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
        RowBox[{"128", " ", "G", " ", 
         SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}]], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"4", " ", "\[ImaginaryI]", " ", "G", " ", "\[Kappa]", " ", 
         SqrtBox[
          SubscriptBox["\[Kappa]", "ex"]], " ", 
         SubsuperscriptBox["\[Kappa]", "m", 
          RowBox[{"3", "/", "2"}]]}], 
        RowBox[{
         RowBox[{
          RowBox[{"-", "\[Kappa]"}], " ", 
          SubscriptBox["\[Kappa]", "m"], " ", 
          RowBox[{"(", 
           RowBox[{"\[Kappa]", "-", 
            RowBox[{"4", " ", "\[ImaginaryI]", " ", 
             SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["\[Kappa]", "m"], "-", 
            RowBox[{"4", " ", "\[ImaginaryI]", " ", 
             SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
         RowBox[{"128", " ", "G", " ", 
          SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
          RowBox[{"Conjugate", "[", "G", "]"}]}]}]]}], 
      FractionBox[
       RowBox[{"4", " ", "\[ImaginaryI]", " ", "G", " ", "\[Kappa]", " ", 
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SubsuperscriptBox["\[Kappa]", "m", 
         RowBox[{"3", "/", "2"}]]}], 
       RowBox[{
        RowBox[{"\[Kappa]", " ", 
         SubscriptBox["\[Kappa]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Kappa]", "m"], "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
        RowBox[{"128", " ", "G", " ", 
         SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}]], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"4", " ", "\[ImaginaryI]", " ", "G", " ", "\[Kappa]", " ", 
         SqrtBox[
          SubscriptBox["\[Kappa]", "ex"]], " ", 
         SubsuperscriptBox["\[Kappa]", "m", 
          RowBox[{"3", "/", "2"}]]}], 
        RowBox[{
         RowBox[{
          RowBox[{"-", "\[Kappa]"}], " ", 
          SubscriptBox["\[Kappa]", "m"], " ", 
          RowBox[{"(", 
           RowBox[{"\[Kappa]", "-", 
            RowBox[{"4", " ", "\[ImaginaryI]", " ", 
             SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["\[Kappa]", "m"], "-", 
            RowBox[{"4", " ", "\[ImaginaryI]", " ", 
             SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
         RowBox[{"128", " ", "G", " ", 
          SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
          RowBox[{"Conjugate", "[", "G", "]"}]}]}]]}], 
      FractionBox[
       RowBox[{"4", " ", "\[ImaginaryI]", " ", "G", " ", "\[Kappa]", " ", 
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SubsuperscriptBox["\[Kappa]", "m", 
         RowBox[{"3", "/", "2"}]]}], 
       RowBox[{
        RowBox[{"\[Kappa]", " ", 
         SubscriptBox["\[Kappa]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Kappa]", "m"], "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
        RowBox[{"128", " ", "G", " ", 
         SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}]], 
      FractionBox[
       RowBox[{"64", " ", "\[ImaginaryI]", " ", "G", " ", 
        SubscriptBox["\[Kappa]", "m"], " ", 
        SubscriptBox["\[Omega]", "m"], " ", 
        RowBox[{"Conjugate", "[", "G", "]"}]}], 
       RowBox[{
        RowBox[{
         RowBox[{"-", "\[Kappa]"}], " ", 
         SubscriptBox["\[Kappa]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Kappa]", "m"], "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
        RowBox[{"128", " ", "G", " ", 
         SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}]], 
      FractionBox[
       RowBox[{
        RowBox[{"\[Kappa]", " ", 
         SubscriptBox["\[Kappa]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Kappa]", "m"], "+", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
        RowBox[{"64", " ", "G", " ", 
         SubscriptBox["\[Omega]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", 
            SubscriptBox["\[Kappa]", "m"]}], "+", 
           RowBox[{"2", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}], 
       RowBox[{
        RowBox[{"\[Kappa]", " ", 
         SubscriptBox["\[Kappa]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Kappa]", "m"], "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
        RowBox[{"128", " ", "G", " ", 
         SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}]]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.86070113663052*^9, 3.8607019740643377`*^9, 3.869606004068549*^9, {
   3.8696152593613157`*^9, 3.8696152749623156`*^9}},
 Background->RGBColor[0.88, 1, 0.88],
 CellLabel->
  "Out[40]//MatrixForm=",ExpressionUUID->"027e11c3-9136-49ce-bb74-\
5bb272faf1fa"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TOsc2", "/.", "SymmetricValues"}], "//", "Simplify"}], "//", 
  "MatrixForm"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.8607019740643377`*^9},
 Background->RGBColor[0.88, 1, 0.88],
 CellLabel->"In[39]:=",ExpressionUUID->"bf12d13d-ee25-463b-8ee5-2d8952747abb"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox[
       RowBox[{
        RowBox[{
         RowBox[{"-", "\[Kappa]"}], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"2", " ", 
            SubscriptBox["\[Kappa]", "ex"]}]}], ")"}], " ", 
         SubscriptBox["\[Kappa]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "+", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Kappa]", "m"], "+", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
        RowBox[{"32", " ", "G", " ", 
         SubscriptBox["\[Omega]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[ImaginaryI]", " ", "\[Kappa]", " ", 
            SubscriptBox["\[Kappa]", "ex"]}], "-", 
           RowBox[{"4", " ", "\[Kappa]", " ", 
            SubscriptBox["\[Omega]", "m"]}], "+", 
           RowBox[{"4", " ", 
            SubscriptBox["\[Kappa]", "ex"], " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}], 
       RowBox[{"\[Kappa]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Kappa]", " ", 
           SubscriptBox["\[Kappa]", "m"], " ", 
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "+", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[Kappa]", "m"], "+", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
          RowBox[{"128", " ", "G", " ", 
           SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]], 
      FractionBox[
       RowBox[{"2", " ", 
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Kappa]", " ", 
           SubscriptBox["\[Kappa]", "m"], " ", 
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "+", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[Kappa]", "m"], "+", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
          RowBox[{"16", " ", "G", " ", 
           SubscriptBox["\[Omega]", "m"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[ImaginaryI]", " ", "\[Kappa]"}], "+", 
             RowBox[{"4", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}], 
       RowBox[{"\[Kappa]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Kappa]", " ", 
           SubscriptBox["\[Kappa]", "m"], " ", 
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "+", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[Kappa]", "m"], "+", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
          RowBox[{"128", " ", "G", " ", 
           SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]], 
      FractionBox[
       RowBox[{"32", " ", "\[ImaginaryI]", " ", "G", " ", 
        SubscriptBox["\[Kappa]", "ex"], " ", 
        RowBox[{"(", 
         RowBox[{"\[Kappa]", "+", 
          RowBox[{"4", " ", "\[ImaginaryI]", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        SubscriptBox["\[Omega]", "m"], " ", 
        RowBox[{"Conjugate", "[", "G", "]"}]}], 
       RowBox[{"\[Kappa]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Kappa]", " ", 
           SubscriptBox["\[Kappa]", "m"], " ", 
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "+", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[Kappa]", "m"], "+", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
          RowBox[{"128", " ", "G", " ", 
           SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]], 
      FractionBox[
       RowBox[{"32", " ", "\[ImaginaryI]", " ", "G", " ", 
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        RowBox[{"(", 
         RowBox[{"\[Kappa]", "+", 
          RowBox[{"4", " ", "\[ImaginaryI]", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        SubscriptBox["\[Omega]", "m"], " ", 
        RowBox[{"Conjugate", "[", "G", "]"}]}], 
       RowBox[{"\[Kappa]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Kappa]", " ", 
           SubscriptBox["\[Kappa]", "m"], " ", 
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "+", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[Kappa]", "m"], "+", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
          RowBox[{"128", " ", "G", " ", 
           SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]], "0", "0", "0", 
      "0", "0", "0"},
     {
      FractionBox[
       RowBox[{"2", " ", 
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Kappa]", " ", 
           SubscriptBox["\[Kappa]", "m"], " ", 
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "+", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[Kappa]", "m"], "+", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
          RowBox[{"16", " ", "G", " ", 
           SubscriptBox["\[Omega]", "m"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[ImaginaryI]", " ", "\[Kappa]"}], "+", 
             RowBox[{"4", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}], 
       RowBox[{"\[Kappa]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Kappa]", " ", 
           SubscriptBox["\[Kappa]", "m"], " ", 
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "+", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[Kappa]", "m"], "+", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
          RowBox[{"128", " ", "G", " ", 
           SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]], 
      FractionBox[
       RowBox[{
        RowBox[{"\[Kappa]", " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"2", " ", 
            SubscriptBox["\[Kappa]", "ex"]}]}], ")"}], " ", 
         SubscriptBox["\[Kappa]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "+", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Kappa]", "m"], "+", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
        RowBox[{"32", " ", "\[ImaginaryI]", " ", "G", " ", 
         SubscriptBox["\[Omega]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[Kappa]", "2"], "-", 
           RowBox[{"\[Kappa]", " ", 
            SubscriptBox["\[Kappa]", "ex"]}], "+", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Kappa]", "ex"], " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}], 
       RowBox[{"\[Kappa]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Kappa]", " ", 
           SubscriptBox["\[Kappa]", "m"], " ", 
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "+", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[Kappa]", "m"], "+", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
          RowBox[{"128", " ", "G", " ", 
           SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]], 
      FractionBox[
       RowBox[{"32", " ", "\[ImaginaryI]", " ", "G", " ", 
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        RowBox[{"(", 
         RowBox[{"\[Kappa]", "+", 
          RowBox[{"4", " ", "\[ImaginaryI]", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        SubscriptBox["\[Omega]", "m"], " ", 
        RowBox[{"Conjugate", "[", "G", "]"}]}], 
       RowBox[{"\[Kappa]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Kappa]", " ", 
           SubscriptBox["\[Kappa]", "m"], " ", 
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "+", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[Kappa]", "m"], "+", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
          RowBox[{"128", " ", "G", " ", 
           SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]], 
      FractionBox[
       RowBox[{"32", " ", "\[ImaginaryI]", " ", "G", " ", 
        RowBox[{"(", 
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"\[Kappa]", "+", 
          RowBox[{"4", " ", "\[ImaginaryI]", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        SubscriptBox["\[Omega]", "m"], " ", 
        RowBox[{"Conjugate", "[", "G", "]"}]}], 
       RowBox[{"\[Kappa]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Kappa]", " ", 
           SubscriptBox["\[Kappa]", "m"], " ", 
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "+", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[Kappa]", "m"], "+", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
          RowBox[{"128", " ", "G", " ", 
           SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]], "0", "0", "0", 
      "0", "0", "0"},
     {
      FractionBox[
       RowBox[{"32", " ", "\[ImaginaryI]", " ", "G", " ", 
        SubscriptBox["\[Kappa]", "ex"], " ", 
        RowBox[{"(", 
         RowBox[{"\[Kappa]", "+", 
          RowBox[{"4", " ", "\[ImaginaryI]", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        SubscriptBox["\[Omega]", "m"], " ", 
        RowBox[{"Conjugate", "[", "G", "]"}]}], 
       RowBox[{"\[Kappa]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Kappa]", " ", 
           SubscriptBox["\[Kappa]", "m"], " ", 
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "+", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[Kappa]", "m"], "+", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
          RowBox[{"128", " ", "G", " ", 
           SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]], 
      FractionBox[
       RowBox[{"32", " ", "\[ImaginaryI]", " ", "G", " ", 
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        RowBox[{"(", 
         RowBox[{"\[Kappa]", "+", 
          RowBox[{"4", " ", "\[ImaginaryI]", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        SubscriptBox["\[Omega]", "m"], " ", 
        RowBox[{"Conjugate", "[", "G", "]"}]}], 
       RowBox[{"\[Kappa]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Kappa]", " ", 
           SubscriptBox["\[Kappa]", "m"], " ", 
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "+", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[Kappa]", "m"], "+", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
          RowBox[{"128", " ", "G", " ", 
           SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]], 
      FractionBox[
       RowBox[{
        RowBox[{
         RowBox[{"-", "\[Kappa]"}], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"2", " ", 
            SubscriptBox["\[Kappa]", "ex"]}]}], ")"}], " ", 
         SubscriptBox["\[Kappa]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "+", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Kappa]", "m"], "+", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
        RowBox[{"32", " ", "G", " ", 
         SubscriptBox["\[Omega]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[ImaginaryI]", " ", "\[Kappa]", " ", 
            SubscriptBox["\[Kappa]", "ex"]}], "-", 
           RowBox[{"4", " ", "\[Kappa]", " ", 
            SubscriptBox["\[Omega]", "m"]}], "+", 
           RowBox[{"4", " ", 
            SubscriptBox["\[Kappa]", "ex"], " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}], 
       RowBox[{"\[Kappa]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Kappa]", " ", 
           SubscriptBox["\[Kappa]", "m"], " ", 
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "+", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[Kappa]", "m"], "+", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
          RowBox[{"128", " ", "G", " ", 
           SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]], 
      FractionBox[
       RowBox[{"2", " ", 
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Kappa]", " ", 
           SubscriptBox["\[Kappa]", "m"], " ", 
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "+", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[Kappa]", "m"], "+", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
          RowBox[{"16", " ", "G", " ", 
           SubscriptBox["\[Omega]", "m"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[ImaginaryI]", " ", "\[Kappa]"}], "+", 
             RowBox[{"4", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}], 
       RowBox[{"\[Kappa]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Kappa]", " ", 
           SubscriptBox["\[Kappa]", "m"], " ", 
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "+", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[Kappa]", "m"], "+", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
          RowBox[{"128", " ", "G", " ", 
           SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]], "0", "0", "0", 
      "0", "0", "0"},
     {
      FractionBox[
       RowBox[{"32", " ", "\[ImaginaryI]", " ", "G", " ", 
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        RowBox[{"(", 
         RowBox[{"\[Kappa]", "+", 
          RowBox[{"4", " ", "\[ImaginaryI]", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        SubscriptBox["\[Omega]", "m"], " ", 
        RowBox[{"Conjugate", "[", "G", "]"}]}], 
       RowBox[{"\[Kappa]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Kappa]", " ", 
           SubscriptBox["\[Kappa]", "m"], " ", 
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "+", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[Kappa]", "m"], "+", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
          RowBox[{"128", " ", "G", " ", 
           SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]], 
      FractionBox[
       RowBox[{"32", " ", "\[ImaginaryI]", " ", "G", " ", 
        RowBox[{"(", 
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"\[Kappa]", "+", 
          RowBox[{"4", " ", "\[ImaginaryI]", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        SubscriptBox["\[Omega]", "m"], " ", 
        RowBox[{"Conjugate", "[", "G", "]"}]}], 
       RowBox[{"\[Kappa]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Kappa]", " ", 
           SubscriptBox["\[Kappa]", "m"], " ", 
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "+", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[Kappa]", "m"], "+", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
          RowBox[{"128", " ", "G", " ", 
           SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]], 
      FractionBox[
       RowBox[{"2", " ", 
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Kappa]", " ", 
           SubscriptBox["\[Kappa]", "m"], " ", 
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "+", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[Kappa]", "m"], "+", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
          RowBox[{"16", " ", "G", " ", 
           SubscriptBox["\[Omega]", "m"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[ImaginaryI]", " ", "\[Kappa]"}], "+", 
             RowBox[{"4", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}], 
       RowBox[{"\[Kappa]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Kappa]", " ", 
           SubscriptBox["\[Kappa]", "m"], " ", 
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "+", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[Kappa]", "m"], "+", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
          RowBox[{"128", " ", "G", " ", 
           SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]], 
      FractionBox[
       RowBox[{
        RowBox[{"\[Kappa]", " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"2", " ", 
            SubscriptBox["\[Kappa]", "ex"]}]}], ")"}], " ", 
         SubscriptBox["\[Kappa]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "+", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Kappa]", "m"], "+", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
        RowBox[{"32", " ", "\[ImaginaryI]", " ", "G", " ", 
         SubscriptBox["\[Omega]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[Kappa]", "2"], "-", 
           RowBox[{"\[Kappa]", " ", 
            SubscriptBox["\[Kappa]", "ex"]}], "+", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Kappa]", "ex"], " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}], 
       RowBox[{"\[Kappa]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Kappa]", " ", 
           SubscriptBox["\[Kappa]", "m"], " ", 
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "+", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[Kappa]", "m"], "+", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
          RowBox[{"128", " ", "G", " ", 
           SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]], "0", "0", "0", 
      "0", "0", "0"},
     {"0", "0", "0", "0", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"\[Kappa]", "-", 
              RowBox[{"2", " ", 
               RowBox[{"(", 
                RowBox[{
                 SubscriptBox["\[Kappa]", "ex"], "+", 
                 RowBox[{"2", " ", "\[ImaginaryI]", " ", 
                  SubscriptBox["\[Omega]", "m"]}]}], ")"}]}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[ImaginaryI]", " ", 
               SuperscriptBox["\[Kappa]", "2"]}], "+", 
              RowBox[{"12", " ", "\[Kappa]", " ", 
               SubscriptBox["\[Omega]", "m"]}], "-", 
              RowBox[{"32", " ", "\[ImaginaryI]", " ", 
               SubsuperscriptBox["\[Omega]", "m", "2"]}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               SubsuperscriptBox["\[Kappa]", "m", "2"]}], "+", 
              RowBox[{"12", " ", "\[ImaginaryI]", " ", 
               SubscriptBox["\[Kappa]", "m"], " ", 
               SubscriptBox["\[Omega]", "m"]}], "+", 
              RowBox[{"32", " ", 
               SubsuperscriptBox["\[Omega]", "m", "2"]}]}], ")"}]}], "+", 
           RowBox[{"32", " ", "G", " ", 
            SubscriptBox["\[Omega]", "m"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Kappa]", " ", 
               RowBox[{"(", 
                RowBox[{
                 SubscriptBox["\[Kappa]", "ex"], "-", 
                 RowBox[{"4", " ", "\[ImaginaryI]", " ", 
                  SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
              RowBox[{"16", " ", 
               SubsuperscriptBox["\[Omega]", "m", "2"]}]}], ")"}], " ", 
            RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["\[Kappa]", "2"], "-", 
              RowBox[{"12", " ", "\[ImaginaryI]", " ", "\[Kappa]", " ", 
               SubscriptBox["\[Omega]", "m"]}], "-", 
              RowBox[{"32", " ", 
               SubsuperscriptBox["\[Omega]", "m", "2"]}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              SubsuperscriptBox["\[Kappa]", "m", "2"], "-", 
              RowBox[{"12", " ", "\[ImaginaryI]", " ", 
               SubscriptBox["\[Kappa]", "m"], " ", 
               SubscriptBox["\[Omega]", "m"]}], "-", 
              RowBox[{"32", " ", 
               SubsuperscriptBox["\[Omega]", "m", "2"]}]}], ")"}]}], "+", 
           RowBox[{"128", " ", "G", " ", 
            SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
            RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]]}], 
      FractionBox[
       RowBox[{"2", " ", 
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[Kappa]", "2"], "-", 
             RowBox[{"12", " ", "\[ImaginaryI]", " ", "\[Kappa]", " ", 
              SubscriptBox["\[Omega]", "m"]}], "-", 
             RowBox[{"32", " ", 
              SubsuperscriptBox["\[Omega]", "m", "2"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              SubsuperscriptBox["\[Kappa]", "m", "2"]}], "+", 
             RowBox[{"12", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Kappa]", "m"], " ", 
              SubscriptBox["\[Omega]", "m"]}], "+", 
             RowBox[{"32", " ", 
              SubsuperscriptBox["\[Omega]", "m", "2"]}]}], ")"}]}], "+", 
          RowBox[{"16", " ", "\[ImaginaryI]", " ", "G", " ", "\[Kappa]", " ", 
           SubscriptBox["\[Omega]", "m"], " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Kappa]", "-", 
          RowBox[{"4", " ", "\[ImaginaryI]", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[Kappa]", "2"], "-", 
             RowBox[{"12", " ", "\[ImaginaryI]", " ", "\[Kappa]", " ", 
              SubscriptBox["\[Omega]", "m"]}], "-", 
             RowBox[{"32", " ", 
              SubsuperscriptBox["\[Omega]", "m", "2"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              SubsuperscriptBox["\[Kappa]", "m", "2"]}], "+", 
             RowBox[{"12", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Kappa]", "m"], " ", 
              SubscriptBox["\[Omega]", "m"]}], "+", 
             RowBox[{"32", " ", 
              SubsuperscriptBox["\[Omega]", "m", "2"]}]}], ")"}]}], "-", 
          RowBox[{"128", " ", "G", " ", 
           SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]], 
      FractionBox[
       RowBox[{"32", " ", "G", " ", 
        SubscriptBox["\[Kappa]", "ex"], " ", 
        SubscriptBox["\[Omega]", "m"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", "\[Kappa]"}], "+", 
          RowBox[{"8", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        RowBox[{"Conjugate", "[", "G", "]"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Kappa]", "-", 
          RowBox[{"4", " ", "\[ImaginaryI]", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[Kappa]", "2"], "-", 
             RowBox[{"12", " ", "\[ImaginaryI]", " ", "\[Kappa]", " ", 
              SubscriptBox["\[Omega]", "m"]}], "-", 
             RowBox[{"32", " ", 
              SubsuperscriptBox["\[Omega]", "m", "2"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              SubsuperscriptBox["\[Kappa]", "m", "2"]}], "+", 
             RowBox[{"12", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Kappa]", "m"], " ", 
              SubscriptBox["\[Omega]", "m"]}], "+", 
             RowBox[{"32", " ", 
              SubsuperscriptBox["\[Omega]", "m", "2"]}]}], ")"}]}], "-", 
          RowBox[{"128", " ", "G", " ", 
           SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]], 
      FractionBox[
       RowBox[{"32", " ", "G", " ", 
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        SubscriptBox["\[Omega]", "m"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", "\[Kappa]"}], "+", 
          RowBox[{"8", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        RowBox[{"Conjugate", "[", "G", "]"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Kappa]", "-", 
          RowBox[{"4", " ", "\[ImaginaryI]", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[Kappa]", "2"], "-", 
             RowBox[{"12", " ", "\[ImaginaryI]", " ", "\[Kappa]", " ", 
              SubscriptBox["\[Omega]", "m"]}], "-", 
             RowBox[{"32", " ", 
              SubsuperscriptBox["\[Omega]", "m", "2"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              SubsuperscriptBox["\[Kappa]", "m", "2"]}], "+", 
             RowBox[{"12", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Kappa]", "m"], " ", 
              SubscriptBox["\[Omega]", "m"]}], "+", 
             RowBox[{"32", " ", 
              SubsuperscriptBox["\[Omega]", "m", "2"]}]}], ")"}]}], "-", 
          RowBox[{"128", " ", "G", " ", 
           SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]], "0", "0"},
     {"0", "0", "0", "0", 
      FractionBox[
       RowBox[{"2", " ", 
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[Kappa]", "2"], "-", 
             RowBox[{"12", " ", "\[ImaginaryI]", " ", "\[Kappa]", " ", 
              SubscriptBox["\[Omega]", "m"]}], "-", 
             RowBox[{"32", " ", 
              SubsuperscriptBox["\[Omega]", "m", "2"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              SubsuperscriptBox["\[Kappa]", "m", "2"]}], "+", 
             RowBox[{"12", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Kappa]", "m"], " ", 
              SubscriptBox["\[Omega]", "m"]}], "+", 
             RowBox[{"32", " ", 
              SubsuperscriptBox["\[Omega]", "m", "2"]}]}], ")"}]}], "+", 
          RowBox[{"16", " ", "\[ImaginaryI]", " ", "G", " ", "\[Kappa]", " ", 
           SubscriptBox["\[Omega]", "m"], " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Kappa]", "-", 
          RowBox[{"4", " ", "\[ImaginaryI]", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[Kappa]", "2"], "-", 
             RowBox[{"12", " ", "\[ImaginaryI]", " ", "\[Kappa]", " ", 
              SubscriptBox["\[Omega]", "m"]}], "-", 
             RowBox[{"32", " ", 
              SubsuperscriptBox["\[Omega]", "m", "2"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              SubsuperscriptBox["\[Kappa]", "m", "2"]}], "+", 
             RowBox[{"12", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Kappa]", "m"], " ", 
              SubscriptBox["\[Omega]", "m"]}], "+", 
             RowBox[{"32", " ", 
              SubsuperscriptBox["\[Omega]", "m", "2"]}]}], ")"}]}], "-", 
          RowBox[{"128", " ", "G", " ", 
           SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"\[Kappa]", "-", 
              RowBox[{"2", " ", 
               SubscriptBox["\[Kappa]", "ex"]}], "+", 
              RowBox[{"4", " ", "\[ImaginaryI]", " ", 
               SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["\[Kappa]", "2"], "-", 
              RowBox[{"12", " ", "\[ImaginaryI]", " ", "\[Kappa]", " ", 
               SubscriptBox["\[Omega]", "m"]}], "-", 
              RowBox[{"32", " ", 
               SubsuperscriptBox["\[Omega]", "m", "2"]}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[ImaginaryI]", " ", 
               SubsuperscriptBox["\[Kappa]", "m", "2"]}], "+", 
              RowBox[{"12", " ", 
               SubscriptBox["\[Kappa]", "m"], " ", 
               SubscriptBox["\[Omega]", "m"]}], "-", 
              RowBox[{"32", " ", "\[ImaginaryI]", " ", 
               SubsuperscriptBox["\[Omega]", "m", "2"]}]}], ")"}]}], "+", 
           RowBox[{"32", " ", "G", " ", 
            SubscriptBox["\[Omega]", "m"], " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["\[Kappa]", "2"], "-", 
              RowBox[{"\[Kappa]", " ", 
               RowBox[{"(", 
                RowBox[{
                 SubscriptBox["\[Kappa]", "ex"], "+", 
                 RowBox[{"4", " ", "\[ImaginaryI]", " ", 
                  SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
              RowBox[{"16", " ", 
               SubsuperscriptBox["\[Omega]", "m", "2"]}]}], ")"}], " ", 
            RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["\[Kappa]", "2"], "-", 
              RowBox[{"12", " ", "\[ImaginaryI]", " ", "\[Kappa]", " ", 
               SubscriptBox["\[Omega]", "m"]}], "-", 
              RowBox[{"32", " ", 
               SubsuperscriptBox["\[Omega]", "m", "2"]}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              SubsuperscriptBox["\[Kappa]", "m", "2"], "-", 
              RowBox[{"12", " ", "\[ImaginaryI]", " ", 
               SubscriptBox["\[Kappa]", "m"], " ", 
               SubscriptBox["\[Omega]", "m"]}], "-", 
              RowBox[{"32", " ", 
               SubsuperscriptBox["\[Omega]", "m", "2"]}]}], ")"}]}], "+", 
           RowBox[{"128", " ", "G", " ", 
            SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
            RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]]}], 
      FractionBox[
       RowBox[{"32", " ", "G", " ", 
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        SubscriptBox["\[Omega]", "m"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", "\[Kappa]"}], "+", 
          RowBox[{"8", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        RowBox[{"Conjugate", "[", "G", "]"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Kappa]", "-", 
          RowBox[{"4", " ", "\[ImaginaryI]", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[Kappa]", "2"], "-", 
             RowBox[{"12", " ", "\[ImaginaryI]", " ", "\[Kappa]", " ", 
              SubscriptBox["\[Omega]", "m"]}], "-", 
             RowBox[{"32", " ", 
              SubsuperscriptBox["\[Omega]", "m", "2"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              SubsuperscriptBox["\[Kappa]", "m", "2"]}], "+", 
             RowBox[{"12", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Kappa]", "m"], " ", 
              SubscriptBox["\[Omega]", "m"]}], "+", 
             RowBox[{"32", " ", 
              SubsuperscriptBox["\[Omega]", "m", "2"]}]}], ")"}]}], "-", 
          RowBox[{"128", " ", "G", " ", 
           SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]], 
      FractionBox[
       RowBox[{"32", " ", "G", " ", 
        RowBox[{"(", 
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}], ")"}], " ", 
        SubscriptBox["\[Omega]", "m"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", "\[Kappa]"}], "+", 
          RowBox[{"8", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        RowBox[{"Conjugate", "[", "G", "]"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Kappa]", "-", 
          RowBox[{"4", " ", "\[ImaginaryI]", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[Kappa]", "2"], "-", 
             RowBox[{"12", " ", "\[ImaginaryI]", " ", "\[Kappa]", " ", 
              SubscriptBox["\[Omega]", "m"]}], "-", 
             RowBox[{"32", " ", 
              SubsuperscriptBox["\[Omega]", "m", "2"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              SubsuperscriptBox["\[Kappa]", "m", "2"]}], "+", 
             RowBox[{"12", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Kappa]", "m"], " ", 
              SubscriptBox["\[Omega]", "m"]}], "+", 
             RowBox[{"32", " ", 
              SubsuperscriptBox["\[Omega]", "m", "2"]}]}], ")"}]}], "-", 
          RowBox[{"128", " ", "G", " ", 
           SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]], "0", "0"},
     {"0", "0", "0", "0", 
      FractionBox[
       RowBox[{"32", " ", "G", " ", 
        SubscriptBox["\[Kappa]", "ex"], " ", 
        SubscriptBox["\[Omega]", "m"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", "\[Kappa]"}], "+", 
          RowBox[{"8", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        RowBox[{"Conjugate", "[", "G", "]"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Kappa]", "-", 
          RowBox[{"4", " ", "\[ImaginaryI]", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[Kappa]", "2"], "-", 
             RowBox[{"12", " ", "\[ImaginaryI]", " ", "\[Kappa]", " ", 
              SubscriptBox["\[Omega]", "m"]}], "-", 
             RowBox[{"32", " ", 
              SubsuperscriptBox["\[Omega]", "m", "2"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              SubsuperscriptBox["\[Kappa]", "m", "2"]}], "+", 
             RowBox[{"12", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Kappa]", "m"], " ", 
              SubscriptBox["\[Omega]", "m"]}], "+", 
             RowBox[{"32", " ", 
              SubsuperscriptBox["\[Omega]", "m", "2"]}]}], ")"}]}], "-", 
          RowBox[{"128", " ", "G", " ", 
           SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]], 
      FractionBox[
       RowBox[{"32", " ", "G", " ", 
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        SubscriptBox["\[Omega]", "m"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", "\[Kappa]"}], "+", 
          RowBox[{"8", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        RowBox[{"Conjugate", "[", "G", "]"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Kappa]", "-", 
          RowBox[{"4", " ", "\[ImaginaryI]", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[Kappa]", "2"], "-", 
             RowBox[{"12", " ", "\[ImaginaryI]", " ", "\[Kappa]", " ", 
              SubscriptBox["\[Omega]", "m"]}], "-", 
             RowBox[{"32", " ", 
              SubsuperscriptBox["\[Omega]", "m", "2"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              SubsuperscriptBox["\[Kappa]", "m", "2"]}], "+", 
             RowBox[{"12", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Kappa]", "m"], " ", 
              SubscriptBox["\[Omega]", "m"]}], "+", 
             RowBox[{"32", " ", 
              SubsuperscriptBox["\[Omega]", "m", "2"]}]}], ")"}]}], "-", 
          RowBox[{"128", " ", "G", " ", 
           SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]], 
      FractionBox[
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["\[Kappa]", "ex"], "+", 
              RowBox[{"2", " ", "\[ImaginaryI]", " ", 
               SubscriptBox["\[Omega]", "m"]}]}], ")"}]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[ImaginaryI]", " ", 
            SuperscriptBox["\[Kappa]", "2"]}], "+", 
           RowBox[{"12", " ", "\[Kappa]", " ", 
            SubscriptBox["\[Omega]", "m"]}], "-", 
           RowBox[{"32", " ", "\[ImaginaryI]", " ", 
            SubsuperscriptBox["\[Omega]", "m", "2"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            SubsuperscriptBox["\[Kappa]", "m", "2"]}], "+", 
           RowBox[{"12", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Kappa]", "m"], " ", 
            SubscriptBox["\[Omega]", "m"]}], "+", 
           RowBox[{"32", " ", 
            SubsuperscriptBox["\[Omega]", "m", "2"]}]}], ")"}]}], "+", 
        RowBox[{"32", " ", "G", " ", 
         SubscriptBox["\[Omega]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Kappa]", " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["\[Kappa]", "ex"], "-", 
              RowBox[{"4", " ", "\[ImaginaryI]", " ", 
               SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
           RowBox[{"16", " ", 
            SubsuperscriptBox["\[Omega]", "m", "2"]}]}], ")"}], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", "\[Kappa]"}], "+", 
          RowBox[{"4", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[Kappa]", "2"], "-", 
             RowBox[{"12", " ", "\[ImaginaryI]", " ", "\[Kappa]", " ", 
              SubscriptBox["\[Omega]", "m"]}], "-", 
             RowBox[{"32", " ", 
              SubsuperscriptBox["\[Omega]", "m", "2"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             SubsuperscriptBox["\[Kappa]", "m", "2"], "-", 
             RowBox[{"12", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Kappa]", "m"], " ", 
              SubscriptBox["\[Omega]", "m"]}], "-", 
             RowBox[{"32", " ", 
              SubsuperscriptBox["\[Omega]", "m", "2"]}]}], ")"}]}], "+", 
          RowBox[{"128", " ", "G", " ", 
           SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]], 
      FractionBox[
       RowBox[{"2", " ", 
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[Kappa]", "2"], "-", 
             RowBox[{"12", " ", "\[ImaginaryI]", " ", "\[Kappa]", " ", 
              SubscriptBox["\[Omega]", "m"]}], "-", 
             RowBox[{"32", " ", 
              SubsuperscriptBox["\[Omega]", "m", "2"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              SubsuperscriptBox["\[Kappa]", "m", "2"]}], "+", 
             RowBox[{"12", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Kappa]", "m"], " ", 
              SubscriptBox["\[Omega]", "m"]}], "+", 
             RowBox[{"32", " ", 
              SubsuperscriptBox["\[Omega]", "m", "2"]}]}], ")"}]}], "+", 
          RowBox[{"16", " ", "\[ImaginaryI]", " ", "G", " ", "\[Kappa]", " ", 
           SubscriptBox["\[Omega]", "m"], " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Kappa]", "-", 
          RowBox[{"4", " ", "\[ImaginaryI]", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[Kappa]", "2"], "-", 
             RowBox[{"12", " ", "\[ImaginaryI]", " ", "\[Kappa]", " ", 
              SubscriptBox["\[Omega]", "m"]}], "-", 
             RowBox[{"32", " ", 
              SubsuperscriptBox["\[Omega]", "m", "2"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              SubsuperscriptBox["\[Kappa]", "m", "2"]}], "+", 
             RowBox[{"12", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Kappa]", "m"], " ", 
              SubscriptBox["\[Omega]", "m"]}], "+", 
             RowBox[{"32", " ", 
              SubsuperscriptBox["\[Omega]", "m", "2"]}]}], ")"}]}], "-", 
          RowBox[{"128", " ", "G", " ", 
           SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]], "0", "0"},
     {"0", "0", "0", "0", 
      FractionBox[
       RowBox[{"32", " ", "G", " ", 
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        SubscriptBox["\[Omega]", "m"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", "\[Kappa]"}], "+", 
          RowBox[{"8", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        RowBox[{"Conjugate", "[", "G", "]"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Kappa]", "-", 
          RowBox[{"4", " ", "\[ImaginaryI]", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[Kappa]", "2"], "-", 
             RowBox[{"12", " ", "\[ImaginaryI]", " ", "\[Kappa]", " ", 
              SubscriptBox["\[Omega]", "m"]}], "-", 
             RowBox[{"32", " ", 
              SubsuperscriptBox["\[Omega]", "m", "2"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              SubsuperscriptBox["\[Kappa]", "m", "2"]}], "+", 
             RowBox[{"12", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Kappa]", "m"], " ", 
              SubscriptBox["\[Omega]", "m"]}], "+", 
             RowBox[{"32", " ", 
              SubsuperscriptBox["\[Omega]", "m", "2"]}]}], ")"}]}], "-", 
          RowBox[{"128", " ", "G", " ", 
           SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]], 
      FractionBox[
       RowBox[{"32", " ", "G", " ", 
        RowBox[{"(", 
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}], ")"}], " ", 
        SubscriptBox["\[Omega]", "m"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", "\[Kappa]"}], "+", 
          RowBox[{"8", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        RowBox[{"Conjugate", "[", "G", "]"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Kappa]", "-", 
          RowBox[{"4", " ", "\[ImaginaryI]", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[Kappa]", "2"], "-", 
             RowBox[{"12", " ", "\[ImaginaryI]", " ", "\[Kappa]", " ", 
              SubscriptBox["\[Omega]", "m"]}], "-", 
             RowBox[{"32", " ", 
              SubsuperscriptBox["\[Omega]", "m", "2"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              SubsuperscriptBox["\[Kappa]", "m", "2"]}], "+", 
             RowBox[{"12", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Kappa]", "m"], " ", 
              SubscriptBox["\[Omega]", "m"]}], "+", 
             RowBox[{"32", " ", 
              SubsuperscriptBox["\[Omega]", "m", "2"]}]}], ")"}]}], "-", 
          RowBox[{"128", " ", "G", " ", 
           SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]], 
      FractionBox[
       RowBox[{"2", " ", 
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[Kappa]", "2"], "-", 
             RowBox[{"12", " ", "\[ImaginaryI]", " ", "\[Kappa]", " ", 
              SubscriptBox["\[Omega]", "m"]}], "-", 
             RowBox[{"32", " ", 
              SubsuperscriptBox["\[Omega]", "m", "2"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              SubsuperscriptBox["\[Kappa]", "m", "2"]}], "+", 
             RowBox[{"12", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Kappa]", "m"], " ", 
              SubscriptBox["\[Omega]", "m"]}], "+", 
             RowBox[{"32", " ", 
              SubsuperscriptBox["\[Omega]", "m", "2"]}]}], ")"}]}], "+", 
          RowBox[{"16", " ", "\[ImaginaryI]", " ", "G", " ", "\[Kappa]", " ", 
           SubscriptBox["\[Omega]", "m"], " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Kappa]", "-", 
          RowBox[{"4", " ", "\[ImaginaryI]", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[Kappa]", "2"], "-", 
             RowBox[{"12", " ", "\[ImaginaryI]", " ", "\[Kappa]", " ", 
              SubscriptBox["\[Omega]", "m"]}], "-", 
             RowBox[{"32", " ", 
              SubsuperscriptBox["\[Omega]", "m", "2"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              SubsuperscriptBox["\[Kappa]", "m", "2"]}], "+", 
             RowBox[{"12", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Kappa]", "m"], " ", 
              SubscriptBox["\[Omega]", "m"]}], "+", 
             RowBox[{"32", " ", 
              SubsuperscriptBox["\[Omega]", "m", "2"]}]}], ")"}]}], "-", 
          RowBox[{"128", " ", "G", " ", 
           SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]], 
      FractionBox[
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"2", " ", 
            SubscriptBox["\[Kappa]", "ex"]}], "+", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[Kappa]", "2"], "-", 
           RowBox[{"12", " ", "\[ImaginaryI]", " ", "\[Kappa]", " ", 
            SubscriptBox["\[Omega]", "m"]}], "-", 
           RowBox[{"32", " ", 
            SubsuperscriptBox["\[Omega]", "m", "2"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            SubsuperscriptBox["\[Kappa]", "m", "2"]}], "+", 
           RowBox[{"12", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Kappa]", "m"], " ", 
            SubscriptBox["\[Omega]", "m"]}], "+", 
           RowBox[{"32", " ", 
            SubsuperscriptBox["\[Omega]", "m", "2"]}]}], ")"}]}], "+", 
        RowBox[{"32", " ", "\[ImaginaryI]", " ", "G", " ", 
         SubscriptBox["\[Omega]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[Kappa]", "2"], "-", 
           RowBox[{"\[Kappa]", " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["\[Kappa]", "ex"], "+", 
              RowBox[{"4", " ", "\[ImaginaryI]", " ", 
               SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
           RowBox[{"16", " ", 
            SubsuperscriptBox["\[Omega]", "m", "2"]}]}], ")"}], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Kappa]", "-", 
          RowBox[{"4", " ", "\[ImaginaryI]", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[Kappa]", "2"], "-", 
             RowBox[{"12", " ", "\[ImaginaryI]", " ", "\[Kappa]", " ", 
              SubscriptBox["\[Omega]", "m"]}], "-", 
             RowBox[{"32", " ", 
              SubsuperscriptBox["\[Omega]", "m", "2"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              SubsuperscriptBox["\[Kappa]", "m", "2"]}], "+", 
             RowBox[{"12", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Kappa]", "m"], " ", 
              SubscriptBox["\[Omega]", "m"]}], "+", 
             RowBox[{"32", " ", 
              SubsuperscriptBox["\[Omega]", "m", "2"]}]}], ")"}]}], "-", 
          RowBox[{"128", " ", "G", " ", 
           SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]], "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", 
      FractionBox[
       RowBox[{
        RowBox[{"\[Kappa]", " ", 
         SubscriptBox["\[Kappa]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Kappa]", "m"], "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
        RowBox[{"64", " ", "\[ImaginaryI]", " ", "G", " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Kappa]", "m"], "-", 
           RowBox[{"2", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         SubscriptBox["\[Omega]", "m"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}], 
       RowBox[{
        RowBox[{"\[Kappa]", " ", 
         SubscriptBox["\[Kappa]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Kappa]", "m"], "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
        RowBox[{"128", " ", "G", " ", 
         SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}]], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"64", " ", "\[ImaginaryI]", " ", "G", " ", 
         SubscriptBox["\[Kappa]", "m"], " ", 
         SubscriptBox["\[Omega]", "m"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}], 
        RowBox[{
         RowBox[{"\[Kappa]", " ", 
          SubscriptBox["\[Kappa]", "m"], " ", 
          RowBox[{"(", 
           RowBox[{"\[Kappa]", "-", 
            RowBox[{"4", " ", "\[ImaginaryI]", " ", 
             SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["\[Kappa]", "m"], "-", 
            RowBox[{"4", " ", "\[ImaginaryI]", " ", 
             SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
         RowBox[{"128", " ", "G", " ", 
          SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
          RowBox[{"Conjugate", "[", "G", "]"}]}]}]]}]},
     {"0", "0", "0", "0", "0", "0", "0", "0", 
      FractionBox[
       RowBox[{"64", " ", "\[ImaginaryI]", " ", "G", " ", 
        SubscriptBox["\[Kappa]", "m"], " ", 
        SubscriptBox["\[Omega]", "m"], " ", 
        RowBox[{"Conjugate", "[", "G", "]"}]}], 
       RowBox[{
        RowBox[{"\[Kappa]", " ", 
         SubscriptBox["\[Kappa]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Kappa]", "m"], "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
        RowBox[{"128", " ", "G", " ", 
         SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}]], 
      FractionBox[
       RowBox[{
        RowBox[{"\[Kappa]", " ", 
         SubscriptBox["\[Kappa]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Kappa]", "m"], "+", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
        RowBox[{"64", " ", "\[ImaginaryI]", " ", "G", " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Kappa]", "m"], "+", 
           RowBox[{"2", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         SubscriptBox["\[Omega]", "m"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}], 
       RowBox[{
        RowBox[{"\[Kappa]", " ", 
         SubscriptBox["\[Kappa]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Kappa]", "m"], "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
        RowBox[{"128", " ", "G", " ", 
         SubsuperscriptBox["\[Omega]", "m", "2"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}]]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.8607019096099095`*^9, 3.8607019740643377`*^9, 
  3.869615266256999*^9},
 Background->RGBColor[0.88, 1, 0.88],
 CellLabel->
  "Out[39]//MatrixForm=",ExpressionUUID->"38d1bde2-c4e9-495f-8acb-\
d2907a42f91b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"TCon", "/.", "SymmetricValues"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["\[Kappa]", "m"], "->", "0"}], "}"}]}], "//", "Simplify"}],
   "//", "MatrixForm"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.860536682600263*^9, 3.860536766682999*^9}, {
   3.860701930560402*^9, 3.860701931200392*^9}, 3.860702012330368*^9, {
   3.86960611998251*^9, 3.869606159808403*^9}, {3.869606339718977*^9, 
   3.869606471890669*^9}, {3.869606508718173*^9, 3.8696065486688485`*^9}, 
   3.8696152943483734`*^9},
 Background->RGBColor[0.88, 1, 0.88],
 CellLabel->"In[42]:=",ExpressionUUID->"3adefca1-2cc8-4e37-a31f-d54091c1e274"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       FractionBox[
        SubscriptBox["\[Kappa]", "ex"], "\[Kappa]"], "-", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", 
         SubscriptBox["\[Kappa]", "ex"]}], 
        RowBox[{"4", " ", 
         SubscriptBox["\[Omega]", "m"]}]]}], 
      FractionBox[
       RowBox[{
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Kappa]"}], "+", 
          RowBox[{"4", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], 
       RowBox[{"4", " ", "\[Kappa]", " ", 
        SubscriptBox["\[Omega]", "m"]}]], 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         SubscriptBox["\[Kappa]", "ex"], "\[Kappa]"]}], "-", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", 
         SubscriptBox["\[Kappa]", "ex"]}], 
        RowBox[{"4", " ", 
         SubscriptBox["\[Omega]", "m"]}]]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", 
         SqrtBox[
          RowBox[{"\[Kappa]", "-", 
           SubscriptBox["\[Kappa]", "ex"]}]], " ", 
         SqrtBox[
          SubscriptBox["\[Kappa]", "ex"]], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], 
        RowBox[{"4", " ", "\[Kappa]", " ", 
         SubscriptBox["\[Omega]", "m"]}]]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", "G", " ", 
         SubscriptBox["\[Kappa]", "ex"]}], 
        RowBox[{"4", " ", 
         SubscriptBox["\[Omega]", "m"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", "G", " ", 
         SqrtBox[
          RowBox[{"\[Kappa]", "-", 
           SubscriptBox["\[Kappa]", "ex"]}]], " ", 
         SqrtBox[
          SubscriptBox["\[Kappa]", "ex"]]}], 
        RowBox[{"4", " ", 
         SubscriptBox["\[Omega]", "m"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", "G", " ", 
         SubscriptBox["\[Kappa]", "ex"]}], 
        RowBox[{"4", " ", 
         SubscriptBox["\[Omega]", "m"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", "G", " ", 
         SqrtBox[
          RowBox[{"\[Kappa]", "-", 
           SubscriptBox["\[Kappa]", "ex"]}]], " ", 
         SqrtBox[
          SubscriptBox["\[Kappa]", "ex"]]}], 
        RowBox[{"4", " ", 
         SubscriptBox["\[Omega]", "m"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]]}], "0", "0"},
     {
      FractionBox[
       RowBox[{
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Kappa]"}], "+", 
          RowBox[{"4", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], 
       RowBox[{"4", " ", "\[Kappa]", " ", 
        SubscriptBox["\[Omega]", "m"]}]], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[Kappa]", "2"], "-", 
           RowBox[{"\[Kappa]", " ", 
            SubscriptBox["\[Kappa]", "ex"]}], "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Kappa]", "ex"], " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], 
        RowBox[{"4", " ", "\[Kappa]", " ", 
         SubscriptBox["\[Omega]", "m"]}]]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", 
         SqrtBox[
          RowBox[{"\[Kappa]", "-", 
           SubscriptBox["\[Kappa]", "ex"]}]], " ", 
         SqrtBox[
          SubscriptBox["\[Kappa]", "ex"]], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], 
        RowBox[{"4", " ", "\[Kappa]", " ", 
         SubscriptBox["\[Omega]", "m"]}]]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           SubscriptBox["\[Kappa]", "ex"]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], 
        RowBox[{"4", " ", "\[Kappa]", " ", 
         SubscriptBox["\[Omega]", "m"]}]]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", "G", " ", 
         SqrtBox[
          RowBox[{"\[Kappa]", "-", 
           SubscriptBox["\[Kappa]", "ex"]}]], " ", 
         SqrtBox[
          SubscriptBox["\[Kappa]", "ex"]]}], 
        RowBox[{"4", " ", 
         SubscriptBox["\[Omega]", "m"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", "G", " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           SubscriptBox["\[Kappa]", "ex"]}], ")"}]}], 
        RowBox[{"4", " ", 
         SubscriptBox["\[Omega]", "m"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", "G", " ", 
         SqrtBox[
          RowBox[{"\[Kappa]", "-", 
           SubscriptBox["\[Kappa]", "ex"]}]], " ", 
         SqrtBox[
          SubscriptBox["\[Kappa]", "ex"]]}], 
        RowBox[{"4", " ", 
         SubscriptBox["\[Omega]", "m"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", "G", " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           SubscriptBox["\[Kappa]", "ex"]}], ")"}]}], 
        RowBox[{"4", " ", 
         SubscriptBox["\[Omega]", "m"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]]}], "0", "0"},
     {
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         SubscriptBox["\[Kappa]", "ex"], "\[Kappa]"]}], "-", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", 
         SubscriptBox["\[Kappa]", "ex"]}], 
        RowBox[{"4", " ", 
         SubscriptBox["\[Omega]", "m"]}]]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", 
         SqrtBox[
          RowBox[{"\[Kappa]", "-", 
           SubscriptBox["\[Kappa]", "ex"]}]], " ", 
         SqrtBox[
          SubscriptBox["\[Kappa]", "ex"]], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], 
        RowBox[{"4", " ", "\[Kappa]", " ", 
         SubscriptBox["\[Omega]", "m"]}]]}], 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       FractionBox[
        SubscriptBox["\[Kappa]", "ex"], "\[Kappa]"], "-", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", 
         SubscriptBox["\[Kappa]", "ex"]}], 
        RowBox[{"4", " ", 
         SubscriptBox["\[Omega]", "m"]}]]}], 
      FractionBox[
       RowBox[{
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Kappa]"}], "+", 
          RowBox[{"4", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], 
       RowBox[{"4", " ", "\[Kappa]", " ", 
        SubscriptBox["\[Omega]", "m"]}]], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", "G", " ", 
         SubscriptBox["\[Kappa]", "ex"]}], 
        RowBox[{"4", " ", 
         SubscriptBox["\[Omega]", "m"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", "G", " ", 
         SqrtBox[
          RowBox[{"\[Kappa]", "-", 
           SubscriptBox["\[Kappa]", "ex"]}]], " ", 
         SqrtBox[
          SubscriptBox["\[Kappa]", "ex"]]}], 
        RowBox[{"4", " ", 
         SubscriptBox["\[Omega]", "m"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", "G", " ", 
         SubscriptBox["\[Kappa]", "ex"]}], 
        RowBox[{"4", " ", 
         SubscriptBox["\[Omega]", "m"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", "G", " ", 
         SqrtBox[
          RowBox[{"\[Kappa]", "-", 
           SubscriptBox["\[Kappa]", "ex"]}]], " ", 
         SqrtBox[
          SubscriptBox["\[Kappa]", "ex"]]}], 
        RowBox[{"4", " ", 
         SubscriptBox["\[Omega]", "m"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]]}], "0", "0"},
     {
      RowBox[{"-", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", 
         SqrtBox[
          RowBox[{"\[Kappa]", "-", 
           SubscriptBox["\[Kappa]", "ex"]}]], " ", 
         SqrtBox[
          SubscriptBox["\[Kappa]", "ex"]], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], 
        RowBox[{"4", " ", "\[Kappa]", " ", 
         SubscriptBox["\[Omega]", "m"]}]]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           SubscriptBox["\[Kappa]", "ex"]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], 
        RowBox[{"4", " ", "\[Kappa]", " ", 
         SubscriptBox["\[Omega]", "m"]}]]}], 
      FractionBox[
       RowBox[{
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Kappa]"}], "+", 
          RowBox[{"4", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], 
       RowBox[{"4", " ", "\[Kappa]", " ", 
        SubscriptBox["\[Omega]", "m"]}]], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[Kappa]", "2"], "-", 
           RowBox[{"\[Kappa]", " ", 
            SubscriptBox["\[Kappa]", "ex"]}], "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Kappa]", "ex"], " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], 
        RowBox[{"4", " ", "\[Kappa]", " ", 
         SubscriptBox["\[Omega]", "m"]}]]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", "G", " ", 
         SqrtBox[
          RowBox[{"\[Kappa]", "-", 
           SubscriptBox["\[Kappa]", "ex"]}]], " ", 
         SqrtBox[
          SubscriptBox["\[Kappa]", "ex"]]}], 
        RowBox[{"4", " ", 
         SubscriptBox["\[Omega]", "m"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", "G", " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           SubscriptBox["\[Kappa]", "ex"]}], ")"}]}], 
        RowBox[{"4", " ", 
         SubscriptBox["\[Omega]", "m"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", "G", " ", 
         SqrtBox[
          RowBox[{"\[Kappa]", "-", 
           SubscriptBox["\[Kappa]", "ex"]}]], " ", 
         SqrtBox[
          SubscriptBox["\[Kappa]", "ex"]]}], 
        RowBox[{"4", " ", 
         SubscriptBox["\[Omega]", "m"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", "G", " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           SubscriptBox["\[Kappa]", "ex"]}], ")"}]}], 
        RowBox[{"4", " ", 
         SubscriptBox["\[Omega]", "m"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]]}], "0", "0"},
     {
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", 
        SubscriptBox["\[Kappa]", "ex"], " ", 
        RowBox[{"Conjugate", "[", "G", "]"}]}], 
       RowBox[{"4", " ", "G", " ", 
        SubscriptBox["\[Omega]", "m"]}]], 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", 
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        RowBox[{"Conjugate", "[", "G", "]"}]}], 
       RowBox[{"4", " ", "G", " ", 
        SubscriptBox["\[Omega]", "m"]}]], 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", 
        SubscriptBox["\[Kappa]", "ex"], " ", 
        RowBox[{"Conjugate", "[", "G", "]"}]}], 
       RowBox[{"4", " ", "G", " ", 
        SubscriptBox["\[Omega]", "m"]}]], 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", 
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        RowBox[{"Conjugate", "[", "G", "]"}]}], 
       RowBox[{"4", " ", "G", " ", 
        SubscriptBox["\[Omega]", "m"]}]], 
      FractionBox[
       RowBox[{
        RowBox[{"\[ImaginaryI]", " ", "\[Kappa]", " ", 
         SubscriptBox["\[Kappa]", "ex"]}], "-", 
        RowBox[{"4", " ", "\[Kappa]", " ", 
         SubscriptBox["\[Omega]", "m"]}], "+", 
        RowBox[{"8", " ", 
         SubscriptBox["\[Kappa]", "ex"], " ", 
         SubscriptBox["\[Omega]", "m"]}], "+", 
        RowBox[{"16", " ", "\[ImaginaryI]", " ", 
         SubsuperscriptBox["\[Omega]", "m", "2"]}]}], 
       RowBox[{
        RowBox[{"4", " ", "\[Kappa]", " ", 
         SubscriptBox["\[Omega]", "m"]}], "-", 
        RowBox[{"16", " ", "\[ImaginaryI]", " ", 
         SubsuperscriptBox["\[Omega]", "m", "2"]}]}]], 
      FractionBox[
       RowBox[{
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", "\[Kappa]"}], "+", 
          RowBox[{"8", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], 
       RowBox[{"4", " ", 
        RowBox[{"(", 
         RowBox[{"\[Kappa]", "-", 
          RowBox[{"4", " ", "\[ImaginaryI]", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        SubscriptBox["\[Omega]", "m"]}]], 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", "\[Kappa]", " ", 
        SubscriptBox["\[Kappa]", "ex"]}], 
       RowBox[{
        RowBox[{"4", " ", "\[Kappa]", " ", 
         SubscriptBox["\[Omega]", "m"]}], "-", 
        RowBox[{"16", " ", "\[ImaginaryI]", " ", 
         SubsuperscriptBox["\[Omega]", "m", "2"]}]}]], 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", "\[Kappa]", " ", 
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]]}], 
       RowBox[{
        RowBox[{"4", " ", "\[Kappa]", " ", 
         SubscriptBox["\[Omega]", "m"]}], "-", 
        RowBox[{"16", " ", "\[ImaginaryI]", " ", 
         SubsuperscriptBox["\[Omega]", "m", "2"]}]}]], "0", "0"},
     {
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", 
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        RowBox[{"Conjugate", "[", "G", "]"}]}], 
       RowBox[{"4", " ", "G", " ", 
        SubscriptBox["\[Omega]", "m"]}]], 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}], ")"}], " ", 
        RowBox[{"Conjugate", "[", "G", "]"}]}], 
       RowBox[{"4", " ", "G", " ", 
        SubscriptBox["\[Omega]", "m"]}]], 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", 
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        RowBox[{"Conjugate", "[", "G", "]"}]}], 
       RowBox[{"4", " ", "G", " ", 
        SubscriptBox["\[Omega]", "m"]}]], 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}], ")"}], " ", 
        RowBox[{"Conjugate", "[", "G", "]"}]}], 
       RowBox[{"4", " ", "G", " ", 
        SubscriptBox["\[Omega]", "m"]}]], 
      FractionBox[
       RowBox[{
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", "\[Kappa]"}], "+", 
          RowBox[{"8", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], 
       RowBox[{"4", " ", 
        RowBox[{"(", 
         RowBox[{"\[Kappa]", "-", 
          RowBox[{"4", " ", "\[ImaginaryI]", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        SubscriptBox["\[Omega]", "m"]}]], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         SuperscriptBox["\[Kappa]", "2"], "-", 
         RowBox[{"\[Kappa]", " ", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["\[Kappa]", "ex"], "+", 
            RowBox[{"4", " ", "\[ImaginaryI]", " ", 
             SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
         RowBox[{"8", " ", 
          SubscriptBox["\[Omega]", "m"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[ImaginaryI]", " ", 
             SubscriptBox["\[Kappa]", "ex"]}], "+", 
            RowBox[{"2", " ", 
             SubscriptBox["\[Omega]", "m"]}]}], ")"}]}]}], 
        RowBox[{"4", " ", 
         SubscriptBox["\[Omega]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[ImaginaryI]", " ", "\[Kappa]"}], "+", 
           RowBox[{"4", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}]]}], 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", "\[Kappa]", " ", 
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]]}], 
       RowBox[{
        RowBox[{"4", " ", "\[Kappa]", " ", 
         SubscriptBox["\[Omega]", "m"]}], "-", 
        RowBox[{"16", " ", "\[ImaginaryI]", " ", 
         SubsuperscriptBox["\[Omega]", "m", "2"]}]}]], 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", "\[Kappa]", " ", 
        RowBox[{"(", 
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}], ")"}]}], 
       RowBox[{"4", " ", 
        RowBox[{"(", 
         RowBox[{"\[Kappa]", "-", 
          RowBox[{"4", " ", "\[ImaginaryI]", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        SubscriptBox["\[Omega]", "m"]}]], "0", "0"},
     {
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", 
        SubscriptBox["\[Kappa]", "ex"], " ", 
        RowBox[{"Conjugate", "[", "G", "]"}]}], 
       RowBox[{"4", " ", "G", " ", 
        SubscriptBox["\[Omega]", "m"]}]], 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", 
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        RowBox[{"Conjugate", "[", "G", "]"}]}], 
       RowBox[{"4", " ", "G", " ", 
        SubscriptBox["\[Omega]", "m"]}]], 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", 
        SubscriptBox["\[Kappa]", "ex"], " ", 
        RowBox[{"Conjugate", "[", "G", "]"}]}], 
       RowBox[{"4", " ", "G", " ", 
        SubscriptBox["\[Omega]", "m"]}]], 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", 
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        RowBox[{"Conjugate", "[", "G", "]"}]}], 
       RowBox[{"4", " ", "G", " ", 
        SubscriptBox["\[Omega]", "m"]}]], 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", "\[Kappa]", " ", 
        SubscriptBox["\[Kappa]", "ex"]}], 
       RowBox[{
        RowBox[{"4", " ", "\[Kappa]", " ", 
         SubscriptBox["\[Omega]", "m"]}], "-", 
        RowBox[{"16", " ", "\[ImaginaryI]", " ", 
         SubsuperscriptBox["\[Omega]", "m", "2"]}]}]], 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", "\[Kappa]", " ", 
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]]}], 
       RowBox[{
        RowBox[{"4", " ", "\[Kappa]", " ", 
         SubscriptBox["\[Omega]", "m"]}], "-", 
        RowBox[{"16", " ", "\[ImaginaryI]", " ", 
         SubsuperscriptBox["\[Omega]", "m", "2"]}]}]], 
      FractionBox[
       RowBox[{
        RowBox[{"\[ImaginaryI]", " ", "\[Kappa]", " ", 
         SubscriptBox["\[Kappa]", "ex"]}], "-", 
        RowBox[{"4", " ", "\[Kappa]", " ", 
         SubscriptBox["\[Omega]", "m"]}], "+", 
        RowBox[{"8", " ", 
         SubscriptBox["\[Kappa]", "ex"], " ", 
         SubscriptBox["\[Omega]", "m"]}], "+", 
        RowBox[{"16", " ", "\[ImaginaryI]", " ", 
         SubsuperscriptBox["\[Omega]", "m", "2"]}]}], 
       RowBox[{
        RowBox[{"4", " ", "\[Kappa]", " ", 
         SubscriptBox["\[Omega]", "m"]}], "-", 
        RowBox[{"16", " ", "\[ImaginaryI]", " ", 
         SubsuperscriptBox["\[Omega]", "m", "2"]}]}]], 
      FractionBox[
       RowBox[{
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", "\[Kappa]"}], "+", 
          RowBox[{"8", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], 
       RowBox[{"4", " ", 
        RowBox[{"(", 
         RowBox[{"\[Kappa]", "-", 
          RowBox[{"4", " ", "\[ImaginaryI]", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        SubscriptBox["\[Omega]", "m"]}]], "0", "0"},
     {
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", 
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        RowBox[{"Conjugate", "[", "G", "]"}]}], 
       RowBox[{"4", " ", "G", " ", 
        SubscriptBox["\[Omega]", "m"]}]], 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}], ")"}], " ", 
        RowBox[{"Conjugate", "[", "G", "]"}]}], 
       RowBox[{"4", " ", "G", " ", 
        SubscriptBox["\[Omega]", "m"]}]], 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", 
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        RowBox[{"Conjugate", "[", "G", "]"}]}], 
       RowBox[{"4", " ", "G", " ", 
        SubscriptBox["\[Omega]", "m"]}]], 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}], ")"}], " ", 
        RowBox[{"Conjugate", "[", "G", "]"}]}], 
       RowBox[{"4", " ", "G", " ", 
        SubscriptBox["\[Omega]", "m"]}]], 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", "\[Kappa]", " ", 
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]]}], 
       RowBox[{
        RowBox[{"4", " ", "\[Kappa]", " ", 
         SubscriptBox["\[Omega]", "m"]}], "-", 
        RowBox[{"16", " ", "\[ImaginaryI]", " ", 
         SubsuperscriptBox["\[Omega]", "m", "2"]}]}]], 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", "\[Kappa]", " ", 
        RowBox[{"(", 
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}], ")"}]}], 
       RowBox[{"4", " ", 
        RowBox[{"(", 
         RowBox[{"\[Kappa]", "-", 
          RowBox[{"4", " ", "\[ImaginaryI]", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        SubscriptBox["\[Omega]", "m"]}]], 
      FractionBox[
       RowBox[{
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", "\[Kappa]"}], "+", 
          RowBox[{"8", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], 
       RowBox[{"4", " ", 
        RowBox[{"(", 
         RowBox[{"\[Kappa]", "-", 
          RowBox[{"4", " ", "\[ImaginaryI]", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        SubscriptBox["\[Omega]", "m"]}]], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         SuperscriptBox["\[Kappa]", "2"], "-", 
         RowBox[{"\[Kappa]", " ", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["\[Kappa]", "ex"], "+", 
            RowBox[{"4", " ", "\[ImaginaryI]", " ", 
             SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
         RowBox[{"8", " ", 
          SubscriptBox["\[Omega]", "m"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[ImaginaryI]", " ", 
             SubscriptBox["\[Kappa]", "ex"]}], "+", 
            RowBox[{"2", " ", 
             SubscriptBox["\[Omega]", "m"]}]}], ")"}]}]}], 
        RowBox[{"4", " ", 
         SubscriptBox["\[Omega]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[ImaginaryI]", " ", "\[Kappa]"}], "+", 
           RowBox[{"4", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}]}]]}], "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", 
      RowBox[{"-", "1"}], "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", 
      RowBox[{"-", "1"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.860536685152483*^9, 3.860536736868038*^9}, 
   3.8605367672928877`*^9, 3.860701932017395*^9, 3.860702012330368*^9, 
   3.861315493045082*^9, 3.8674555885371556`*^9, {3.8696061051432123`*^9, 
   3.869606160359997*^9}, {3.8696063773136196`*^9, 3.869606472285597*^9}, {
   3.869606511218093*^9, 3.869606549453411*^9}, 3.869615294977333*^9},
 Background->RGBColor[0.88, 1, 0.88],
 CellLabel->
  "Out[42]//MatrixForm=",ExpressionUUID->"b08a56ea-3b1a-45ad-970a-\
d4e859fe6687"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"TOsc", "/.", "SymmetricValues"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["\[Kappa]", "m"], "->", "0"}], "}"}]}], "//", "Simplify"}],
   "//", "MatrixForm"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.860701939681512*^9, 3.8607019559399323`*^9}, {
  3.8607019956451283`*^9, 3.860702012330368*^9}},
 Background->RGBColor[0.88, 1, 0.88],
 CellLabel->"In[43]:=",ExpressionUUID->"240d6d79-cd2e-4355-8436-2f1ec61ca3ae"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       FractionBox[
        SubscriptBox["\[Kappa]", "ex"], "\[Kappa]"]}], 
      FractionBox[
       RowBox[{
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]]}], "\[Kappa]"], 
      RowBox[{"-", 
       FractionBox[
        SubscriptBox["\[Kappa]", "ex"], "\[Kappa]"]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         SqrtBox[
          RowBox[{"\[Kappa]", "-", 
           SubscriptBox["\[Kappa]", "ex"]}]], " ", 
         SqrtBox[
          SubscriptBox["\[Kappa]", "ex"]]}], "\[Kappa]"]}], "0", "0", "0", 
      "0", "0", "0"},
     {
      FractionBox[
       RowBox[{
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]]}], "\[Kappa]"], 
      RowBox[{"-", 
       FractionBox[
        SubscriptBox["\[Kappa]", "ex"], "\[Kappa]"]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         SqrtBox[
          RowBox[{"\[Kappa]", "-", 
           SubscriptBox["\[Kappa]", "ex"]}]], " ", 
         SqrtBox[
          SubscriptBox["\[Kappa]", "ex"]]}], "\[Kappa]"]}], 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       FractionBox[
        SubscriptBox["\[Kappa]", "ex"], "\[Kappa]"]}], "0", "0", "0", "0", 
      "0", "0"},
     {
      RowBox[{"-", 
       FractionBox[
        SubscriptBox["\[Kappa]", "ex"], "\[Kappa]"]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         SqrtBox[
          RowBox[{"\[Kappa]", "-", 
           SubscriptBox["\[Kappa]", "ex"]}]], " ", 
         SqrtBox[
          SubscriptBox["\[Kappa]", "ex"]]}], "\[Kappa]"]}], 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       FractionBox[
        SubscriptBox["\[Kappa]", "ex"], "\[Kappa]"]}], 
      FractionBox[
       RowBox[{
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]]}], "\[Kappa]"], "0", "0", "0", "0", 
      "0", "0"},
     {
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         SqrtBox[
          RowBox[{"\[Kappa]", "-", 
           SubscriptBox["\[Kappa]", "ex"]}]], " ", 
         SqrtBox[
          SubscriptBox["\[Kappa]", "ex"]]}], "\[Kappa]"]}], 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       FractionBox[
        SubscriptBox["\[Kappa]", "ex"], "\[Kappa]"]}], 
      FractionBox[
       RowBox[{
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]]}], "\[Kappa]"], 
      RowBox[{"-", 
       FractionBox[
        SubscriptBox["\[Kappa]", "ex"], "\[Kappa]"]}], "0", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", 
      FractionBox[
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "-", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{
                SubscriptBox["\[Kappa]", "ex"], "+", 
                RowBox[{"2", " ", "\[ImaginaryI]", " ", 
                 SubscriptBox["\[Omega]", "m"]}]}], ")"}]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           SubscriptBox["\[Omega]", "m"]}], ")"}]}], "+", 
        RowBox[{"G", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[ImaginaryI]", " ", "\[Kappa]"}], "-", 
           RowBox[{"\[ImaginaryI]", " ", 
            SubscriptBox["\[Kappa]", "ex"]}], "+", 
           RowBox[{"4", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Kappa]", "-", 
          RowBox[{"4", " ", "\[ImaginaryI]", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           SubscriptBox["\[Omega]", "m"]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", "G", " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]], 
      FractionBox[
       RowBox[{
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           SubscriptBox["\[Omega]", "m"]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", "G", " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Kappa]", "-", 
          RowBox[{"4", " ", "\[ImaginaryI]", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           SubscriptBox["\[Omega]", "m"]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", "G", " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"G", " ", 
         SubscriptBox["\[Kappa]", "ex"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SubscriptBox["\[Omega]", "m"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[ImaginaryI]", " ", "\[Kappa]"}], "+", 
              RowBox[{"4", " ", 
               SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
           RowBox[{"G", " ", 
            RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]]}], 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", "G", " ", 
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        RowBox[{"Conjugate", "[", "G", "]"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Kappa]", "-", 
          RowBox[{"4", " ", "\[ImaginaryI]", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           SubscriptBox["\[Omega]", "m"]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", "G", " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]], "0", "0"},
     {"0", "0", "0", "0", 
      FractionBox[
       RowBox[{
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           SubscriptBox["\[Omega]", "m"]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", "G", " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Kappa]", "-", 
          RowBox[{"4", " ", "\[ImaginaryI]", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           SubscriptBox["\[Omega]", "m"]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", "G", " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]], 
      FractionBox[
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"2", " ", 
            SubscriptBox["\[Kappa]", "ex"]}], "+", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         SubscriptBox["\[Omega]", "m"]}], "+", 
        RowBox[{"G", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[ImaginaryI]", " ", 
            SubscriptBox["\[Kappa]", "ex"]}], "+", 
           RowBox[{"4", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Kappa]", "-", 
          RowBox[{"4", " ", "\[ImaginaryI]", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           SubscriptBox["\[Omega]", "m"]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", "G", " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]], 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", "G", " ", 
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        RowBox[{"Conjugate", "[", "G", "]"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Kappa]", "-", 
          RowBox[{"4", " ", "\[ImaginaryI]", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           SubscriptBox["\[Omega]", "m"]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", "G", " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"G", " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           SubscriptBox["\[Kappa]", "ex"]}], ")"}], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SubscriptBox["\[Omega]", "m"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[ImaginaryI]", " ", "\[Kappa]"}], "+", 
              RowBox[{"4", " ", 
               SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
           RowBox[{"G", " ", 
            RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]]}], "0", "0"},
     {"0", "0", "0", "0", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"G", " ", 
         SubscriptBox["\[Kappa]", "ex"], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SubscriptBox["\[Omega]", "m"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[ImaginaryI]", " ", "\[Kappa]"}], "+", 
              RowBox[{"4", " ", 
               SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
           RowBox[{"G", " ", 
            RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]]}], 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", "G", " ", 
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        RowBox[{"Conjugate", "[", "G", "]"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Kappa]", "-", 
          RowBox[{"4", " ", "\[ImaginaryI]", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           SubscriptBox["\[Omega]", "m"]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", "G", " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]], 
      FractionBox[
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "-", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{
                SubscriptBox["\[Kappa]", "ex"], "+", 
                RowBox[{"2", " ", "\[ImaginaryI]", " ", 
                 SubscriptBox["\[Omega]", "m"]}]}], ")"}]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           SubscriptBox["\[Omega]", "m"]}], ")"}]}], "+", 
        RowBox[{"G", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[ImaginaryI]", " ", "\[Kappa]"}], "-", 
           RowBox[{"\[ImaginaryI]", " ", 
            SubscriptBox["\[Kappa]", "ex"]}], "+", 
           RowBox[{"4", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Kappa]", "-", 
          RowBox[{"4", " ", "\[ImaginaryI]", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           SubscriptBox["\[Omega]", "m"]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", "G", " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]], 
      FractionBox[
       RowBox[{
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           SubscriptBox["\[Omega]", "m"]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", "G", " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Kappa]", "-", 
          RowBox[{"4", " ", "\[ImaginaryI]", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           SubscriptBox["\[Omega]", "m"]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", "G", " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]], "0", "0"},
     {"0", "0", "0", "0", 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", "G", " ", 
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        RowBox[{"Conjugate", "[", "G", "]"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Kappa]", "-", 
          RowBox[{"4", " ", "\[ImaginaryI]", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           SubscriptBox["\[Omega]", "m"]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", "G", " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"G", " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           SubscriptBox["\[Kappa]", "ex"]}], ")"}], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SubscriptBox["\[Omega]", "m"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[ImaginaryI]", " ", "\[Kappa]"}], "+", 
              RowBox[{"4", " ", 
               SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "+", 
           RowBox[{"G", " ", 
            RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]]}], 
      FractionBox[
       RowBox[{
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           SubscriptBox["\[Omega]", "m"]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", "G", " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Kappa]", "-", 
          RowBox[{"4", " ", "\[ImaginaryI]", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           SubscriptBox["\[Omega]", "m"]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", "G", " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]], 
      FractionBox[
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"2", " ", 
            SubscriptBox["\[Kappa]", "ex"]}], "+", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         SubscriptBox["\[Omega]", "m"]}], "+", 
        RowBox[{"G", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[ImaginaryI]", " ", 
            SubscriptBox["\[Kappa]", "ex"]}], "+", 
           RowBox[{"4", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Kappa]", "-", 
          RowBox[{"4", " ", "\[ImaginaryI]", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"\[Kappa]", "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", 
              SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
           SubscriptBox["\[Omega]", "m"]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", "G", " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]], "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", 
      RowBox[{"-", "1"}], "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", 
      RowBox[{"-", "1"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.860701941400504*^9, 3.8607019565704985`*^9}, {
   3.8607019962334843`*^9, 3.8607020123313675`*^9}, 3.8674555966197453`*^9, 
   3.86745563688089*^9, 3.869615300054797*^9},
 Background->RGBColor[0.88, 1, 0.88],
 CellLabel->
  "Out[43]//MatrixForm=",ExpressionUUID->"65f27194-0d6f-496a-9cf2-\
35ba1e92fe96"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"TOsc2", "/.", "SymmetricValues"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["\[Kappa]", "m"], "->", "0"}], "}"}]}], "//", "Simplify"}],
   "//", "MatrixForm"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{3.8607020123313675`*^9},
 Background->RGBColor[0.88, 1, 0.88],
 CellLabel->"In[44]:=",ExpressionUUID->"5d96e545-c7a2-4625-b254-df98a7c37ff1"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       FractionBox[
        SubscriptBox["\[Kappa]", "ex"], "\[Kappa]"], "+", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", 
         SubscriptBox["\[Kappa]", "ex"]}], 
        RowBox[{"4", " ", 
         SubscriptBox["\[Omega]", "m"]}]]}], 
      FractionBox[
       RowBox[{
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", "\[Kappa]"}], "+", 
          RowBox[{"4", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], 
       RowBox[{"4", " ", "\[Kappa]", " ", 
        SubscriptBox["\[Omega]", "m"]}]], 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         SubscriptBox["\[Kappa]", "ex"], "\[Kappa]"]}], "+", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", 
         SubscriptBox["\[Kappa]", "ex"]}], 
        RowBox[{"4", " ", 
         SubscriptBox["\[Omega]", "m"]}]]}], 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", 
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        RowBox[{"(", 
         RowBox[{"\[Kappa]", "+", 
          RowBox[{"4", " ", "\[ImaginaryI]", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], 
       RowBox[{"4", " ", "\[Kappa]", " ", 
        SubscriptBox["\[Omega]", "m"]}]], "0", "0", "0", "0", "0", "0"},
     {
      FractionBox[
       RowBox[{
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", "\[Kappa]"}], "+", 
          RowBox[{"4", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], 
       RowBox[{"4", " ", "\[Kappa]", " ", 
        SubscriptBox["\[Omega]", "m"]}]], 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["\[Kappa]", "2"], "-", 
          RowBox[{"\[Kappa]", " ", 
           SubscriptBox["\[Kappa]", "ex"]}], "+", 
          RowBox[{"4", " ", "\[ImaginaryI]", " ", 
           SubscriptBox["\[Kappa]", "ex"], " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], 
       RowBox[{"4", " ", "\[Kappa]", " ", 
        SubscriptBox["\[Omega]", "m"]}]], 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", 
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        RowBox[{"(", 
         RowBox[{"\[Kappa]", "+", 
          RowBox[{"4", " ", "\[ImaginaryI]", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], 
       RowBox[{"4", " ", "\[Kappa]", " ", 
        SubscriptBox["\[Omega]", "m"]}]], 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"\[Kappa]", "+", 
          RowBox[{"4", " ", "\[ImaginaryI]", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], 
       RowBox[{"4", " ", "\[Kappa]", " ", 
        SubscriptBox["\[Omega]", "m"]}]], "0", "0", "0", "0", "0", "0"},
     {
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         SubscriptBox["\[Kappa]", "ex"], "\[Kappa]"]}], "+", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", 
         SubscriptBox["\[Kappa]", "ex"]}], 
        RowBox[{"4", " ", 
         SubscriptBox["\[Omega]", "m"]}]]}], 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", 
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        RowBox[{"(", 
         RowBox[{"\[Kappa]", "+", 
          RowBox[{"4", " ", "\[ImaginaryI]", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], 
       RowBox[{"4", " ", "\[Kappa]", " ", 
        SubscriptBox["\[Omega]", "m"]}]], 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       FractionBox[
        SubscriptBox["\[Kappa]", "ex"], "\[Kappa]"], "+", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", 
         SubscriptBox["\[Kappa]", "ex"]}], 
        RowBox[{"4", " ", 
         SubscriptBox["\[Omega]", "m"]}]]}], 
      FractionBox[
       RowBox[{
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", "\[Kappa]"}], "+", 
          RowBox[{"4", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], 
       RowBox[{"4", " ", "\[Kappa]", " ", 
        SubscriptBox["\[Omega]", "m"]}]], "0", "0", "0", "0", "0", "0"},
     {
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", 
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        RowBox[{"(", 
         RowBox[{"\[Kappa]", "+", 
          RowBox[{"4", " ", "\[ImaginaryI]", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], 
       RowBox[{"4", " ", "\[Kappa]", " ", 
        SubscriptBox["\[Omega]", "m"]}]], 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"\[Kappa]", "+", 
          RowBox[{"4", " ", "\[ImaginaryI]", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], 
       RowBox[{"4", " ", "\[Kappa]", " ", 
        SubscriptBox["\[Omega]", "m"]}]], 
      FractionBox[
       RowBox[{
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", "\[Kappa]"}], "+", 
          RowBox[{"4", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], 
       RowBox[{"4", " ", "\[Kappa]", " ", 
        SubscriptBox["\[Omega]", "m"]}]], 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["\[Kappa]", "2"], "-", 
          RowBox[{"\[Kappa]", " ", 
           SubscriptBox["\[Kappa]", "ex"]}], "+", 
          RowBox[{"4", " ", "\[ImaginaryI]", " ", 
           SubscriptBox["\[Kappa]", "ex"], " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], 
       RowBox[{"4", " ", "\[Kappa]", " ", 
        SubscriptBox["\[Omega]", "m"]}]], "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", 
      FractionBox[
       RowBox[{
        RowBox[{
         SubscriptBox["\[Omega]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[ImaginaryI]", " ", "\[Kappa]"}], "-", 
           RowBox[{"2", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Kappa]", "ex"]}], "+", 
           RowBox[{"4", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[Kappa]", "2"], "-", 
           RowBox[{"12", " ", "\[ImaginaryI]", " ", "\[Kappa]", " ", 
            SubscriptBox["\[Omega]", "m"]}], "-", 
           RowBox[{"32", " ", 
            SubsuperscriptBox["\[Omega]", "m", "2"]}]}], ")"}]}], "+", 
        RowBox[{"G", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Kappa]", " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["\[Kappa]", "ex"], "-", 
              RowBox[{"4", " ", "\[ImaginaryI]", " ", 
               SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
           RowBox[{"16", " ", 
            SubsuperscriptBox["\[Omega]", "m", "2"]}]}], ")"}], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}], 
       RowBox[{
        SubscriptBox["\[Omega]", "m"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", "\[Kappa]"}], "+", 
          RowBox[{"4", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["\[Kappa]", "2"]}], "+", 
          RowBox[{"12", " ", "\[ImaginaryI]", " ", "\[Kappa]", " ", 
           SubscriptBox["\[Omega]", "m"]}], "+", 
          RowBox[{"32", " ", 
           SubsuperscriptBox["\[Omega]", "m", "2"]}], "+", 
          RowBox[{"4", " ", "G", " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]], 
      FractionBox[
       RowBox[{
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", 
           SubscriptBox["\[Omega]", "m"], " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[Kappa]", "2"], "-", 
             RowBox[{"12", " ", "\[ImaginaryI]", " ", "\[Kappa]", " ", 
              SubscriptBox["\[Omega]", "m"]}], "-", 
             RowBox[{"32", " ", 
              SubsuperscriptBox["\[Omega]", "m", "2"]}]}], ")"}]}], "+", 
          RowBox[{"\[ImaginaryI]", " ", "G", " ", "\[Kappa]", " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Kappa]", "-", 
          RowBox[{"4", " ", "\[ImaginaryI]", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        SubscriptBox["\[Omega]", "m"], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["\[Kappa]", "2"], "-", 
          RowBox[{"12", " ", "\[ImaginaryI]", " ", "\[Kappa]", " ", 
           SubscriptBox["\[Omega]", "m"]}], "-", 
          RowBox[{"32", " ", 
           SubsuperscriptBox["\[Omega]", "m", "2"]}], "-", 
          RowBox[{"4", " ", "G", " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]], 
      FractionBox[
       RowBox[{"G", " ", 
        SubscriptBox["\[Kappa]", "ex"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", "\[Kappa]"}], "+", 
          RowBox[{"8", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        RowBox[{"Conjugate", "[", "G", "]"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Kappa]", "-", 
          RowBox[{"4", " ", "\[ImaginaryI]", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        SubscriptBox["\[Omega]", "m"], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["\[Kappa]", "2"], "-", 
          RowBox[{"12", " ", "\[ImaginaryI]", " ", "\[Kappa]", " ", 
           SubscriptBox["\[Omega]", "m"]}], "-", 
          RowBox[{"32", " ", 
           SubsuperscriptBox["\[Omega]", "m", "2"]}], "-", 
          RowBox[{"4", " ", "G", " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]], 
      FractionBox[
       RowBox[{"G", " ", 
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", "\[Kappa]"}], "+", 
          RowBox[{"8", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        RowBox[{"Conjugate", "[", "G", "]"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Kappa]", "-", 
          RowBox[{"4", " ", "\[ImaginaryI]", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        SubscriptBox["\[Omega]", "m"], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["\[Kappa]", "2"], "-", 
          RowBox[{"12", " ", "\[ImaginaryI]", " ", "\[Kappa]", " ", 
           SubscriptBox["\[Omega]", "m"]}], "-", 
          RowBox[{"32", " ", 
           SubsuperscriptBox["\[Omega]", "m", "2"]}], "-", 
          RowBox[{"4", " ", "G", " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]], "0", "0"},
     {"0", "0", "0", "0", 
      FractionBox[
       RowBox[{
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", 
           SubscriptBox["\[Omega]", "m"], " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[Kappa]", "2"], "-", 
             RowBox[{"12", " ", "\[ImaginaryI]", " ", "\[Kappa]", " ", 
              SubscriptBox["\[Omega]", "m"]}], "-", 
             RowBox[{"32", " ", 
              SubsuperscriptBox["\[Omega]", "m", "2"]}]}], ")"}]}], "+", 
          RowBox[{"\[ImaginaryI]", " ", "G", " ", "\[Kappa]", " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Kappa]", "-", 
          RowBox[{"4", " ", "\[ImaginaryI]", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        SubscriptBox["\[Omega]", "m"], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["\[Kappa]", "2"], "-", 
          RowBox[{"12", " ", "\[ImaginaryI]", " ", "\[Kappa]", " ", 
           SubscriptBox["\[Omega]", "m"]}], "-", 
          RowBox[{"32", " ", 
           SubsuperscriptBox["\[Omega]", "m", "2"]}], "-", 
          RowBox[{"4", " ", "G", " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]], 
      FractionBox[
       RowBox[{
        RowBox[{
         SubscriptBox["\[Omega]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Kappa]"}], "+", 
           RowBox[{"2", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Kappa]", "ex"]}], "+", 
           RowBox[{"4", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[Kappa]", "2"], "-", 
           RowBox[{"12", " ", "\[ImaginaryI]", " ", "\[Kappa]", " ", 
            SubscriptBox["\[Omega]", "m"]}], "-", 
           RowBox[{"32", " ", 
            SubsuperscriptBox["\[Omega]", "m", "2"]}]}], ")"}]}], "+", 
        RowBox[{"G", " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[Kappa]", "2"], "-", 
           RowBox[{"\[Kappa]", " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["\[Kappa]", "ex"], "+", 
              RowBox[{"4", " ", "\[ImaginaryI]", " ", 
               SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
           RowBox[{"16", " ", 
            SubsuperscriptBox["\[Omega]", "m", "2"]}]}], ")"}], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}], 
       RowBox[{
        SubscriptBox["\[Omega]", "m"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", "\[Kappa]"}], "+", 
          RowBox[{"4", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["\[Kappa]", "2"]}], "+", 
          RowBox[{"12", " ", "\[ImaginaryI]", " ", "\[Kappa]", " ", 
           SubscriptBox["\[Omega]", "m"]}], "+", 
          RowBox[{"32", " ", 
           SubsuperscriptBox["\[Omega]", "m", "2"]}], "+", 
          RowBox[{"4", " ", "G", " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]], 
      FractionBox[
       RowBox[{"G", " ", 
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", "\[Kappa]"}], "+", 
          RowBox[{"8", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        RowBox[{"Conjugate", "[", "G", "]"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Kappa]", "-", 
          RowBox[{"4", " ", "\[ImaginaryI]", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        SubscriptBox["\[Omega]", "m"], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["\[Kappa]", "2"], "-", 
          RowBox[{"12", " ", "\[ImaginaryI]", " ", "\[Kappa]", " ", 
           SubscriptBox["\[Omega]", "m"]}], "-", 
          RowBox[{"32", " ", 
           SubsuperscriptBox["\[Omega]", "m", "2"]}], "-", 
          RowBox[{"4", " ", "G", " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]], 
      FractionBox[
       RowBox[{"G", " ", 
        RowBox[{"(", 
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", "\[Kappa]"}], "+", 
          RowBox[{"8", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        RowBox[{"Conjugate", "[", "G", "]"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Kappa]", "-", 
          RowBox[{"4", " ", "\[ImaginaryI]", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        SubscriptBox["\[Omega]", "m"], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["\[Kappa]", "2"], "-", 
          RowBox[{"12", " ", "\[ImaginaryI]", " ", "\[Kappa]", " ", 
           SubscriptBox["\[Omega]", "m"]}], "-", 
          RowBox[{"32", " ", 
           SubsuperscriptBox["\[Omega]", "m", "2"]}], "-", 
          RowBox[{"4", " ", "G", " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]], "0", "0"},
     {"0", "0", "0", "0", 
      FractionBox[
       RowBox[{"G", " ", 
        SubscriptBox["\[Kappa]", "ex"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", "\[Kappa]"}], "+", 
          RowBox[{"8", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        RowBox[{"Conjugate", "[", "G", "]"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Kappa]", "-", 
          RowBox[{"4", " ", "\[ImaginaryI]", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        SubscriptBox["\[Omega]", "m"], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["\[Kappa]", "2"], "-", 
          RowBox[{"12", " ", "\[ImaginaryI]", " ", "\[Kappa]", " ", 
           SubscriptBox["\[Omega]", "m"]}], "-", 
          RowBox[{"32", " ", 
           SubsuperscriptBox["\[Omega]", "m", "2"]}], "-", 
          RowBox[{"4", " ", "G", " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]], 
      FractionBox[
       RowBox[{"G", " ", 
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", "\[Kappa]"}], "+", 
          RowBox[{"8", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        RowBox[{"Conjugate", "[", "G", "]"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Kappa]", "-", 
          RowBox[{"4", " ", "\[ImaginaryI]", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        SubscriptBox["\[Omega]", "m"], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["\[Kappa]", "2"], "-", 
          RowBox[{"12", " ", "\[ImaginaryI]", " ", "\[Kappa]", " ", 
           SubscriptBox["\[Omega]", "m"]}], "-", 
          RowBox[{"32", " ", 
           SubsuperscriptBox["\[Omega]", "m", "2"]}], "-", 
          RowBox[{"4", " ", "G", " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]], 
      FractionBox[
       RowBox[{
        RowBox[{
         SubscriptBox["\[Omega]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[ImaginaryI]", " ", "\[Kappa]"}], "-", 
           RowBox[{"2", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Kappa]", "ex"]}], "+", 
           RowBox[{"4", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[Kappa]", "2"], "-", 
           RowBox[{"12", " ", "\[ImaginaryI]", " ", "\[Kappa]", " ", 
            SubscriptBox["\[Omega]", "m"]}], "-", 
           RowBox[{"32", " ", 
            SubsuperscriptBox["\[Omega]", "m", "2"]}]}], ")"}]}], "+", 
        RowBox[{"G", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Kappa]", " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["\[Kappa]", "ex"], "-", 
              RowBox[{"4", " ", "\[ImaginaryI]", " ", 
               SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
           RowBox[{"16", " ", 
            SubsuperscriptBox["\[Omega]", "m", "2"]}]}], ")"}], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}], 
       RowBox[{
        SubscriptBox["\[Omega]", "m"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", "\[Kappa]"}], "+", 
          RowBox[{"4", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["\[Kappa]", "2"]}], "+", 
          RowBox[{"12", " ", "\[ImaginaryI]", " ", "\[Kappa]", " ", 
           SubscriptBox["\[Omega]", "m"]}], "+", 
          RowBox[{"32", " ", 
           SubsuperscriptBox["\[Omega]", "m", "2"]}], "+", 
          RowBox[{"4", " ", "G", " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]], 
      FractionBox[
       RowBox[{
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", 
           SubscriptBox["\[Omega]", "m"], " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[Kappa]", "2"], "-", 
             RowBox[{"12", " ", "\[ImaginaryI]", " ", "\[Kappa]", " ", 
              SubscriptBox["\[Omega]", "m"]}], "-", 
             RowBox[{"32", " ", 
              SubsuperscriptBox["\[Omega]", "m", "2"]}]}], ")"}]}], "+", 
          RowBox[{"\[ImaginaryI]", " ", "G", " ", "\[Kappa]", " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Kappa]", "-", 
          RowBox[{"4", " ", "\[ImaginaryI]", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        SubscriptBox["\[Omega]", "m"], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["\[Kappa]", "2"], "-", 
          RowBox[{"12", " ", "\[ImaginaryI]", " ", "\[Kappa]", " ", 
           SubscriptBox["\[Omega]", "m"]}], "-", 
          RowBox[{"32", " ", 
           SubsuperscriptBox["\[Omega]", "m", "2"]}], "-", 
          RowBox[{"4", " ", "G", " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]], "0", "0"},
     {"0", "0", "0", "0", 
      FractionBox[
       RowBox[{"G", " ", 
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", "\[Kappa]"}], "+", 
          RowBox[{"8", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        RowBox[{"Conjugate", "[", "G", "]"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Kappa]", "-", 
          RowBox[{"4", " ", "\[ImaginaryI]", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        SubscriptBox["\[Omega]", "m"], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["\[Kappa]", "2"], "-", 
          RowBox[{"12", " ", "\[ImaginaryI]", " ", "\[Kappa]", " ", 
           SubscriptBox["\[Omega]", "m"]}], "-", 
          RowBox[{"32", " ", 
           SubsuperscriptBox["\[Omega]", "m", "2"]}], "-", 
          RowBox[{"4", " ", "G", " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]], 
      FractionBox[
       RowBox[{"G", " ", 
        RowBox[{"(", 
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", "\[Kappa]"}], "+", 
          RowBox[{"8", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        RowBox[{"Conjugate", "[", "G", "]"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Kappa]", "-", 
          RowBox[{"4", " ", "\[ImaginaryI]", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        SubscriptBox["\[Omega]", "m"], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["\[Kappa]", "2"], "-", 
          RowBox[{"12", " ", "\[ImaginaryI]", " ", "\[Kappa]", " ", 
           SubscriptBox["\[Omega]", "m"]}], "-", 
          RowBox[{"32", " ", 
           SubsuperscriptBox["\[Omega]", "m", "2"]}], "-", 
          RowBox[{"4", " ", "G", " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]], 
      FractionBox[
       RowBox[{
        SqrtBox[
         RowBox[{"\[Kappa]", "-", 
          SubscriptBox["\[Kappa]", "ex"]}]], " ", 
        SqrtBox[
         SubscriptBox["\[Kappa]", "ex"]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", 
           SubscriptBox["\[Omega]", "m"], " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[Kappa]", "2"], "-", 
             RowBox[{"12", " ", "\[ImaginaryI]", " ", "\[Kappa]", " ", 
              SubscriptBox["\[Omega]", "m"]}], "-", 
             RowBox[{"32", " ", 
              SubsuperscriptBox["\[Omega]", "m", "2"]}]}], ")"}]}], "+", 
          RowBox[{"\[ImaginaryI]", " ", "G", " ", "\[Kappa]", " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Kappa]", "-", 
          RowBox[{"4", " ", "\[ImaginaryI]", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        SubscriptBox["\[Omega]", "m"], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["\[Kappa]", "2"], "-", 
          RowBox[{"12", " ", "\[ImaginaryI]", " ", "\[Kappa]", " ", 
           SubscriptBox["\[Omega]", "m"]}], "-", 
          RowBox[{"32", " ", 
           SubsuperscriptBox["\[Omega]", "m", "2"]}], "-", 
          RowBox[{"4", " ", "G", " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]], 
      FractionBox[
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"\[Kappa]", "-", 
           RowBox[{"2", " ", 
            SubscriptBox["\[Kappa]", "ex"]}], "+", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", 
            SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
         SubscriptBox["\[Omega]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[Kappa]", "2"], "-", 
           RowBox[{"12", " ", "\[ImaginaryI]", " ", "\[Kappa]", " ", 
            SubscriptBox["\[Omega]", "m"]}], "-", 
           RowBox[{"32", " ", 
            SubsuperscriptBox["\[Omega]", "m", "2"]}]}], ")"}]}], "+", 
        RowBox[{"\[ImaginaryI]", " ", "G", " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[Kappa]", "2"], "-", 
           RowBox[{"\[Kappa]", " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["\[Kappa]", "ex"], "+", 
              RowBox[{"4", " ", "\[ImaginaryI]", " ", 
               SubscriptBox["\[Omega]", "m"]}]}], ")"}]}], "-", 
           RowBox[{"16", " ", 
            SubsuperscriptBox["\[Omega]", "m", "2"]}]}], ")"}], " ", 
         RowBox[{"Conjugate", "[", "G", "]"}]}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Kappa]", "-", 
          RowBox[{"4", " ", "\[ImaginaryI]", " ", 
           SubscriptBox["\[Omega]", "m"]}]}], ")"}], " ", 
        SubscriptBox["\[Omega]", "m"], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["\[Kappa]", "2"], "-", 
          RowBox[{"12", " ", "\[ImaginaryI]", " ", "\[Kappa]", " ", 
           SubscriptBox["\[Omega]", "m"]}], "-", 
          RowBox[{"32", " ", 
           SubsuperscriptBox["\[Omega]", "m", "2"]}], "-", 
          RowBox[{"4", " ", "G", " ", 
           RowBox[{"Conjugate", "[", "G", "]"}]}]}], ")"}]}]], "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", 
      RowBox[{"-", "1"}], "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", 
      RowBox[{"-", "1"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.8607019980894375`*^9, 3.8607020123313675`*^9}, 
   3.8674556399663095`*^9, 3.8696153024724417`*^9},
 Background->RGBColor[0.88, 1, 0.88],
 CellLabel->
  "Out[44]//MatrixForm=",ExpressionUUID->"52731fc8-2797-49e5-93a2-\
c7f143bc32b0"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Solve the transfer matrices under assumptions", "Subsection",
 CellChangeTimes->{{3.8613154710779467`*^9, 3.8613154766225543`*^9}, {
  3.8613162798254943`*^9, 3.8613162831312294`*^9}, {3.8619978053275404`*^9, 
  3.8619978082465515`*^9}},ExpressionUUID->"773d5a98-dece-40af-8a38-\
83c80fcb81b0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Define", " ", "the", " ", "numerical", " ", "values", " ", "to", " ", 
    "be", " ", "used"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"SymNValues", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Kappa]", "->", 
        RowBox[{"2.5", "*", "2", "*", "\[Pi]"}]}], ",", 
       RowBox[{
        SubscriptBox["\[Kappa]", "ex"], "->", 
        RowBox[{"2.5", "*", "2", "*", "\[Pi]"}]}], ",", 
       RowBox[{"g", "->", 
        RowBox[{"3.8", "*", "2", "*", "\[Pi]", "*", 
         SuperscriptBox["10", 
          RowBox[{"-", "6"}]]}]}], ",", 
       RowBox[{
        SubscriptBox["\[Omega]", "m"], "->", 
        RowBox[{"1.4732", "*", "2", "*", "\[Pi]"}]}], ",", 
       RowBox[{"\[CapitalOmega]", "->", 
        RowBox[{"2", "*", "\[Pi]", "*", "500"}]}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Functions", " ", "to", " ", "calculate", " ", "transfer", " ", 
     "matrices", " ", "with", " ", "constant", " ", "drive"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"TConO", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"TCon", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "All"}], "]"}], "]"}], "/.", "SymmetricValues"}], "//",
       "Simplify"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"TConOSymN", "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"TConO", "/.", "SteadyGConstSym"}], "/.", "SymNValues"}], ",", 
       RowBox[{"Assumptions", "->", "AssumptionRealValues"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"SConSym", "[", "km_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"TO", ",", "eta", ",", "S"}], "}"}], ",", 
       RowBox[{
        RowBox[{"TO", "=", 
         RowBox[{
          RowBox[{"Abs", "[", 
           RowBox[{"TConOSymN", "/.", 
            RowBox[{"{", 
             RowBox[{
              SubscriptBox["\[Kappa]", "m"], "->", "km"}], "}"}]}], "]"}], 
          "^", "2"}]}], ";", 
        RowBox[{"eta", "=", 
         RowBox[{"TO", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], ";", 
        RowBox[{
         RowBox[{"SSum", "[", "TO", "]"}], "/", "eta"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"etaConSym", "[", "km_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "TO", "}"}], ",", 
       RowBox[{
        RowBox[{"TO", "=", 
         RowBox[{"Abs", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"TConOSymN", "[", 
             RowBox[{"[", "3", "]"}], "]"}], ")"}], "/.", 
           RowBox[{"{", 
            RowBox[{
             SubscriptBox["\[Kappa]", "m"], "->", "km"}], "}"}]}], "]"}]}], 
        ";", "TO"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SConSymB", "[", "km_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"eta", ",", "R"}], "}"}], ",", 
      RowBox[{
       RowBox[{"eta", "=", 
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"TConOSymN", "[", 
             RowBox[{"[", "3", "]"}], "]"}], ")"}], "/.", 
           RowBox[{"{", 
            RowBox[{
             SubscriptBox["\[Kappa]", "m"], "->", "km"}], "}"}]}], "]"}], "^",
          "2"}]}], ";", 
       RowBox[{"R", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"Abs", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"TConOSymN", "[", 
              RowBox[{"[", "7", "]"}], "]"}], ")"}], "/.", 
            RowBox[{"{", 
             RowBox[{
              SubscriptBox["\[Kappa]", "m"], "->", "km"}], "}"}]}], "]"}], 
          "^", "2"}], "/", "eta"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Abs", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", "eta"}], ")"}], "/", "2"}], "/", "eta"}], "+", 
          RowBox[{"R", "/", "2"}]}], "]"}], "+", 
        RowBox[{"3", "*", 
         RowBox[{"R", "/", "2"}]}]}]}]}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "Functions", " ", "to", " ", "calculate", " ", "the", " ", "transfer", 
      " ", "matrices", " ", "with", " ", "parametric", " ", "drive", " ", 
      "with", " ", "N"}], " ", "=", " ", "1"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"TOscO", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"TOsc", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "All"}], "]"}], "]"}], "/.", "SymmetricValues"}], "//",
       "Simplify"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"TOscOSymN", "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"TOscO", "/.", "SteadyGOscSym"}], "/.", "SymNValues"}], ",", 
       RowBox[{"Assumptions", "->", "AssumptionRealValues"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"TOscmSymN", "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"TOscm", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "All"}], "]"}], "]"}], "/.", 
          "SymmetricValues"}], "/.", "SteadyGOscSym"}], "/.", "SymNValues"}], 
       ",", 
       RowBox[{"Assumptions", "->", "AssumptionRealValues"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"SOscSym", "[", "km_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"TO", ",", "TM", ",", "eta", ",", "S"}], "}"}], ",", 
       RowBox[{
        RowBox[{"TO", "=", 
         RowBox[{
          RowBox[{"Abs", "[", 
           RowBox[{"TOscOSymN", "/.", 
            RowBox[{"{", 
             RowBox[{
              SubscriptBox["\[Kappa]", "m"], "->", "km"}], "}"}]}], "]"}], 
          "^", "2"}]}], ";", 
        RowBox[{"TM", "=", 
         RowBox[{
          RowBox[{"Abs", "[", 
           RowBox[{
            RowBox[{"TOscmSymN", "[", 
             RowBox[{"[", "10", "]"}], "]"}], "/.", 
            RowBox[{"{", 
             RowBox[{
              SubscriptBox["\[Kappa]", "m"], "->", "km"}], "}"}]}], "]"}], 
          "^", "2"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"eta", "=", 
         RowBox[{"TO", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], ";", 
        RowBox[{"S", "=", 
         RowBox[{
          RowBox[{"SSum", "[", "TO", "]"}], "+", 
          RowBox[{"TM", "/", "2"}]}]}], ";", 
        RowBox[{"S", "/", "eta"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"etaOscSym", "[", "km_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "TO", "}"}], ",", 
       RowBox[{
        RowBox[{"TO", "=", 
         RowBox[{"Abs", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"TOscOSymN", "[", 
             RowBox[{"[", "3", "]"}], "]"}], ")"}], "/.", 
           RowBox[{"{", 
            RowBox[{
             SubscriptBox["\[Kappa]", "m"], "->", "km"}], "}"}]}], "]"}]}], 
        ";", "TO"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"SOscBound", "[", "km_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "eta", "}"}], ",", 
       RowBox[{
        RowBox[{"eta", "=", 
         RowBox[{"etaOscSym", "[", "km", "]"}]}], ";", 
        RowBox[{"Abs", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"eta", "^", "2"}]}], ")"}], "/", "2"}], "/", 
          RowBox[{"eta", "^", "2"}]}], "]"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "Functions", " ", "to", " ", "calculate", " ", "the", " ", "transfer", 
      " ", "matrices", " ", "with", " ", "parametric", " ", "drive", " ", 
      "with", " ", "N"}], " ", "=", " ", "2"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"TOsc2O", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"TOsc2", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "All"}], "]"}], "]"}], "/.", "SymmetricValues"}], "//",
       "Simplify"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"TOsc2OSymN", "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"TOsc2O", "/.", "SteadyGOscSym"}], "/.", "SymNValues"}], ",", 
       RowBox[{"Assumptions", "->", "AssumptionRealValues"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"TOsc2mSymN", "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"TOsc2m", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "All"}], "]"}], "]"}], "/.", 
          "SymmetricValues"}], "/.", "SteadyGOscSym"}], "/.", "SymNValues"}], 
       ",", 
       RowBox[{"Assumptions", "->", "AssumptionRealValues"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"TOsc4mSymN", "=", 
     RowBox[{
      RowBox[{"Simplify", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"TOsc4m", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "All"}], "]"}], "]"}], "/.", 
          "SymmetricValues"}], "/.", "SteadyGOscSym"}], ",", 
        RowBox[{"Assumptions", "->", "AssumptionRealValues"}]}], "]"}], "/.", 
      "SymNValues"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"SOsc2Sym", "[", "km_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"TO", ",", "TM", ",", "T4", ",", "eta", ",", "S"}], "}"}], 
       ",", 
       RowBox[{
        RowBox[{"TO", "=", 
         RowBox[{
          RowBox[{"Abs", "[", 
           RowBox[{"TOsc2OSymN", "/.", 
            RowBox[{"{", 
             RowBox[{
              SubscriptBox["\[Kappa]", "m"], "->", "km"}], "}"}]}], "]"}], 
          "^", "2"}]}], ";", 
        RowBox[{"TM", "=", 
         RowBox[{
          RowBox[{"Abs", "[", 
           RowBox[{
            RowBox[{"TOsc2mSymN", "[", 
             RowBox[{"[", "10", "]"}], "]"}], "/.", 
            RowBox[{"{", 
             RowBox[{
              SubscriptBox["\[Kappa]", "m"], "->", "km"}], "}"}]}], "]"}], 
          "^", "2"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"T4", "=", 
         RowBox[{
          RowBox[{"Abs", "[", 
           RowBox[{"TOsc4mSymN", "/.", 
            RowBox[{"{", 
             RowBox[{
              SubscriptBox["\[Kappa]", "m"], "->", "km"}], "}"}]}], "]"}], 
          "^", "2"}]}], ";", 
        RowBox[{"eta", "=", 
         RowBox[{"TO", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], ";", 
        RowBox[{"S", "=", 
         RowBox[{
          RowBox[{"SSum", "[", "TO", "]"}], "+", 
          RowBox[{"TM", "/", "2"}], "+", 
          RowBox[{
           RowBox[{"Total", "[", "T4", "]"}], "/", "2"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"S", "/", "eta"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"etaOsc2Sym", "[", "km_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "TO", "}"}], ",", 
       RowBox[{
        RowBox[{"TO", "=", 
         RowBox[{"Abs", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"TOsc2OSymN", "[", 
             RowBox[{"[", "3", "]"}], "]"}], ")"}], "/.", 
           RowBox[{"{", 
            RowBox[{
             SubscriptBox["\[Kappa]", "m"], "->", "km"}], "}"}]}], "]"}]}], 
        ";", "TO"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"SOsc2Bound", "[", "km_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "eta", "}"}], ",", 
       RowBox[{
        RowBox[{"eta", "=", 
         RowBox[{"etaOsc2Sym", "[", "km", "]"}]}], ";", 
        RowBox[{"Abs", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"eta", "^", "2"}]}], ")"}], "/", "2"}], "/", 
          RowBox[{"eta", "^", "2"}]}], "]"}]}]}], "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.8696185520489883`*^9, 3.86961855230224*^9}, {
   3.869618610366491*^9, 3.869618610855401*^9}, 3.869618672756592*^9, 
   3.8696190282201843`*^9, {3.869619061420043*^9, 3.869619061749749*^9}, {
   3.8696191687143307`*^9, 3.869619211455407*^9}, 3.8696951603256674`*^9, {
   3.869762927136327*^9, 3.869762939252824*^9}, {3.8697630415115056`*^9, 
   3.8697631183313017`*^9}},
 CellLabel->"In[95]:=",ExpressionUUID->"aa2bbff3-efc4-492f-a52c-fc65a479a95a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plot the results", "Subsection",
 CellChangeTimes->{{3.8613162643586226`*^9, 
  3.8613162974053802`*^9}},ExpressionUUID->"1a712c8f-eb7c-4f6a-910b-\
c7824cf64cce"],

Cell[CellGroupData[{

Cell["Solve for the crossing points", "Subsubsection",
 CellChangeTimes->{{3.86199786587042*^9, 
  3.8619978837994213`*^9}},ExpressionUUID->"25e80e41-cf97-4092-9e48-\
5c21c040e9b9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SCR", "=", 
   RowBox[{"x", "/.", 
    RowBox[{"FindRoot", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"SConSym", "[", "x", "]"}], "-", "0.5"}], "==", "0"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        SuperscriptBox["10", 
         RowBox[{"-", "5"}]]}], "}"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SOR", "=", 
   RowBox[{"x", "/.", 
    RowBox[{"FindRoot", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"SOscSym", "[", "x", "]"}], "-", "0.5"}], "==", "0"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        SuperscriptBox["10", 
         RowBox[{"-", "5"}]]}], "}"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SOR2", "=", 
   RowBox[{"x", "/.", 
    RowBox[{"FindRoot", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"SOsc2Sym", "[", "x", "]"}], "-", "0.5"}], "==", "0"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        SuperscriptBox["10", 
         RowBox[{"-", "5"}]]}], "}"}]}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8607138958201733`*^9, 3.8607139005936995`*^9}, {
  3.860717608471777*^9, 3.8607176308313656`*^9}, {3.860717669103407*^9, 
  3.8607176714850364`*^9}, {3.8607177271515427`*^9, 3.860717764329389*^9}, {
  3.8607191173135295`*^9, 3.8607191654072337`*^9}, {3.861809231134235*^9, 
  3.8618092371582537`*^9}},
 CellLabel->
  "In[118]:=",ExpressionUUID->"a36e42c6-f9d7-48c5-a06d-f92646410295"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plotting  the results (figure 2)", "Subsubsection",
 CellChangeTimes->{{3.870283981889785*^9, 3.8702839925069523`*^9}, {
  3.87028409711975*^9, 
  3.870284106057417*^9}},ExpressionUUID->"43cb6eeb-238a-4a01-91ab-\
919d64cfe1bc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Plotting", " ", "the", " ", "upper", " ", "panel"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"upperl", "=", "3"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"lowerl", "=", "0.4"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"SCR", ",", "lowerl"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"SCR", ",", "upperl"}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"SOR", ",", "lowerl"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"SOR", ",", "upperl"}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"SOR2", ",", "lowerl"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"SOR2", ",", "upperl"}], "}"}]}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p2t", "=", 
     RowBox[{"ListLogLinearPlot", "[", 
      RowBox[{"p", ",", 
       RowBox[{"Joined", "->", "True"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "Dashed", "}"}], ",", 
          RowBox[{"{", "Dashed", "}"}], ",", 
          RowBox[{"{", "Dashed", "}"}]}], "}"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p1t", "=", 
     RowBox[{"LogLinearPlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"etaConSym", "[", "x", "]"}], ",", 
         RowBox[{"etaOscSym", "[", "x", "]"}], ",", 
         RowBox[{"etaOsc2Sym", "[", "x", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", 
         RowBox[{"3", "*", 
          SuperscriptBox["10", 
           RowBox[{"-", "5"}]]}]}], "}"}], ",", 
       RowBox[{"Ticks", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"None", ",", "Automatic"}], "}"}]}], ",", 
       RowBox[{"BaseStyle", "->", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"FontFamily", "->", "\"\<Times New Roman\>\""}], ",", 
          "16"}], "}"}]}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Automatic", ",", 
          RowBox[{"{", 
           RowBox[{"lowerl", ",", "upperl"}], "}"}]}], "}"}]}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pU", "=", 
     RowBox[{"Show", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"p1t", ",", "p2t"}], "}"}], ",", 
       RowBox[{"ImagePadding", "->", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"60", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "6"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"ImageSize", "->", "400"}], ",", 
       RowBox[{"AspectRatio", "->", 
        RowBox[{"0.618", "/", "1.5"}]}], ",", 
       RowBox[{"Frame", "->", "True"}], ",", 
       RowBox[{"FrameLabel", "->", 
        RowBox[{"{", 
         RowBox[{"Null", ",", 
          RowBox[{"Row", "[", 
           RowBox[{"{", 
            RowBox[{"\"\<\[Eta](\>\"", ",", 
             RowBox[{"Subscript", "[", 
              RowBox[{"\[Omega]", ",", "\"\<m\>\""}], "]"}], ",", 
             "\"\<)\>\""}], "}"}], "]"}]}], "}"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Plotting", " ", "the", " ", "lower", " ", "panel"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"upperl", "=", "3"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"lowerl", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p2", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"SCR", ",", "lowerl"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"SCR", ",", "upperl"}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"SOR", ",", "lowerl"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"SOR", ",", "upperl"}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"SOR2", ",", "lowerl"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"SOR2", ",", "upperl"}], "}"}]}], "}"}]}], "}"}]}], ";"}], 
   "\n", 
   RowBox[{
    RowBox[{"pd2", "=", 
     RowBox[{"ListLogLinearPlot", "[", 
      RowBox[{"p2", ",", 
       RowBox[{"Joined", "->", "True"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "Dashed", "}"}], ",", 
          RowBox[{"{", "Dashed", "}"}], ",", 
          RowBox[{"{", "Dashed", "}"}]}], "}"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pD1", "=", 
     RowBox[{"LogLinearPlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"SConSym", "[", "x", "]"}], ",", 
         RowBox[{"SOscSym", "[", "x", "]"}], ",", 
         RowBox[{"SOsc2Sym", "[", "x", "]"}], ",", 
         RowBox[{"SOscBound", "[", "x", "]"}], ",", 
         RowBox[{"SOsc2Bound", "[", "x", "]"}], ",", 
         RowBox[{"SConSymB", "[", "x", "]"}], ",", "0.5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", 
         RowBox[{"3", "*", 
          SuperscriptBox["10", 
           RowBox[{"-", "5"}]]}]}], "}"}], ",", 
       RowBox[{"FrameTicks", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"N", "[", 
               SuperscriptBox["10", 
                RowBox[{"-", "7"}]], "]"}], ",", "0.1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"N", "[", 
               SuperscriptBox["10", 
                RowBox[{"-", "6"}]], "]"}], ",", "1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"N", "[", 
               SuperscriptBox["10", 
                RowBox[{"-", "5"}]], "]"}], ",", "10"}], "}"}]}], "}"}], ",", 
          "Automatic"}], "}"}]}], ",", 
       RowBox[{"BaseStyle", "->", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"FontFamily", "->", "\"\<Times New Roman\>\""}], ",", 
          "16"}], "}"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Automatic", ",", "Automatic", ",", "Automatic", ",", 
          RowBox[{"{", 
           RowBox[{"DotDashed", ",", "Thick", ",", "DefaultOrange"}], "}"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"DotDashed", ",", "Thick", ",", "DefaultGreen"}], "}"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"DotDashed", ",", "Thick", ",", "DefaultBlue"}], "}"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"Dashed", ",", "Black"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"ImagePadding", "->", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"60", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"45", ",", "2"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"ImageSize", "->", "400"}], ",", 
       RowBox[{"AspectRatio", "->", 
        RowBox[{"0.618", "/", "1.5"}]}], ",", 
       RowBox[{"Frame", "->", "True"}], ",", 
       RowBox[{"FrameLabel", "->", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Row", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Subscript", "[", 
              RowBox[{"\"\<\[Kappa]\>\"", ",", "\"\<m\>\""}], "]"}], ",", 
             " ", "\"\< (Hz)\>\""}], "}"}], "]"}], ",", 
          RowBox[{"Row", "[", 
           RowBox[{"{", 
            RowBox[{"S", ",", "\"\<(\>\"", ",", 
             RowBox[{"Subscript", "[", 
              RowBox[{"\[Omega]", ",", "\"\<m\>\""}], "]"}], ",", 
             "\"\<)\>\""}], "}"}], "]"}]}], "}"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pD", "=", 
     RowBox[{"Show", "[", 
      RowBox[{"{", 
       RowBox[{"pD1", ",", "pd2"}], "}"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Combining", " ", "figures", " ", "together"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Fig1", "=", 
     RowBox[{"Multicolumn", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"pU", ",", "pD"}], "}"}], ",", "1", ",", 
       RowBox[{"Spacings", "->", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Fig1P", "=", 
     RowBox[{"Legended", "[", 
      RowBox[{"Fig1", ",", 
       RowBox[{"Placed", "[", 
        RowBox[{
         RowBox[{"LineLegend", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "DefaultBlue", ",", "DefaultOrange", ",", "DefaultGreen", ",", 
             RowBox[{"{", 
              RowBox[{"DefaultBlue", ",", "DotDashed"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"DefaultOrange", ",", "DotDashed"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"DefaultGreen", ",", "DotDashed"}], "}"}]}], "}"}], ",",
            " ", 
           RowBox[{
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{"#", ",", 
               RowBox[{
               "FontFamily", " ", "->", " ", "\"\<Times New Roman\>\""}], ",",
                " ", "14"}], "]"}], "&"}], "/@", 
            RowBox[{"{", 
             RowBox[{
             "\"\<Constant\>\"", ",", "\"\<PD, N=1\>\"", ",", 
              "\"\<PD, N=2\>\"", ",", "\"\<Constant LB\>\"", ",", 
              "\"\<PD, N=1, LB\>\"", ",", "\"\<PD, N=2, LB\>\"", ",", 
              RowBox[{"Row", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Style", "[", 
                  RowBox[{"\"\<S\>\"", ",", "Italic"}], "]"}], ",", 
                 "\"\<(\>\"", ",", " ", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\"\<\[Omega]\>\"", ",", "\"\<m\>\""}], "]"}], ",", 
                 " ", "\"\<)=0.5\>\""}], "}"}], "]"}]}], "\n", "            ",
              "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"\<Row\>\""}]}], "]"}], ",", 
         " ", "Top"}], "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Fig1P", "=", 
    RowBox[{"Legended", "[", 
     RowBox[{"Fig1P", ",", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"LineLegend", "[", 
         RowBox[{
          RowBox[{"{", "Transparent", "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"Row", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Style", "[", 
                 RowBox[{"S", ",", "Italic"}], "]"}], ",", "\"\<(\>\"", ",", 
                " ", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\"\<\[Omega]\>\"", ",", "\"\<m\>\""}], "]"}], ",", 
                " ", "\"\<)=0.5\>\""}], "}"}], "]"}], ",", "\n", 
             "             ", 
             RowBox[{
             "FontFamily", " ", "->", " ", "\"\<Times New Roman\>\""}], ",", 
             " ", "14"}], "]"}], "}"}]}], "]"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"0.12", ",", "0.35"}], "}"}]}], "]"}]}], 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.8618060466641893`*^9, 3.861806099225977*^9}, {
  3.8618061772262397`*^9, 3.86180617766374*^9}, {3.8697040983243895`*^9, 
  3.8697041095696907`*^9}, {3.869704146172662*^9, 3.8697041463908987`*^9}, {
  3.869704232669941*^9, 3.8697042332421107`*^9}, {3.870284046203912*^9, 
  3.8702840465762987`*^9}, {3.870284094498961*^9, 3.87028415710921*^9}},
 CellLabel->
  "In[146]:=",ExpressionUUID->"0b9f5ed8-c04c-46c3-bf02-0f18c22b7185"],

Cell[BoxData[
 TemplateBox[{
   TemplateBox[{
     TagBox[
      GridBox[{{
         GraphicsBox[{{{{{}, {}, 
              TagBox[{
                Directive[
                 Opacity[1.], 
                 RGBColor[0.368417, 0.506779, 0.709798], 
                 AbsoluteThickness[1.6]], 
                LineBox[CompressedData["
1:eJwV0GtUzAkYBvDoIktFKVNzdP1PU3Mf2xiro1eScghJNeSeRLuzky1mq82R
g2VJrJG269bU1u6QimglveY0IxHtUNZcpJIuo2b+nZVclp398J7n/M7zfHp9
dkk2JE23srKKstz/eZ3+ZvMxER9tqL9TLm0mgfOXzv59PB8jGKHpNRZXZyqv
f2txTNXzzkqLCzrznEVxFstoWSUWZ6YxOhgb+ZjLUrWcsRhat3/VtY6P1+aI
+lMtbo/rmE+N4KNo2rzyLy3WHSt7Uifg48VM38aGTST4XVStHnfio95OE5ol
ImFeZ5Xo0mseqmkOrqx4EtjxzDRqBw/ln8MarsaSsE/GOlVcyUNea9EbQwwJ
ayeHFpfm8PCsolc0GE1C3Cyvl/UJPFRW3FgpWUfC8fQPxQcX8VAS7FQvX0PC
9uk/G5tdeJi29WZG5SoSrh+PlPjrubjrdvvuoXASpm3oW9hzgYuP17V4DoSS
UKhqmzu8nosOizvW7lpKQkZZmXGBHReTuh4+VQlJUCjHzRuRgw/bZvgp+SQQ
awTklXQOhkxek4UxSDBmq2eLGRy0l1/JUPuQYPvufgxzkI3qXNPlqxQS9mjb
LzgUsnGt73lNigMJHrZLrMkYNtbzKZT4aZZ/5Fd8PTWDjUJOV/3GCTNseRRr
2tnCwqDGu8t39JnhbXR26QMpC3MUpwaiHpnh2ZLiyAQWC29EOpYbm8zgKOZ6
GgeZ2BUx0+hUboZzEQ5Ohl+ZKD9wt/n0cTMknOh/PxHLxJCihdmGJDNInVnO
X8xhounkrHEIM4N2upgIb2PgqhLNvT8pZjhVNBXdn8HAhfPd9l/TmCAve+qP
w0EMbKxk2oPEBFqV6dPykUDc272C5Tc5Dt/HJxyykwfizBX3Q2XScdh9bq47
a1sgZn0KSR0cG4N8fmvtAZdATCM4stDIMaBS+yTYGYB1I6P2ipLXMJTynsk9
EoCahsDGXI0R7GxOuJQFB2CRVJoutjZCWvgOt/2TdHwpUzSN00eBPsadl6yg
Y5AwI/gBfQTYz9OWbkuio5osFp0OGIZMwZWdGe509A5K2F1jPQSuAkH55EN/
DAyrGjvXPQjWh7izD5z0x3seTYmf6l7CYrbPd/ND/PG8UqTRpwwA0n60bn5L
wy0qwQobQT/kq4V12EDDZW5Zl4XWfdDQ2Rs/mkxDysWKRez9veDj+ZHh6ktD
afJPXeVzDLBmW9cmg7el90qO9rYzwMHSyhNVXjTsfRH9uuyDHjo8o14JFtCQ
dDVIK17pId2rtDyOQsNCVYpH4y09tHsvoxQ40rBlJIfrvE8PqX5HbakfCJTH
VWc2KXVQmCgKGnhH4JPm4cdbm3SgkrMSFVME9tj8nWNTqwMPohuDJwn82PG4
P/YXHbQR/j9sIQk8M5E3ap+qA4p/+0TJkGW/SlhQv0AHy/cU++x5RaB3xmFH
sYsOxL+lrucMEri6J+pN4EwdKP3da2/3E5h7K5xa848WvqGn7Os1EBhu6zvV
eF8L+ckhBdV6AiWmWb7Zd7Rwp9r5rkRH4E27z/fCb2jBLaCZsHpGoNXO2kJd
hRaW7c2LaX9K4L+1t9U1BVpIqUk8craHwMiQw1LpGS3IhoX1om4CzZGFtRFH
tdAaMPuF9xMCV440iN0ztfAfBo9hSg==
                 "]]}, Annotation[#, "Charting`Private`Tag$76256#1"]& ], 
              TagBox[{
                Directive[
                 Opacity[1.], 
                 RGBColor[0.880722, 0.611041, 0.142051], 
                 AbsoluteThickness[1.6]], 
                LineBox[CompressedData["
1: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
JFDm/zGF/i+DXXx+
                 "]], 
                LineBox[CompressedData["
1:eJwBoQFe/iFib1JlAgAAABkAAAACAAAAEH7OotceJcAAAAAAAAAIQMoeTeY1
HSXAok3SqR6yB0B0H56hVhglwLPj41C21AZAyCBAGJgOJcAjyrc/wkEFQPJg
FEdgDSXA+c0+e8QSBUAdoeh1KAwlwAYmyMZ45ARAciGR07gJJcDaJKwZ6IkE
QBwi4o7ZBCXA6upslnvcA0BwI4QFG/skwDd8CbCWnQJAmmNYNOP5JMAvF71N
H3gCQMWjLGOr+CTAz6wjPidTAkAaJNXAO/YkwN99dy+rCgJAxCQmfFzxJMDI
YFWAQX8BQBgmyPKd5yTA85WDvch8AEBCZpwhZuYkwGqyxSs8XgBAbaZwUC7l
JMDXxKTEDUAAQMImGa6+4iTAixUW08QEAEBsJ2pp390kwCNxiB2sJP8/lmc+
mKfcJMBWHK1nHO3+P8GnEsdv2yTAc2EAZTC2/j8WKLskANkkwL2G3nM4Sv4/
QGiPU8jXJMAf7BYqJxX+P2qoY4KQ1iTAjnz5267g/T+U6DexWNUkwCJBRAHN
rP0/vygM4CDUJMCc9u4ff3n9P6zctD0=
                 "]]}, Annotation[#, "Charting`Private`Tag$76256#2"]& ], 
              TagBox[{
                Directive[
                 Opacity[1.], 
                 RGBColor[0.560181, 0.691569, 0.194885], 
                 AbsoluteThickness[1.6]], 
                LineBox[CompressedData["
1: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
YWL0P0uO0ro=
                 "]]}, 
               Annotation[#, 
                "Charting`Private`Tag$76256#3"]& ]}}, {}}, {{}, {{{}, {}, {
               Hue[0.67, 0.6, 0.6], 
               Directive[
                PointSize[0.012833333333333334`], 
                RGBColor[0.368417, 0.506779, 0.709798], 
                AbsoluteThickness[1.6], 
                Dashing[{Small, Small}]], 
               
               LineBox[{{-12.887766648509379`, 0.4}, {-12.887766648509379`, 
                3.}, {-12.887766648509379`, 3.}}]}, {
               Hue[0.9060679774997897, 0.6, 0.6], 
               Directive[
                PointSize[0.012833333333333334`], 
                RGBColor[0.880722, 0.611041, 0.142051], 
                AbsoluteThickness[1.6], 
                Dashing[{Small, Small}]], 
               
               LineBox[{{-11.729312001942901`, 0.4}, {-11.729312001942901`, 
                3.}, {-11.729312001942901`, 3.}}]}, {
               Hue[0.1421359549995791, 0.6, 0.6], 
               Directive[
                PointSize[0.012833333333333334`], 
                RGBColor[0.560181, 0.691569, 0.194885], 
                AbsoluteThickness[1.6], 
                Dashing[{Small, Small}]], 
               
               LineBox[{{-12.384050730453046`, 0.4}, {-12.384050730453046`, 
                3.}, {-12.384050730453046`, 3.}}]}}}, {{}, {}}}}, {
          ImagePadding -> {{60, 2}, {1, 6}}, ImageSize -> 400, AspectRatio -> 
           0.412, Frame -> True, FrameLabel -> {"", 
             FormBox[
              TemplateBox[{"\"\[Eta](\"", 
                SubscriptBox["\[Omega]", "\"m\""], "\")\""}, "RowDefault"], 
              TraditionalForm]}, DisplayFunction -> Identity, 
           Method -> {
            "DefaultBoundaryStyle" -> Automatic, 
             "DefaultGraphicsInteraction" -> {
              "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
               "Effects" -> {
                "Highlight" -> {"ratio" -> 2}, 
                 "HighlightPoint" -> {"ratio" -> 2}, 
                 "Droplines" -> {
                  "freeformCursorMode" -> True, 
                   "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
             "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
             None}, DisplayFunction -> Identity, DisplayFunction -> Identity, 
           Ticks -> {{}, Automatic}, 
           AxesOrigin -> {-17.345784840442967`, 0.4000000000000009}, 
           FrameTicks -> {{Automatic, Automatic}, {
              Charting`ScaledTicks[
              "Log", {Log, Exp}, "Nice", WorkingPrecision -> MachinePrecision,
                RotateLabel -> 0], 
              Charting`ScaledFrameTicks[{Log, Exp}]}}, 
           GridLines -> {None, None}, DisplayFunction -> Identity, 
           PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
           All, DisplayFunction -> Identity, 
           Method -> {
            "DefaultBoundaryStyle" -> Automatic, 
             "DefaultGraphicsInteraction" -> {
              "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
               "Effects" -> {
                "Highlight" -> {"ratio" -> 2}, 
                 "HighlightPoint" -> {"ratio" -> 2}, 
                 "Droplines" -> {
                  "freeformCursorMode" -> True, 
                   "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
             "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
             None, "ClippingRange" -> {{{-17.345784840442967`, \
-10.414313317760728`}, {0.4137023516920134, 
              911.970898792424}}, {{-17.345784840442967`, \
-10.414313317760728`}, {0.4137023516920134, 3.}}}}, DisplayFunction -> 
           Identity, AspectRatio -> 
           NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True},
            AxesLabel -> {None, None}, 
           AxesOrigin -> {-17.345784840442967`, 0.4}, 
           BaseStyle -> {FontFamily -> "Times New Roman", 16}, 
           CoordinatesToolOptions -> {"DisplayFunction" -> ({
               Exp[
                Part[#, 1]], 
               Part[#, 2]}& ), "CopiedValueFunction" -> ({
               Exp[
                Part[#, 1]], 
               Part[#, 2]}& )}, DisplayFunction :> Identity, 
           Frame -> {{False, False}, {False, False}}, 
           FrameLabel -> {{None, None}, {None, None}}, 
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
           GridLines -> {None, None}, GridLinesStyle -> Directive[
             GrayLevel[0.5, 0.4]], 
           Method -> {
            "DefaultBoundaryStyle" -> Automatic, 
             "DefaultGraphicsInteraction" -> {
              "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
               "Effects" -> {
                "Highlight" -> {"ratio" -> 2}, 
                 "HighlightPoint" -> {"ratio" -> 2}, 
                 "Droplines" -> {
                  "freeformCursorMode" -> True, 
                   "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
             "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
             None}, PlotRange -> {{-17.345784840442967`, \
-10.414313317760728`}, {0.4, 3.}}, PlotRangeClipping -> True, 
           PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {Automatic, Automatic}}, 
           Ticks -> {None, Automatic}}]}, {
         GraphicsBox[{{{{{}, {}, 
              TagBox[{
                Directive[
                 Opacity[1.], 
                 RGBColor[0.368417, 0.506779, 0.709798], 
                 AbsoluteThickness[1.6]], 
                LineBox[CompressedData["
1:eJwVzXk41Akcx3EhKWw5kmOpluY3zDBHRih92y5apUOOjRLR4azkGBtSKl1P
yTiSTCUdMq51ZHV8k7smelL9Zhy5hnGPQpLN2j8+z/t5/fVZ7h28y1deTk7O
ZXb/t4QY33PWjYVYbiyfeZIE83fNylOuLPxyUiUwd9YPIitKgmb9lGvWVjbr
VOFVDTcXFhbVMt83zjoyxLTedDcLx5J5yjOzhhee1o3bWcib/pDpEUVCrUv9
En07FqbGvyn6NZqE5rP8pnwOC1OonioFMSQYpVQ5DC9k4XdEv9NnSNASZrnl
DDLxaP4WI/55EsxcaSH69Uy0ZgsPrb1MwhEe/VL6PSYO9hi9UbxOguNEr1VG
LBPz/7WcsUklwUVlaXeBOxPHenMvzPBJOHfiR3qYJROlgpzpDw9J8JS/PlCu
yURvr5XHdheSUHLOPpjSwsDWWIVtK5+TMGdXB/tjEgMb/8gVTteTkFZVqS7d
wcDEJ+qH94pI4PL5AwZKDBQI1wa6DpDwuGJYthvNkVBXqcj7SYLxVs5o3glz
TP5NoterLYKBqGrVQFNz3Mi3PPAXWwRzv792oknMsMeOzjXaIYKD4toktTQz
tOx+32oXKgK9uTYKo05maF1OU9xzSwRayXf9J+eZoaA7KyijQQQeDc4jXs/o
mOm0x0t5vhi+7YzKeBNOR4af1oapzWIQ2aTbu9Pp+PkgLHrNE8MvgQzDAQkN
Jc6tY9p9YkiwU1vYepuGXBe2yTH7ZnCP75z64kxDwyKDkZPYDOEadI0Fi2io
aNEieLK+BcTygcabKk1xT90afeveFrh0c3JnJ9cUxypTS5PutcLVqMnsUxam
uL3sckza8TYQV438XN9nguG1L8UKEZ8hwtU9WinTBD3ZFpMUh3bwSVDXpe8z
QRuviMg5I+2QzHqRG6ppgnsb7zOtsAP09TuCUUjFVT4P2vPud0Kv3xSNcZqK
qRF6dtNvu0BJMV6Tv5qKz4kzaf46ElD1TXS/aEPF8k9VU/0GEtCozsgMtaZi
gahCI8hIAgbxxSu3rqKijzc7NMZcAhaqXU7f2VSs0fFwatgoAS+ttTwnUyqu
5EZOrjgugafGY1rKulQUJCaefdUggZBN+7WPTRB4Fm9zAlN6QCPOdXjjOIFD
dc5dMRk9kF/hWK0zRqDgyprWlKweGAbbMBwlsF0aVvPp7x7ws9H7uHCIwKVx
R7+mNPbAfkZTUm4XgWHG8+4bqPTCNl37xYONBBbKGa/zjOsFYoihdegxgW4H
pKWN8VIYnG6SOWYTmFM+srn+mhTyVSOFlo8IVBdXXqxLlYIVvfKc0gMCi2tW
bxA9lIK9v9v3rLsEnv/8Y9K2TgqH+061dd8gMKQu9voylT7Ilrx76B1PoH5I
l0VAYh+YtYXY7vMl0LFsvMS6tB8uvlbMNvchsN7bcS/vZT9InyRpz3gTuM7W
xubb6364m1g6wt9PYFQnpfhDez9ob/lxp8OdwOXHAqInFgyAXNFpJd9dBB7u
Kx4R7h+ApgsJDf5AoJlLrM8CzUGI5OR5cXUJHOjSSY5LHIKIbQKX7ToEnlHR
D5LxhyDc97HDiiUEPhKwWQdzhuBE0gPOO63ZvwqH9OCqIQga5883WUQgu710
zo9vQ+BVfK2AVCLwFS1BYXrfMNhzjs+xGqOg71heqtRiBBZzOHcm3lKQO+H1
dmusDKwMO9LahRQs7FByOhAvA495V3j1byjYvYz4PeaqDO6Jus9n1FPQSi0g
oOaWDNjRvKDN1RS02/kz9sY/MthR83V18jMK3jxxucF+XAaX/yz8yMmhYLhp
2OKJoFE4wt/1ro1HQbUwV78ywy/wH/JcuSU=
                 "]]}, Annotation[#, "Charting`Private`Tag$77122#1"]& ], 
              TagBox[{
                Directive[
                 Opacity[1.], 
                 RGBColor[0.880722, 0.611041, 0.142051], 
                 AbsoluteThickness[1.6]], 
                LineBox[CompressedData["
1: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
CPc=
                 "]]}, Annotation[#, "Charting`Private`Tag$77122#2"]& ], 
              TagBox[{
                Directive[
                 Opacity[1.], 
                 RGBColor[0.560181, 0.691569, 0.194885], 
                 AbsoluteThickness[1.6]], 
                LineBox[CompressedData["
1:eJwVzHk41Akcx/EpDCUpV2k2pTQ/5jAztmmlx36fx9aQ5L5aPYqyuyizRZQy
tZFcHVpHjsekS7nbpHbT+q5QSz935OjATMMcrsWiaO0fn+f9vP75mAYK3YOW
UigU18X930pi6vsLvjxMeThlxj5PgmVrr9acDw/3t3pznBZdEF1TGbZoYeNd
x9BFXyev6Pl68/CFr3XF/UVHhzMaGJ487NajexKxJED1ge0tLjzUFvs3b4kj
4aV3wxqaPQ97PwxNceJJ6L0g7ijn83CheN7idBIJmzPr9ozo8rAlfFqtL40E
A/KOb7GSi5P4UbjsBglsH2Y4rYGLIo7+oaxiEoLTWMm5t7nY/kQ261hFgvO0
zDrvFy5eco7pYJIkeGtvkDzw46LtX/Z8wQAJ8RGfciO3cTHvkft1+zkSDiy9
pniqz0XVJ8q8rkETVMY7COl9HJRv1Cxx3NoES9z7rTrTOVg17aBB8WmC7Lra
1UOuHLyYdS9QTdQEp8RixXoqB6NC/LLrS5ugqGZkzBMtcSIrO8NmsAnMnPjj
ZRGWOGMW3NVr1gyKmPoVRxmWeKLKs+iKsBk0Zhs9mFI2Nmq5e3VVN8MPPS/T
dbLZKHIs1jbXa4F1GjZq4x5spAhqGC4OLWCQcTN0RpONfebZIeyUFtjf7DUa
8IyF42e9i3K6W+Bft5i8V1EsNFz1ndkKdit02+Q6+LFYGGP7/sLj9FZYeZRj
opAyMVFR2aWgtkGqvY7u2xtMfMiNLa+ObwO/hIG5CS8mRvwRGraPaIcoPZbe
8lVM3FzlzWC9boeepUfNdtUy8FjkCdxS3gHJOTNuA6cYWEmTZocVvYYrMTOF
57YysKqC6JY97YSeutEFu2ELPLvbbtDD4A2c9PETUW9ZIMkP/1uZ3A2HU1cb
s/wtUD2wba/8m17I4FWXntC3QKuMiuFLPm+BRusXImmOdYwPuxcK34MsZI7J
OW+Oxeqzc21u/UBVT9AX7zBHq/yxxOqpAQjfddDo2DSBz6Uutj/3SEAvzmdk
5xSBhnE6G/wGJVBe41y/dpJAWqJpoJNSAiNgG4njBP4ZVrbRbkECITbrOnVV
BHrZGeme3iSFg5yO9NJBAt0ESlviiBT2GjsYKlsIpM4n77ys/hEIFcfgxyIC
Qw9oHGpzlIHyc8eYcyGBplphlg2eMihfEU1uu0/g5W3r61/6y8CaVRtPLSBQ
vnmNsOe4DBxCfWfv3CSw+xfFdtccGfw0fO6dJIvAgGGRV5JKBoXS1nuBCQRq
U2IL/TOHgP0u3NY/iMCSvjOSF0vkkNSoXmh5mMDAh7XXclfKYehJutGXQAJX
3pofjabJ4eavj0fFBwnc5/vVG0++HIx2f8rv9yNw3cQjgShYDpSK89QgdwKd
d+RPlrbLoSMxtTkUCCwV7px5XqaAaH5ZwCljAlm7NnU+TVDByb0l3i5rCZyO
PZM1m6mCqKCiPVvWEKgU3FbaFaggIr2A32pAYJdmb/BMnQrCpsTLLFYt/mUd
6RxVG4GAR1cfvKESmGNZucf4/Ag48I8vsZ6kY4rVVoH44igY8vn50010PORh
TB/tGwNrk/7sDyQd7YZijZOlY7Bf81Jawys6fu1Cc2SPjMHtbsnFvAY6mqRy
ouK+jIGVKC1MUE/HBtOkq6JN4+D64p8dGc/o+G2to9Pd4HFI2fdbJ7+YjlqZ
xoLhz+Pgsbwk/sw9OupE+oT8bjIB/wEVF37D
                 "]]}, Annotation[#, "Charting`Private`Tag$77122#3"]& ], 
              TagBox[{
                Directive[
                 Opacity[1.], 
                 AbsoluteThickness[1.6], 
                 Dashing[{0, Small, Small, Small}], 
                 Thickness[Large], 
                 RGBColor[0.880722, 0.611041, 0.142051]], 
                LineBox[CompressedData["
1:eJwVVnk4VusXlbmoRAmF8L2H+GQol1S2RFKkVEghZCjSICVSMlNydU2VuKU0
+IWIiGqnRJGxzN93yhChXDTK1e+9f5znPOs5z7Pftddea79Hxf2gnaeggIDA
W/r89y5R/+oU5aiHXX7ZMg/uOMKypi7xSQc93DqZXMEpdYSbwZUl/v9hz5ii
i1WOkP46UdrRXg89bttevvjOEYIDNF9pbtfDu9WSlWOyOwGeuK5stNXDOE/r
f0SjdkKN/auFiyz1UGnsqcd7Lyfoisp6U2CghzOOjN8xM9sNamlVmz7P1UOD
rfOOH3TdA/Nf33D834gubi0NuH71pTtoO2gFLHqli8F3Ft4XCvOEfcncsxnX
dfEhLM5/3+MDm78NGGWe0cVeTSWzg9F+YC+h3Hdvly7WXfMvEo87BNFHf2Uc
+0MX3f8U8VNVCgBXwQvD5TK6+KY+bNK2NxBKojccZLp1MNvU3Cbe8QTMsHuv
35qig1UtSmUbpULhUtXzeYNbdDD36cCodGYYnMjKGlYU1cE0jbDl04YRkFv5
+Z/tuAzldnbbxgpGA8faYCz/6DJ0GD+cMhUaB8OhLyQPaC7DxAUJXbqHE0Dk
Z+02rX5tzCAxE71v/wSvzpqU2Ze00Xib5RHHoL9AQcRYaGybNoqmLPqjcFMq
zE+95vtDTBszN2DL+8aLsLthx6jbIy4KCIkcb3x9Bb5vDc2sO87FyI55Wx6I
X4UO44wNu7hc3DtubWeQnw1zDugoDfdrYYDx3XcuUTmQZDl7Lu9vLYxZYh75
Mf827IrtmRzfoYXTa1k5+4y7cFyaKz1LSgt9oh+JavQXQKfgAY7Fc00MX/L7
UklwEZy9/GNrzwlNNFvs+9DKrQQSQ3/cCVuhiXsdG/aIBJRBZ9XotNnHpSiw
80j6SqNHEOSw65Ro9lLMi4Arqy4i7E2aJ891WYpaXL+ogJpKSNV7khcosxQd
mgbKlx6qgkWL3h/E1xoo6LHR0md5DQzsn9TSCddAszPeNyqiakFUOFYma5UG
SllHDQj+Uw8BFntkD39Tx0qjSpc0qyZQ/6Qz3ztXHS+vVa796dMC2vyANS6e
6jgYUH9lZvhbCDbIdzshr46O8W1nT3W3wQIDg6vf6hl0HqrUKeR2gtApHcnA
OAalZLcORRh3A5pXp1jGMtglxh4VWNcNJyVclRViGNy48uieoE3d8C39vP6T
SAbXSm9UddrdDUNFnxxnhjGYcv8r9oZ2Q+PH3BtXjtHvZvOvC2I3ZO7QgBce
DN4SM1MUNuXBrsVYk+7OYPA+kdoGSx7I9TrY+box+KWSN5Rsy4OkQzGeUq4M
yt6+vFrClQeRZz+cdXJisMx4q0VOKA98n15v/7yFwSemC05Fl/HASFvlyEIT
Bvf+FL/or8UHhSovgenVDHrYvTjXpMeHqd3/O9+3ikHNwYlKrhEf8Jxh7r2V
DG46019Ua84HqxGbvk0GDMoNizTeduaDU26wfRiXwfxLn3vbEviweh32eWkx
qKbaNFXyFx+UukQCbDQZnGlywyzhIh96ZiUlKmgwWLz0pKTyDT747r9Zc1+N
QfGssdS35Xw4ufSN8UcFBqW5AuTUAB9cnsq/bJBn0PZ1+Y7qET6Y7nR1KJFj
cGuBd5ToOB+E44YCImRpPaXYC15TfEgYFLirKM1g1G/eilwpFjJvaivbzWTQ
sedGzQpDFsIg4K6ROIPc5swDb1ax4N5WukpZjNYXXvTSx5QFRszccUSYwdLe
IpuDVizkezklRQsw2Fb1SHvMiQUkMULl3wmG2BuM3A9hwXxwpcLNbwRHz71f
H36aheo7I7p/fSXYkzp9eF0EC/U6di6+EwT9r119/3c8C10rFcsWjRJ8lj5Y
WpXOgstUQ4PYZ4JxZWs0dTJY6Hkc/mFihGBlrkXZ2SwWBtcNytQNEbTz/vBG
MYeFbzZF/ic/EDwgbxySXcjCCSmvKJ9+gifWP92WXczCVLNcxvY+gmRHf2JK
KQtCjqdecnsIFgtVtGx5zIKUuxWHxyM4+9nYgPJLFpI5U8Yvuwn+sAtfXVDL
wsKBvK3FXZS//pS+fj0LSn7zTyd0EFR7fvrarBYWtI6xHWveEkzckF4/q5uF
PKML/yx9Q1A4TuUY4bOg/8tcTLaFYOmDya+671gwCruz4nMjQRu+90KFPhYq
zJw3dTYQ9BmZE/W9nwUQkXJ/UU/wXI2WR9UAC+vjAxMz6wgeNjktpj/Mwktr
jZz4WoILFj5ObxxhwXpuV8WxVwSDPoXrun5mYVuy6dDmGsonxljceoyFVvsJ
gVXVBCuaiPSdcRac5HMWqr8gqNoWU/J9goU9mRIWv58RlK4hbm7fWOjb83jX
cCXBy/EWuqHfWfBWO3yk7SnBs57ZWrE/WBjqV4t7hgT/jd9pGP6TBf9brVn5
T6iedS6GvpMsjO2PK7n8mKBCQPTcdb9YOKq9+nXMI4LTMmHZM6dY+DH6uTeg
gqDBvrbWxxSHFF6ddC2neql/Oef+LwvTR7fPs35I0L1Z/vYXisMNxTSMyggK
pHnPCZxmQWSyzIRTSlBbsT2rl+LYCr8dUg8oP9e1pqa/WZA8rew3VUwwOmx7
czzFiWubwwfvEyzMumL0jGJp4aiLb4oIDudF7PhIceoLwwIsJGhmuUHiX4oL
vVrtU+4RPJUYEvwfbhAN/HdfAcHfwhnfBigeyZG5bpJPMKdMdmcFxeKWhRtl
8gieFOaEBFPMGdgyNvA/mgeoNlCleG3MaFpFLkHJqHq3IsrXRf28SdIdgssP
NLdpUxxcze33vE3Q65XBoSTab6p37VnjWwQVvYgQn+pTJLZff+5NgkKP0nxk
KG68Kd7Re4Pgu4fWQXpU3xHLm6dLrxNUP/Z6phHVX3zQgknIJrh22PcLQ+fD
ie2rc7tG8/HAbO40nadzjYqCxN8EU2w+6e79Ss/3QWQzCXKE2b5x6odUcVfv
+1cIHnMxV9tH/VK/IeO+82WCLVcN0yRG6fwHjXfpXyL4JU4xyPATC2JxHTPE
LlI9IxnjjdSfpi9lbQtSCYYZtRWrUf/u3lf8NTKF5ldKXH6I+v3EzO0ZO5MJ
rr99oCC1h+ptlfRR8ALNs7t73VUe5ftKInJHAvXTjVI2uJnW239HU/McwTPy
Y5L+DZT/LKum6Xiqj5LrzPV1lO/GaKVbsQS9eztLs6to/7UCZZMRND+dj3ql
HtB6vlmuDeGUX8LDUFJE5yFhInr9DEHljWlHFPNp/5tCttmcJrh9TDavhO6T
4dqvn7KCCd5j1Ji4ZFrPLzn56AmCSqca7YoSaT3J5ausgqiflsnaP6H7a7f1
odjxQII683zkT4ZRveqGVC0OE/Ss95eJ2E/7e806DHkTtFdd9uOiEQtfTLhC
LV4Ef/XNcAV9Fv4oCMor9yQYGXivuFqLhbIL80QSPOj8tH+HhynR/eqwrlDH
leB5h9ZnCYIsCL5MdJZzIZi0KbLJ4hcfzI27xWc4EzyuwN3PTvChenGga7MT
9WfLm6iSPj7Uv8+RDLQn6Fg+e/focz5IbZt44LyDYBEvpTSvgg92z8Fj/XaC
f0yoaG++z4e3Oe1lC+2ofy+E/c3N5kO37yzvhzYEnTXnBrif5sPQ1wNPf5tT
PzyYLx9D70eu90O/wXUE3XJ81+ip88G/XVSuyYz6USfWu3QxH8YeZvlfM6X7
MkRRwFmMDz9ONy2yWE2wqkTn0s9OHojOMjgWv5yep/jRyS6EBxtCzqgE6BOU
CPK1u+/Pg/iR13W79AgOCNybHnXjwewGLzVtHZqHDEifoPf//OT0xgZNgs2b
s4qINA9UlKY0F6gSTJhIeSWU1Q3WLo07eUvoPjKy5qmc74ZjmddjbygTTBuy
KpOg/xuvlGw+GCjSeeelha116oajyplX7eUIjtkKLeZKd0PNElO59Dk0r3Ms
YgqPd8H4nvmWe2YT7OSXb/D06ALFq4OBGpK036EPfvzNXXBEJamldCY9r8A/
QJV0wWLVnvMdwgTbRweCBuo74ZBapMiiXxzM/TijRmZhJ1zycFzR+5ODkpcX
W8343QFV2VyP3B8cbNd2ts7/0AEKnLe46hsHI+6dtd1U3AHPOczJ3WMcnLVK
xjvItgPkmJrxKwMcbJvxbN7m4+1g5pWh4vWBg9ORxUHzd7XDgZxDW5b1c7Ba
SOXfZJN2qGTk8x73cND81JLCSuF28FPfv4/lcfB8qcP35wltdP+YpN/s5uCZ
zeeCthxsg6c3pasPdnEwq28i/8KWNpDVKOcIdHCw/kFt+ErpNjD1SdxW08bB
AI3QNVfGW2H/LY/wP1s5+OlMz0hxcyskDxrec3zLQYk9qsoRha3wREPy3ZI3
HOQ3vnITvtAK/we5kZIz
                 "]]}, Annotation[#, "Charting`Private`Tag$77122#4"]& ], 
              TagBox[{
                Directive[
                 Opacity[1.], 
                 AbsoluteThickness[1.6], 
                 Dashing[{0, Small, Small, Small}], 
                 Thickness[Large], 
                 RGBColor[0.560181, 0.691569, 0.194885]], 
                LineBox[CompressedData["
1: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
6+fK18FLNfE3SzpYeN3o0J/nNbXwP24UF9Q=
                 "]]}, Annotation[#, "Charting`Private`Tag$77122#5"]& ], 
              TagBox[{
                Directive[
                 Opacity[1.], 
                 AbsoluteThickness[1.6], 
                 Dashing[{0, Small, Small, Small}], 
                 Thickness[Large], 
                 RGBColor[0.368417, 0.506779, 0.709798]], 
                LineBox[CompressedData["
1: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

                 "]]}, Annotation[#, "Charting`Private`Tag$77122#6"]& ], 
              TagBox[{
                Directive[
                 Opacity[1.], 
                 AbsoluteThickness[1.6], 
                 Dashing[{Small, Small}], 
                 GrayLevel[0]], 
                LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQvU39a1RrhOEBBjB4YH8i7JS4tDuCf7t1/pUNpgi+
8vSj3u/4EXyRs0sj1rwxgPN1w7WLpU8h+JlTdLrnLEHw/b49t5jXiOCHccs/
2RiN4LeV/J5TZobgxzNNer1bGMHf1uaRr3ZHH85nDHpodG0qgj/r6BHBFwEI
fuX8+a9l2RD81YfefQg5oAfnq/iYflxfguC/rj3Gk6uF4LP+PB2s/VQXzk+7
dWIq7ywEX4rVivljMIIvMm1R9g92BD/mfOj7xL06cP73wNp5Z8oR/JtWczyi
dRB8vlx9uddPteH8ie68/HcXIPjRHY9+fQpF8MuFdIS4BBD8W0y5Kq5HtOD8
7tk/Ah9VIvj9tT9WNZgg+LeOvv/n9FITzq8Ij65jW4zgp0wUlNSJQ/CnGe5f
VyqM4EtLP8w/cFYDzn+e9UtbvwnBZ2PpEJ5vjeAXuyaIFX5Th/PV3+qLpK9G
8HXvFdvGpSL4VabrEyslEXxRU9OF386pwfnMdfo8pZ0IvoWuYpG4HYJ/QLWd
efd3VYT7j5lvOLAJwd909n74q3QEX1Huj5aoEoJfoNzCKv1bBc7fr8HzQOEK
gg8AGgr+XQ==
                 "]]}, 
               Annotation[#, 
                "Charting`Private`Tag$77122#7"]& ]}}, {}}, {{}, {{{}, {}, {
               Hue[0.67, 0.6, 0.6], 
               Directive[
                PointSize[0.012833333333333334`], 
                RGBColor[0.368417, 0.506779, 0.709798], 
                AbsoluteThickness[1.6], 
                Dashing[{Small, Small}]], 
               
               LineBox[{{-12.887766648509379`, 0.5}, {-12.887766648509379`, 
                3.}, {-12.887766648509379`, 3.}}]}, {
               Hue[0.9060679774997897, 0.6, 0.6], 
               Directive[
                PointSize[0.012833333333333334`], 
                RGBColor[0.880722, 0.611041, 0.142051], 
                AbsoluteThickness[1.6], 
                Dashing[{Small, Small}]], 
               
               LineBox[{{-11.729312001942901`, 0.5}, {-11.729312001942901`, 
                3.}, {-11.729312001942901`, 3.}}]}, {
               Hue[0.1421359549995791, 0.6, 0.6], 
               Directive[
                PointSize[0.012833333333333334`], 
                RGBColor[0.560181, 0.691569, 0.194885], 
                AbsoluteThickness[1.6], 
                Dashing[{Small, Small}]], 
               
               LineBox[{{-12.384050730453046`, 0.5}, {-12.384050730453046`, 
                3.}, {-12.384050730453046`, 3.}}]}}}, {{}, {}}}}, {
          DisplayFunction -> Identity, 
           Method -> {
            "DefaultBoundaryStyle" -> Automatic, 
             "DefaultGraphicsInteraction" -> {
              "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
               "Effects" -> {
                "Highlight" -> {"ratio" -> 2}, 
                 "HighlightPoint" -> {"ratio" -> 2}, 
                 "Droplines" -> {
                  "freeformCursorMode" -> True, 
                   "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
             "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
             None}, DisplayFunction -> Identity, DisplayFunction -> Identity, 
           Ticks -> {
             Charting`ScaledTicks[
             "Log", {Log, Exp}, "Nice", WorkingPrecision -> MachinePrecision, 
              RotateLabel -> 0], Automatic}, 
           AxesOrigin -> {-17.345784981901573`, 0}, 
           FrameTicks -> {{Automatic, Automatic}, {{{-16.11809565095832, 
                FormBox["0.1`", TraditionalForm]}, {-13.815510557964274`, 
                FormBox["1", TraditionalForm]}, {-11.512925464970229`, 
                FormBox["10", TraditionalForm]}}, {{-16.11809565095832, 
                FormBox["0.1`", TraditionalForm]}, {-13.815510557964274`, 
                FormBox["1", TraditionalForm]}, {-11.512925464970229`, 
                FormBox["10", TraditionalForm]}}}}, GridLines -> {None, None},
            DisplayFunction -> Identity, PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {
              Scaled[0.05], 
              Scaled[0.05]}}, PlotRangeClipping -> True, 
           ImagePadding -> {{60, 2}, {45, 2}}, DisplayFunction -> Identity, 
           Method -> {
            "DefaultBoundaryStyle" -> Automatic, 
             "DefaultGraphicsInteraction" -> {
              "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
               "Effects" -> {
                "Highlight" -> {"ratio" -> 2}, 
                 "HighlightPoint" -> {"ratio" -> 2}, 
                 "Droplines" -> {
                  "freeformCursorMode" -> True, 
                   "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
             "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
             None, "ClippingRange" -> {{{-17.345784840442967`, \
-10.414313317760728`}, {0.0015055454119224296`, 
              3.197148550991148}}, {{-17.345784840442967`, \
-10.414313317760728`}, {0.0015055454119224296`, 1.1325010446520338`}}}}, 
           DisplayFunction -> Identity, AspectRatio -> 0.412, 
           Axes -> {True, True}, AxesLabel -> {None, None}, 
           AxesOrigin -> {-17.345784981901573`, 0}, 
           BaseStyle -> {FontFamily -> "Times New Roman", 16}, 
           CoordinatesToolOptions -> {"DisplayFunction" -> ({
               Exp[
                Part[#, 1]], 
               Part[#, 2]}& ), "CopiedValueFunction" -> ({
               Exp[
                Part[#, 1]], 
               Part[#, 2]}& )}, DisplayFunction :> Identity, 
           Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
              FormBox[
               TemplateBox[{"S", "\"(\"", 
                 SubscriptBox["\[Omega]", "\"m\""], "\")\""}, "RowDefault"], 
               TraditionalForm], None}, {
              FormBox[
               TemplateBox[{
                 SubscriptBox["\"\[Kappa]\"", "\"m\""], "\" (Hz)\""}, 
                "RowDefault"], TraditionalForm], None}}, 
           FrameTicks -> {{Automatic, Automatic}, {{{0, 
                FormBox["0", TraditionalForm]}, {1.*^-7, 
                FormBox["0.1`", TraditionalForm]}, {1.*^-6, 
                FormBox["1", TraditionalForm]}, {0.00001, 
                FormBox["10", TraditionalForm]}}, {{0, 
                FormBox["0", TraditionalForm]}, {1.*^-7, 
                FormBox["0.1`", TraditionalForm]}, {1.*^-6, 
                FormBox["1", TraditionalForm]}, {0.00001, 
                FormBox["10", TraditionalForm]}}}}, GridLines -> {None, None},
            GridLinesStyle -> Directive[
             GrayLevel[0.5, 0.4]], ImagePadding -> {{60, 2}, {45, 2}}, 
           ImageSize -> 400, 
           Method -> {
            "DefaultBoundaryStyle" -> Automatic, 
             "DefaultGraphicsInteraction" -> {
              "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
               "Effects" -> {
                "Highlight" -> {"ratio" -> 2}, 
                 "HighlightPoint" -> {"ratio" -> 2}, 
                 "Droplines" -> {
                  "freeformCursorMode" -> True, 
                   "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
             "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
             None}, PlotRange -> NCache[{{-Log[
                 Rational[102400000, 3]], -Log[
                 Rational[100000, 3]]}, {0., 
              1.1325010446520338`}}, {{-17.345784981901573`, \
-10.41431317630212}, {0., 1.1325010446520338`}}], PlotRangeClipping -> True, 
           PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {
              Scaled[0.02], 
              Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}]}}, 
       GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
       AutoDelete -> False, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
       GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{0}}}], "Grid"], 
     TemplateBox[{
       StyleBox[
        TemplateBox[{
          StyleBox["S", Italic, StripOnInput -> False], "\"(\"", 
          SubscriptBox["\"\[Omega]\"", "\"m\""], "\")=0.5\""}, "RowDefault"], 
        FontFamily -> "Times New Roman", 14, StripOnInput -> False]}, 
      "LineLegend", DisplayFunction -> (StyleBox[
        StyleBox[
         PaneBox[
          TagBox[
           GridBox[{{
              TagBox[
               GridBox[{{
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    Opacity[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    Opacity[0]], {}}}, AspectRatio -> Full, 
                   ImageSize -> {20, 10}, PlotRangePadding -> None, 
                   ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                GridBoxAlignment -> {
                 "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                AutoDelete -> False, 
                GridBoxDividers -> {
                 "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
                GridBoxSpacings -> {"Columns" -> {{0.5}}, "Rows" -> {{0.8}}}],
                "Grid"]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
           "Grid"], Alignment -> Left, AppearanceElements -> None, 
          ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"],
          LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Arial"}, 
        Background -> Automatic, StripOnInput -> False]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             
             TemplateBox[<|"color" -> GrayLevel[0, 0]|>, 
              "GrayLevelColorSwatchTemplate"], "}"}], ",", 
           RowBox[{"{", #, "}"}]}], "]"}]& ), Editable -> True]}, "Legended", 
    DisplayFunction -> (
     OverlayBox[{#, #2}, All, 2, 
      Alignment -> {-0.76, -0.30000000000000004`}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", 
             RowBox[{"{", 
               RowBox[{"0.12`", ",", "0.35`"}], "}"}]}], "]"}]}], "]"}]& ), 
    Editable -> True], 
   TemplateBox[{
     StyleBox[
     "\"Constant\"", FontFamily -> "Times New Roman", 14, StripOnInput -> 
      False], 
     StyleBox[
     "\"PD, N=1\"", FontFamily -> "Times New Roman", 14, StripOnInput -> 
      False], 
     StyleBox[
     "\"PD, N=2\"", FontFamily -> "Times New Roman", 14, StripOnInput -> 
      False], 
     StyleBox[
     "\"Constant LB\"", FontFamily -> "Times New Roman", 14, StripOnInput -> 
      False], 
     StyleBox[
     "\"PD, N=1, LB\"", FontFamily -> "Times New Roman", 14, StripOnInput -> 
      False], 
     StyleBox[
     "\"PD, N=2, LB\"", FontFamily -> "Times New Roman", 14, StripOnInput -> 
      False], 
     StyleBox[
      TemplateBox[{
        StyleBox["\"S\"", Italic, StripOnInput -> False], "\"(\"", 
        SubscriptBox["\"\[Omega]\"", "\"m\""], "\")=0.5\""}, "RowDefault"], 
      FontFamily -> "Times New Roman", 14, StripOnInput -> False]}, 
    "LineLegend", DisplayFunction -> (StyleBox[
      StyleBox[
       PaneBox[
        TagBox[
         GridBox[{{
            TagBox[
             GridBox[{{
                GraphicsBox[{{
                   Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                   Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {}}}, 
                 AspectRatio -> Full, ImageSize -> {40, 10}, PlotRangePadding -> 
                 None, ImagePadding -> Automatic, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                GraphicsBox[{{
                   Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.880722, 0.611041, 0.142051]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                   Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.880722, 0.611041, 0.142051]], {}}}, 
                 AspectRatio -> Full, ImageSize -> {40, 10}, PlotRangePadding -> 
                 None, ImagePadding -> Automatic, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                GraphicsBox[{{
                   Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.560181, 0.691569, 0.194885]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                   Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.560181, 0.691569, 0.194885]], {}}}, 
                 AspectRatio -> Full, ImageSize -> {40, 10}, PlotRangePadding -> 
                 None, ImagePadding -> Automatic, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
              GridBoxAlignment -> {
               "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
              AutoDelete -> False, 
              GridBoxDividers -> {
               "Columns" -> {{False}}, "Rows" -> {{False}}}, 
              GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
              GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}, {
            TagBox[
             GridBox[{{
                GraphicsBox[{{
                   Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Dashing[{0, Small, Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                   Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Dashing[{0, Small, Small, Small}]], {}}}, AspectRatio -> 
                 Full, ImageSize -> {40, 10}, PlotRangePadding -> None, 
                 ImagePadding -> Automatic, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                GraphicsBox[{{
                   Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Dashing[{0, Small, Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                   Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Dashing[{0, Small, Small, Small}]], {}}}, AspectRatio -> 
                 Full, ImageSize -> {40, 10}, PlotRangePadding -> None, 
                 ImagePadding -> Automatic, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #5, 
                GraphicsBox[{{
                   Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    Dashing[{0, Small, Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                   Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    Dashing[{0, Small, Small, Small}]], {}}}, AspectRatio -> 
                 Full, ImageSize -> {40, 10}, PlotRangePadding -> None, 
                 ImagePadding -> Automatic, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
              GridBoxAlignment -> {
               "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
              AutoDelete -> False, 
              GridBoxDividers -> {
               "Columns" -> {{False}}, "Rows" -> {{False}}}, 
              GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
              GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
          GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
          GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], "Grid"], 
        Alignment -> Left, AppearanceElements -> None, 
        ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"], 
       LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Arial"}, 
      Background -> Automatic, StripOnInput -> False]& ), 
    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             
             TemplateBox[<|
              "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
              "RGBColorSwatchTemplate"], ",", 
             
             TemplateBox[<|
              "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
              "RGBColorSwatchTemplate"], ",", 
             
             TemplateBox[<|
              "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
              "RGBColorSwatchTemplate"], ",", 
             RowBox[{"{", 
               RowBox[{
                 
                 TemplateBox[<|
                  "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                  "RGBColorSwatchTemplate"], ",", 
                 RowBox[{"Dashing", "[", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "Small", ",", "Small", ",", "Small"}], 
                    "}"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{
                 
                 TemplateBox[<|
                  "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                  "RGBColorSwatchTemplate"], ",", 
                 RowBox[{"Dashing", "[", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "Small", ",", "Small", ",", "Small"}], 
                    "}"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{
                 
                 TemplateBox[<|
                  "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                  "RGBColorSwatchTemplate"], ",", 
                 RowBox[{"Dashing", "[", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "Small", ",", "Small", ",", "Small"}], 
                    "}"}], "]"}]}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7}], 
           "}"}], ",", 
         RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), Editable -> 
    True]},
  "Legended",
  DisplayFunction->(GridBox[{{
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {2, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Above"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.870284158030487*^9},
 CellLabel->
  "Out[160]=",ExpressionUUID->"ee19b80c-e46f-4ec6-b16e-eb463b78075e"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solve the transfer matrix with more sidebands numerically", "Subsection",
 CellChangeTimes->{{3.8674563754748106`*^9, 
  3.867456397776047*^9}},ExpressionUUID->"cfbf1460-efcc-49da-97dc-\
07cb3b113e63"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Set", " ", "the", " ", "matrices", " ", "with", " ", "their", " ", 
    "numerical", " ", "values"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"AdN", " ", "=", 
     RowBox[{
      RowBox[{"Ad", "/.", "SymmetricValues"}], "/.", "SymNValues"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ApN", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"Ap", "/.", "SymmetricValues"}], "/.", "SteadyGOscSym"}], "/.",
       "SymNValues"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"AmN", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"Am", "/.", "SymmetricValues"}], "/.", "SteadyGOscSym"}], "/.",
       "SymNValues"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"BN", "=", 
     RowBox[{
      RowBox[{"B", "/.", "SymmetricValues"}], "/.", "SymNValues"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Calculate", " ", "the", " ", "transfer", " ", "matrix", " ", 
     "numerically"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"TOscOSym", "[", 
      RowBox[{"km_", ",", "N_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"AdNN", ",", "BNN"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"AdNN", "=", 
         RowBox[{"AdN", "/.", 
          RowBox[{"{", 
           RowBox[{
            SubscriptBox["\[Kappa]", "m"], "->", "km"}], "}"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"BNN", "=", 
         RowBox[{"BN", "/.", 
          RowBox[{"{", 
           RowBox[{
            SubscriptBox["\[Kappa]", "m"], "->", "km"}], "}"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"TransFOsc", "[", 
         RowBox[{"AdNN", ",", "ApN", ",", "AmN", ",", "BNN", ",", "N", ",", 
          RowBox[{
           SubscriptBox["\[Omega]", "m"], "/.", "SymNValues"}]}], "]"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Calculate", " ", "the", " ", "trasduction", " ", "efficiency", " ", 
     "numerically"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"etaOscNSym", "[", 
      RowBox[{"km_", ",", "N_"}], "]"}], ":=", 
     RowBox[{"Abs", "[", 
      RowBox[{
       RowBox[{"TOscOSym", "[", 
        RowBox[{"km", ",", "N"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "3"}], "]"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Calculate", " ", "the", " ", "added", " ", "noise", " ", "numerically"}],
     "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"SOscNSym", "[", 
      RowBox[{"km_", ",", "N_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"AdNN", "=", 
          RowBox[{"AdN", "/.", 
           RowBox[{"{", 
            RowBox[{
             SubscriptBox["\[Kappa]", "m"], "->", "km"}], "}"}]}]}], ",", 
         RowBox[{"BNN", "=", 
          RowBox[{"BN", "/.", 
           RowBox[{"{", 
            RowBox[{
             SubscriptBox["\[Kappa]", "m"], "->", "km"}], "}"}]}]}], ",", 
         RowBox[{"w", "=", 
          RowBox[{
           SubscriptBox["\[Omega]", "m"], "/.", "SymNValues"}]}], ",", "T", 
         ",", "Tp", ",", "Tm", ",", "T4p", ",", "T4m", ",", "TO", ",", 
         "eta"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"T", "=", 
         RowBox[{"TransFOsc", "[", 
          RowBox[{
          "AdNN", ",", "ApN", ",", "AmN", ",", "BNN", ",", "N", ",", "w"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"T", "=", 
         RowBox[{
          RowBox[{"Abs", "[", 
           RowBox[{"T", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "All"}], "]"}], "]"}], "]"}], "^", "2"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"Tp", ",", "Tm"}], "}"}], "=", 
         RowBox[{"TMech", "[", 
          RowBox[{
          "AdNN", ",", "ApN", ",", "AmN", ",", "BNN", ",", "N", ",", "w"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"T4p", ",", "T4m"}], "}"}], "=", 
         RowBox[{"TForth", "[", 
          RowBox[{
          "AdNN", ",", "ApN", ",", "AmN", ",", "BNN", ",", "N", ",", "w"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"eta", "=", 
         RowBox[{"T", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"SSum", "[", "T", "]"}], "+", 
           RowBox[{
            RowBox[{
             RowBox[{"Abs", "[", 
              RowBox[{"Tm", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "10"}], "]"}], "]"}], "]"}], "^", "2"}], 
            "/", "2"}], "+", 
           RowBox[{
            RowBox[{"Total", "[", 
             RowBox[{
              RowBox[{"Abs", "[", 
               RowBox[{"T4m", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "All"}], "]"}], "]"}], "]"}], "^", "2"}], 
             "]"}], "/", "2"}]}], ")"}], "/", "eta"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Calculate", " ", "the", " ", "solutions", " ", "with", " ", "more", " ", 
     "sidebands"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"d3", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"etaOscNSym", "[", 
          RowBox[{"x", ",", "3"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"Logspace", "[", 
          RowBox[{
           RowBox[{"-", "7.5"}], ",", 
           RowBox[{"Log10", "[", 
            RowBox[{"3", "*", 
             SuperscriptBox["10", 
              RowBox[{"-", "5"}]]}], "]"}], ",", "200"}], "]"}]}], "}"}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"d4", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"etaOscNSym", "[", 
          RowBox[{"x", ",", "4"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"Logspace", "[", 
          RowBox[{
           RowBox[{"-", "7.5"}], ",", 
           RowBox[{"Log10", "[", 
            RowBox[{"3", "*", 
             SuperscriptBox["10", 
              RowBox[{"-", "5"}]]}], "]"}], ",", "200"}], "]"}]}], "}"}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"d5", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"SOscNSym", "[", 
          RowBox[{"x", ",", "3"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"Logspace", "[", 
          RowBox[{
           RowBox[{"-", "7.5"}], ",", 
           RowBox[{"Log10", "[", 
            RowBox[{"3", "*", 
             SuperscriptBox["10", 
              RowBox[{"-", "5"}]]}], "]"}], ",", "200"}], "]"}]}], "}"}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"d6", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"SOscNSym", "[", 
          RowBox[{"x", ",", "4"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"Logspace", "[", 
          RowBox[{
           RowBox[{"-", "7.5"}], ",", 
           RowBox[{"Log10", "[", 
            RowBox[{"3", "*", 
             SuperscriptBox["10", 
              RowBox[{"-", "5"}]]}], "]"}], ",", "200"}], "]"}]}], "}"}]}], 
      "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.8674574235090647`*^9, 3.867457426468877*^9}, {
  3.8674574789499755`*^9, 3.8674575967088804`*^9}, {3.867462661575617*^9, 
  3.867462662142818*^9}, {3.8697632978444786`*^9, 3.869763410073935*^9}, {
  3.8702841712126293`*^9, 3.870284171375688*^9}},
 CellLabel->
  "In[168]:=",ExpressionUUID->"651470f4-07f3-4342-a24b-24b302bdba50"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plot the results with more sidebands", "Subsection",
 CellChangeTimes->{{3.8697049439132433`*^9, 3.869704957641405*^9}, {
  3.870284370458675*^9, 
  3.8702843820007973`*^9}},ExpressionUUID->"a4ff9651-b134-4ae2-832d-\
1ada4a5f7bda"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"upperl", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lowerl", "=", "0.4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p1", "=", 
   RowBox[{"LogLinearPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"etaOscSym", "[", "x", "]"}], ",", 
       RowBox[{"etaOsc2Sym", "[", "x", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", 
       RowBox[{"3", "*", 
        SuperscriptBox["10", 
         RowBox[{"-", "5"}]]}]}], "}"}], ",", 
     RowBox[{"Ticks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"N", "[", 
             SuperscriptBox["10", 
              RowBox[{"-", "7"}]], "]"}], ",", "0.1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"N", "[", 
             SuperscriptBox["10", 
              RowBox[{"-", "6"}]], "]"}], ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"N", "[", 
             SuperscriptBox["10", 
              RowBox[{"-", "5"}]], "]"}], ",", "10"}], "}"}]}], "}"}], ",", 
        "Automatic"}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Automatic", ",", "Automatic", ",", 
        RowBox[{"{", 
         RowBox[{"DotDashed", ",", "Thick"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"BaseStyle", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"FontFamily", "->", "\"\<Times New Roman\>\""}], ",", "16"}], 
       "}"}]}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Row", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"\"\<\[Kappa]\>\"", ",", "\"\<m\>\""}], "]"}], ",", " ", 
           "\"\< (Hz)\>\""}], "}"}], "]"}], ",", 
        RowBox[{"Row", "[", 
         RowBox[{"{", 
          RowBox[{"\"\<\[Eta](\>\"", ",", 
           RowBox[{"Subscript", "[", 
            RowBox[{"\[Omega]", ",", "\"\<m\>\""}], "]"}], ",", "\"\<)\>\""}],
           "}"}], "]"}]}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Automatic", ",", 
        RowBox[{"{", 
         RowBox[{"lowerl", ",", "upperl"}], "}"}]}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p2", "=", 
   RowBox[{"ListLogLinearPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"d3", ",", "d4"}], "}"}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Dashed", ",", "DefaultGreen"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Dotted", ",", "Red", ",", "Thick"}], "}"}]}], "}"}]}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Ph", "=", 
   RowBox[{"Show", "[", 
    RowBox[{"p1", ",", "p2"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"etaH", "=", 
  RowBox[{"Legended", "[", 
   RowBox[{"Ph", ",", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"LineLegend", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"DefaultBlue", ",", "DefaultOrange", ",", 
          RowBox[{"{", 
           RowBox[{"DefaultGreen", ",", "Dashed"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"Red", ",", "Dotted"}], "}"}]}], "}"}], ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"#", ",", 
            RowBox[{"FontFamily", " ", "->", " ", "\"\<Times New Roman\>\""}],
             ",", " ", "14"}], "]"}], "&"}], "/@", 
         RowBox[{"{", 
          RowBox[{
          "\"\<PD, N=1\>\"", ",", "\"\<PD, N=2\>\"", ",", "\"\<PD, N=3\>\"", 
           ",", "\"\<PD, N=4\>\""}], "}"}]}], ",", 
        RowBox[{"LegendLayout", "\[Rule]", "\"\<Row\>\""}]}], "]"}], ",", 
      "Top"}], "]"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.8697049670475416`*^9, 3.8697049943792963`*^9}, {
  3.8697051288285503`*^9, 3.869705133764328*^9}, {3.869705396856035*^9, 
  3.8697053970393085`*^9}, {3.86970592712214*^9, 3.8697059321271763`*^9}, {
  3.8697060123732457`*^9, 3.869706030757229*^9}, {3.869706316805524*^9, 
  3.869706332167181*^9}, {3.8697072552500343`*^9, 3.869707255692639*^9}, {
  3.869707340123379*^9, 3.8697073448714733`*^9}, {3.869762418306446*^9, 
  3.8697624188081646`*^9}, {3.8697634560508404`*^9, 3.869763456257516*^9}},
 CellLabel->
  "In[179]:=",ExpressionUUID->"9e1df286-d148-4dc0-ac44-64cb6c2a1fdc"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwdlAk0lYsWx81SInO4iKfv+84xHCpjan+J0mRIKCJE3XKjIt26pdNAUuk2
KClzIipDUirsTEmUiuaUkAZ0ZsfJ8M57e6299vqtvdZ/7f3fa23T8JjVkXIy
MjKV0vxfrSKFgYlrbbFtrJa2VuKA9fP3UyQBthhcp55jK+XCvfVV0VI2cXOU
tZNyevspzbX+tjgtW/vxfCnvjWW2MtfYYpGiXswyKUPdBqcOL1t0ekTqREq5
xb9Vz3CpLealYkemlN8nZneW2dkiHhQt0lHmwH8uNK0YVrfFlWNHFO2ncEC7
vWDt9UEbTLduM96mwgGrAItYw1YbvPr5ZG/rVA5sOWd5/PIVG7xmVKXMVuWA
p2jAMeugDS7Y5LLJX40D/tNM+sqDbFBOaP46bwYHkuJ+X463t8HD7weKaS0O
bJA78/O+lg2qR3jnztDlQFWSRwzxgYUhiYKINH0OyK7umfMqjYVxWhbRoUYc
yGhq1PjmzcIHEiWTAlMO7MnO/mmkxMKJwQcVYwQHSuqHOWvQGoO3RUyrteSA
+Uo7bmmcNd7Zcq9LMJcDP/c3q25jWqOpbH0My4UDiqNPfC36rXDXqvDbqu4c
2PSuJW16hhXuH1h21dKbAwaKzvJcXyuMWKjy77z1Uj/O50WJla3Q7/M/FgFR
HFj/zO9XWI0l7jW6/qh0HwdGfPZnte22xKutb2z3nOLAW+fLHkGWlsg+dM7V
upADattYxj/7LXDb5eU9k8iB00unq3/MsUCHizHuYd0cCEr+IuH5WeD7RoOX
+fJc2K1pqTl1hgWqu5Ykb7Hkwju5bebujUzMWkAujg3lwvFLYp8ve5i4xI09
zSSTC6f2i4vZ85i4c538N/3PXCgL9Kj0ncvE4BVzC/x6uPDCIb2GmMPE5WuG
l575wgVtnkNHG4uJo1t1Fqn1cyF9027hTAsm9qk36Gn84EKelwjKTZkYXUEq
LRZwodJU0NmjxsTZOz+cClbhwbumXxOu3xmoahBzNtOeB7PihlSZ3xho90N7
bNKBB5vNfhpoDDDQy2hv8EYnHggSvtp/6mPgzotN061ceKDm+DH6n88MRM/I
+W2LeOBa3Np96zUD5/o1JTqv4sG11IJa82YGOp/R6/4QwYO/A4ISlPIZqLZo
gSTqAg9CbZq1+bkMDJ0McJx2kQceKrYln3IYuN25Pqskgwd695Xe3M1iYE55
yrdfmTyoMq6wjcpgoLGv94mkKzzg90/pf3aagVk2R34PlvMgOq5qxUU2Aw9N
cR8saOdBxGkNfcsQBq4eCmtVVuFD/9I/QTaYgf7KIifzaXzYNFEb+SqIgQMd
N4Ndp/Nhc9RfFex1DDxeGNpyWIMPW90frehaw8A51GSgoQEfto/uS0hYIe1n
uE9kWfBhf9i33g5HBu64lzap4M2H87Z1N3dpMXCixQ3uZfHBpbrhbYgmA03J
bm0ilw9f6BYFDw0GbpYf7jqbzwdr7+eBBuoM/OsTYbariA/N0b1KdVMZyO1j
63tV8GGkRHnDFDkGvjL0o8Ob+bCW8Fa/xKEwoUL4UYvDB0PDnhhsp3DI/s0y
0+UCCGQ/Z55po1Cspv1h7SoBZPQ/7N/4RMr2q4POegtgZllekPJjCkN5adYa
AQLQdo9Y6tlIoW1twTGbCAGoxQwYf7hHYUu+wFr2gABkG4baRwop3K8qXqpw
RwA01Z38+CqFc91DTuTcEwD75NPFlwooHHt+1p6uFcBEQGn1wnwKNzWath9r
EoBkcHtBYhaFf0nm7lnSKQCBrmCfVhqF90XWF7bwBDCwVWLBOkShT6TVnXhb
IazMTf+pfZBCRhzLcbGdEMpe25dIDlB49nc/S8tJCH+7xTKb91Moa258roYW
wlTjQSp4D4V03GCBi7dQ+m8/zj6+ncKBTw1VAzFCiHd4aDIQQiFGnqQ1KoTw
btuGT23BFBrnH2b5VQkBroxnVayncJ54NpV5TwhTNJyNEwIpfJzwcrlTgxAy
flT8oeNP4cKhbV/zOoVQm3lFf/EqCjOWG8+kxUJQUkjWyp5P4Ub3db6PXUWg
Gnk2KMWZQp3Hns/ZS0Wg2ZyVv8uJQrV0726XlSIwSr49d6UDhcqlDjX1fiKY
p9rrOzqHwt4JJQelLSII0154zpdJ4ZLmBvaOf0XwwFygPUWfQvuk1F6lXhHU
J06u5+tRmO6Cp9Z/E0HL16kF3boUvi7SzLozJIKXRaZ2t7UprPpxbWK/WAQ/
LL38wmdQ2MhOyl2pNgIz7YrTHihTuLb8AlPsPAKx7qG6O0Qk1i74ZPMwfQQ0
jwQMuwlJvPu5er1/9giU1Xs2zxSQqDfLSJdfMALDsCAeuSSW15iELb41Alud
DV6pD5FYJx4vpp+OQCirM+1mL4m8QpbkrqIYVul76Ax2kLgvJj11fK8YBgNg
qO4Zid1Fb3dnHhJDynn7prNPSVwkXJyzJEUMLVqzd81vI1GdejdYeVEMbmpy
XSmPSJT7kGsjXy0GZ/kH5xi1JIpuL6iKGxUDOcTS3lxC4oN4FS/i0CgMjnVy
PItJbJg8cSE+ZRTKVPe2218j0fyG56eOM6PgaNmYpFRIYriMsDQ/fxQ8otaO
FuSR2Lty1K6xaRT+/M7u7rtIouXhzQEyqhIo7n9eFJ5MYqxnWcn3HAlEC+MT
lx8l8Ve1JCmzWAJzFP8In5NEYkilc3twpQTumW8ylDsi1ddMFsi3SODJRsnJ
3AMkvluNrO+/JDDYYxb7OZ7EiKKnRpauv8GqO3ZBSCSJfpdlkpdwf0PKE4Vi
6wgSHXipO2+M/4Zvd9N0J8NJLPJ+0UpMHYO8s3d+ZYdK/S3vDPX5zxjoLvud
2xNEYpBZ2cEU/zGQqTykFLmaxLJhH9VyHIPOY6efRQGJIxcqVacXjIPtbjMX
l4UkBi7r2KFbOQ6pEbeKVBeQqP9os4Fjwzgsg66DN5xJNLifp9fUMw61gpnz
ftmR2MXW1FadNQGFG3LSd1qS+OL6bvnDuROw1640bI8+icncbv2v1ZPw96ob
/l4zSbyhtenxH22TsDuyZMVsPRL/9Hcwju2ehLi0Qrvn2tJ7Tmb+rpOVoaOF
2SqMGSQaDceWniZl6LDb/5a/UZLuq7XDKTpehg5tT716U1E6Dz/3YgZbhg7p
P3HpiIJUr8H15NsUGTpQ51iijZxU7/Z9walsGXrNroPrkscJVDnWtqbvsQzt
YbdT1lFAoFermXugmSy9ZNV20XQ+gYyjdGqLlSztHhn9s5dL4HDwkzcrnWRp
17StXad+Eahm6LU13VuWni8Mvzbwg8BTC1/948qWpa1v+/pc6CGwpP5ovFGf
LK1jZ5crekrgoucZt2RRjnY07sn43E4g/aZ9sKZdjl6vfPJcaxuB29+7fUh7
L0dfedt3NKuVwIyvbWTGiBw9J+Fc9JJmAjsMj9WO28jT3o/488/XEPjygtbH
A9fk6biybDv2AwLLA/bwZlXL0+kXV7C23idQNeHz0d4WefpTVL7ZwmoC+4Ku
v3/6TZ6OnuGr8rVSqp84yFjOVKBPrKt4ZXedwF3xvXedKhXoMteQDpMSAnU1
DxygmhXoTouprSrFBL7wKV1Ov1GgDSfCaj4WEujzsM9waEyBLs7TuJKYTyD5
d/aOFR6KdMvP7Tu6MghMmVUvkzegSMsnsFR3HSMwf3f81zOrlGl0e5S2NJnA
wb7w4JHNyvS+aRtMDI4SqDSr+UrhIWValJ46p+4IgYmHo+9z7irTes8qDjce
JFDm/zGF/i+DXXx+
           "]], 
          LineBox[CompressedData["
1:eJwBoQFe/iFib1JlAgAAABkAAAACAAAAEH7OotceJcAAAAAAAAAIQMoeTeY1
HSXAok3SqR6yB0B0H56hVhglwLPj41C21AZAyCBAGJgOJcAjyrc/wkEFQPJg
FEdgDSXA+c0+e8QSBUAdoeh1KAwlwAYmyMZ45ARAciGR07gJJcDaJKwZ6IkE
QBwi4o7ZBCXA6upslnvcA0BwI4QFG/skwDd8CbCWnQJAmmNYNOP5JMAvF71N
H3gCQMWjLGOr+CTAz6wjPidTAkAaJNXAO/YkwN99dy+rCgJAxCQmfFzxJMDI
YFWAQX8BQBgmyPKd5yTA85WDvch8AEBCZpwhZuYkwGqyxSs8XgBAbaZwUC7l
JMDXxKTEDUAAQMImGa6+4iTAixUW08QEAEBsJ2pp390kwCNxiB2sJP8/lmc+
mKfcJMBWHK1nHO3+P8GnEsdv2yTAc2EAZTC2/j8WKLskANkkwL2G3nM4Sv4/
QGiPU8jXJMAf7BYqJxX+P2qoY4KQ1iTAjnz5267g/T+U6DexWNUkwCJBRAHN
rP0/vygM4CDUJMCc9u4ff3n9P6zctD0=
           "]]}, Annotation[#, "Charting`Private`Tag$83891#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
YWL0P0uO0ro=
           "]]}, 
         Annotation[#, 
          "Charting`Private`Tag$83891#2"]& ]}}, {}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.007333333333333334], 
          AbsoluteThickness[1.6], 
          Dashing[{Small, Small}], 
          RGBColor[0.560181, 0.691569, 0.194885]], 
         LineBox[CompressedData["
1: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
          "]]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.007333333333333334], 
          AbsoluteThickness[1.6], 
          Dashing[{0, Small}], 
          RGBColor[1, 0, 0], 
          Thickness[Large]], 
         LineBox[CompressedData["
1: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
          "]]}}}, {{}, {}}}}, {
    DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
       None}, DisplayFunction -> Identity, DisplayFunction -> Identity, 
     Ticks -> {{{-16.11809565095832, 
         FormBox["0.1`", TraditionalForm]}, {-13.815510557964274`, 
         FormBox["1", TraditionalForm]}, {-11.512925464970229`, 
         FormBox["10", TraditionalForm]}}, Automatic}, 
     AxesOrigin -> {-17.345784840442967`, 0.4000000000000009}, 
     FrameTicks -> {{Automatic, Automatic}, {
        Charting`ScaledTicks[
        "Log", {Log, Exp}, "Nice", WorkingPrecision -> MachinePrecision, 
         RotateLabel -> 0], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {None, None}, 
     DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "ClippingRange" -> {{{-17.345784840442967`, -10.414313317760728`}, {
        1.0015089539663675`, 
        911.970898792424}}, {{-17.345784840442967`, -10.414313317760728`}, {
        1.0015089539663675`, 3.}}}}, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox[
        TemplateBox[{
          SubscriptBox["\"\[Kappa]\"", "\"m\""], "\" (Hz)\""}, "RowDefault"], 
        TraditionalForm], 
       FormBox[
        TemplateBox[{"\"\[Eta](\"", 
          SubscriptBox["\[Omega]", "\"m\""], "\")\""}, "RowDefault"], 
        TraditionalForm]}, AxesOrigin -> {-17.345784840442967`, 0.4}, 
     BaseStyle -> {FontFamily -> "Times New Roman", 16}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Part[#, 2]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Part[#, 2]}& )}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
       None}, PlotRange -> {{-17.345784840442967`, -10.414313317760728`}, {
      0.4, 3.}}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, Ticks -> {{{0, 
         FormBox["0", TraditionalForm]}, {1.*^-7, 
         FormBox["0.1`", TraditionalForm]}, {1.*^-6, 
         FormBox["1", TraditionalForm]}, {0.00001, 
         FormBox["10", TraditionalForm]}}, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
       StyleBox[
       "\"PD, N=1\"", FontFamily -> "Times New Roman", 14, StripOnInput -> 
        False], 
       StyleBox[
       "\"PD, N=2\"", FontFamily -> "Times New Roman", 14, StripOnInput -> 
        False], 
       StyleBox[
       "\"PD, N=3\"", FontFamily -> "Times New Roman", 14, StripOnInput -> 
        False], 
       StyleBox[
       "\"PD, N=4\"", FontFamily -> "Times New Roman", 14, StripOnInput -> 
        False]}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {40, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.880722, 0.611041, 0.142051]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.880722, 0.611041, 0.142051]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {40, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}, {
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Dashing[{0, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Dashing[{0, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               
               TemplateBox[<|
                "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                "RGBColorSwatchTemplate"], ",", 
               
               TemplateBox[<|
                "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                "RGBColorSwatchTemplate"], ",", 
               RowBox[{"{", 
                 RowBox[{
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "}"}], 
               ",", 
               RowBox[{"{", 
                 RowBox[{
                   
                   TemplateBox[<|"color" -> RGBColor[1, 0, 0]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small"}], "}"}], "]"}]}], "}"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {2, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Above"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.870284186347958*^9},
 CellLabel->
  "Out[184]=",ExpressionUUID->"2d9d0b90-320c-4861-8099-dd54ed56d8bc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"sp1", "=", 
   RowBox[{"LogLinearPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"SOscSym", "[", "x", "]"}], ",", 
       RowBox[{"SOsc2Sym", "[", "x", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", 
       RowBox[{"3", "*", 
        SuperscriptBox["10", 
         RowBox[{"-", "5"}]]}]}], "}"}], ",", 
     RowBox[{"Ticks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"N", "[", 
             SuperscriptBox["10", 
              RowBox[{"-", "7"}]], "]"}], ",", "0.1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"N", "[", 
             SuperscriptBox["10", 
              RowBox[{"-", "6"}]], "]"}], ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"N", "[", 
             SuperscriptBox["10", 
              RowBox[{"-", "5"}]], "]"}], ",", "10"}], "}"}]}], "}"}], ",", 
        "Automatic"}], "}"}]}], ",", 
     RowBox[{"BaseStyle", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"FontFamily", "->", "\"\<Times New Roman\>\""}], ",", "16"}], 
       "}"}]}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Row", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"\"\<\[Kappa]\>\"", ",", "\"\<m\>\""}], "]"}], ",", " ", 
           "\"\< (Hz)\>\""}], "}"}], "]"}], ",", 
        RowBox[{"Row", "[", 
         RowBox[{"{", 
          RowBox[{"S", ",", "\"\<(\>\"", ",", 
           RowBox[{"Subscript", "[", 
            RowBox[{"\[Omega]", ",", "\"\<m\>\""}], "]"}], ",", "\"\<)\>\""}],
           "}"}], "]"}]}], "}"}]}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "0.618"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sp2", "=", 
   RowBox[{"ListLogLinearPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"d5", ",", "d6"}], "}"}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Dashed", ",", "DefaultGreen"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Dotted", ",", "Red", ",", "Thick"}], "}"}]}], "}"}]}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"spH", "=", 
   RowBox[{"Show", "[", 
    RowBox[{"sp1", ",", "sp2"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"spH", "=", 
  RowBox[{"Legended", "[", 
   RowBox[{"spH", ",", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"LineLegend", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"DefaultBlue", ",", "DefaultOrange", ",", 
          RowBox[{"{", 
           RowBox[{"DefaultGreen", ",", "Dashed"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"Red", ",", "Dotted"}], "}"}]}], "}"}], ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"#", ",", 
            RowBox[{"FontFamily", " ", "->", " ", "\"\<Times New Roman\>\""}],
             ",", " ", "14"}], "]"}], "&"}], "/@", 
         RowBox[{"{", 
          RowBox[{
          "\"\<PD, N=1\>\"", ",", "\"\<PD, N=2\>\"", ",", "\"\<PD, N=3\>\"", 
           ",", "\"\<PD, N=4\>\""}], "}"}]}], ",", 
        RowBox[{"LegendLayout", "\[Rule]", "\"\<Row\>\""}]}], "]"}], ",", 
      "Top"}], "]"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.869742543470209*^9, 3.8697425873816476`*^9}, {
  3.869743161863165*^9, 3.869743195279451*^9}, {3.8697432799001937`*^9, 
  3.8697432810513544`*^9}, {3.869743456057581*^9, 3.869743456832985*^9}, {
  3.8697435111823015`*^9, 3.8697435114240227`*^9}, {3.869757726041883*^9, 
  3.869757732339774*^9}, {3.8697634904196935`*^9, 3.8697634905856895`*^9}},
 CellLabel->
  "In[185]:=",ExpressionUUID->"99e75a30-8119-4678-ab88-48cf5e0f92fb"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
ilZ/xQ==
           "]]}, Annotation[#, "Charting`Private`Tag$85149#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
           "]]}, 
         Annotation[#, 
          "Charting`Private`Tag$85149#2"]& ]}}, {}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.007333333333333334], 
          AbsoluteThickness[1.6], 
          Dashing[{Small, Small}], 
          RGBColor[0.560181, 0.691569, 0.194885]], 
         LineBox[CompressedData["
1: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
          "]]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.007333333333333334], 
          AbsoluteThickness[1.6], 
          Dashing[{0, Small}], 
          RGBColor[1, 0, 0], 
          Thickness[Large]], 
         LineBox[CompressedData["
1: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
          "]]}}}, {{}, {}}}}, {
    DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
       None}, DisplayFunction -> Identity, DisplayFunction -> Identity, 
     Ticks -> {{{-16.11809565095832, 
         FormBox["0.1`", TraditionalForm]}, {-13.815510557964274`, 
         FormBox["1", TraditionalForm]}, {-11.512925464970229`, 
         FormBox["10", TraditionalForm]}}, Automatic}, 
     AxesOrigin -> {-17.345784981901573`, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {
        Charting`ScaledTicks[
        "Log", {Log, Exp}, "Nice", WorkingPrecision -> MachinePrecision, 
         RotateLabel -> 0], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {None, None}, 
     DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "ClippingRange" -> {{{-17.345784840442967`, -10.414313317760728`}, {
        0.0015078154979156122`, 
        3.197148550991148}}, {{-17.345784840442967`, -10.414313317760728`}, {
        0.0015078154979156122`, 1.8187149129831703`}}}}, DisplayFunction -> 
     Identity, AspectRatio -> 0.618, Axes -> {True, True}, AxesLabel -> {
       FormBox[
        TemplateBox[{
          SubscriptBox["\"\[Kappa]\"", "\"m\""], "\" (Hz)\""}, "RowDefault"], 
        TraditionalForm], 
       FormBox[
        TemplateBox[{"S", "\"(\"", 
          SubscriptBox["\[Omega]", "\"m\""], "\")\""}, "RowDefault"], 
        TraditionalForm]}, AxesOrigin -> {-17.345784981901573`, 0}, 
     BaseStyle -> {FontFamily -> "Times New Roman", 16}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Part[#, 2]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Part[#, 2]}& )}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
       None}, PlotRange -> NCache[{{-Log[
           Rational[102400000, 3]], -Log[
           Rational[100000, 3]]}, {0., 
        1.8187149129831703`}}, {{-17.345784981901573`, -10.41431317630212}, {
       0., 1.8187149129831703`}}], PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {{{0, 
         FormBox["0", TraditionalForm]}, {1.*^-7, 
         FormBox["0.1`", TraditionalForm]}, {1.*^-6, 
         FormBox["1", TraditionalForm]}, {0.00001, 
         FormBox["10", TraditionalForm]}}, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
       StyleBox[
       "\"PD, N=1\"", FontFamily -> "Times New Roman", 14, StripOnInput -> 
        False], 
       StyleBox[
       "\"PD, N=2\"", FontFamily -> "Times New Roman", 14, StripOnInput -> 
        False], 
       StyleBox[
       "\"PD, N=3\"", FontFamily -> "Times New Roman", 14, StripOnInput -> 
        False], 
       StyleBox[
       "\"PD, N=4\"", FontFamily -> "Times New Roman", 14, StripOnInput -> 
        False]}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {40, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.880722, 0.611041, 0.142051]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.880722, 0.611041, 0.142051]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {40, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}, {
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Dashing[{0, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Dashing[{0, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               
               TemplateBox[<|
                "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                "RGBColorSwatchTemplate"], ",", 
               
               TemplateBox[<|
                "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                "RGBColorSwatchTemplate"], ",", 
               RowBox[{"{", 
                 RowBox[{
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "}"}], 
               ",", 
               RowBox[{"{", 
                 RowBox[{
                   
                   TemplateBox[<|"color" -> RGBColor[1, 0, 0]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small"}], "}"}], "]"}]}], "}"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {2, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Above"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.870284194210322*^9},
 CellLabel->
  "Out[188]=",ExpressionUUID->"82adeaa6-06ea-4bd3-bfb9-ddd4686de885"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Realistic transducer", "Section",
 CellChangeTimes->{{3.861296180483079*^9, 3.86129618580999*^9}, {
  3.8613155353507586`*^9, 3.861315536217247*^9}, {3.870284218107655*^9, 
  3.870284221698532*^9}},ExpressionUUID->"332741b7-feaf-4996-8b7c-\
781c76b931f0"],

Cell[CellGroupData[{

Cell["Solve the transfer matrices", "Subsection",
 CellChangeTimes->{{3.861998043808556*^9, 
  3.861998048751552*^9}},ExpressionUUID->"979e9437-9657-42cd-89a7-\
d3aef1c652c3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Functions", " ", "to", " ", "calculate", " ", "transfer", " ", "matrices",
     " ", "with", " ", "constant", " ", "drive"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"TTConO", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"TCon", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "All"}], "]"}], "]"}], "/.", "HigginPaper"}], "//",
       "Simplify"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"TTConON", "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"TTConO", "/.", "SteadyGConst"}], "/.", "HigginPaper"}], "/.",
         "Sym\[CapitalOmega]"}], ",", 
       RowBox[{"Assumptions", "->", "AssumptionRealValues"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"SGCon", "[", "O_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"TO", ",", "eta", ",", "S"}], "}"}], ",", 
       RowBox[{
        RowBox[{"TO", "=", 
         RowBox[{
          RowBox[{"Abs", "[", 
           RowBox[{"TTConON", "/.", 
            RowBox[{"{", 
             RowBox[{"\[CapitalOmega]", "->", "O"}], "}"}]}], "]"}], "^", 
          "2"}]}], ";", 
        RowBox[{"eta", "=", 
         RowBox[{"TO", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], ";", 
        RowBox[{
         RowBox[{"SSum", "[", "TO", "]"}], "/", "eta"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"etaGCon", "[", "O_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{"Abs", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"TTConON", "[", 
           RowBox[{"[", "3", "]"}], "]"}], ")"}], "/.", 
         RowBox[{"{", 
          RowBox[{"\[CapitalOmega]", "->", "O"}], "}"}]}], "]"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "Functions", " ", "to", " ", "calculate", " ", "the", " ", "transfer", 
      " ", "matrices", " ", "with", " ", "parametric", " ", "drive", " ", 
      "with", " ", "N"}], " ", "=", " ", "1"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"TTOscO", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"TOsc", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "All"}], "]"}], "]"}], "/.", "HigginPaper"}], "//",
       "Simplify"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"TTOscON", "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"TTOscO", "/.", "SteadyGOsc"}], "/.", "HigginPaper"}], "/.", 
        "Sym\[CapitalOmega]"}], ",", 
       RowBox[{"Assumptions", "->", "AssumptionRealValues"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"TTOscmN", "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"TOscm", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "All"}], "]"}], "]"}], "/.", "SteadyGOsc"}], "/.",
          "HigginPaper"}], "/.", "Sym\[CapitalOmega]"}], ",", 
       RowBox[{"Assumptions", "\[Rule]", "AssumptionRealValues"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"SGOsc", "[", "O_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"TO", ",", "TM", ",", "eta"}], "}"}], ",", 
       RowBox[{
        RowBox[{"TO", "=", 
         RowBox[{
          RowBox[{"Abs", "[", 
           RowBox[{"TTOscON", "/.", 
            RowBox[{"{", 
             RowBox[{"\[CapitalOmega]", "->", "O"}], "}"}]}], "]"}], "^", 
          "2"}]}], ";", 
        RowBox[{"TM", "=", 
         RowBox[{
          RowBox[{"Abs", "[", 
           RowBox[{
            RowBox[{"TTOscmN", "[", 
             RowBox[{"[", "10", "]"}], "]"}], "/.", 
            RowBox[{"{", 
             RowBox[{"\[CapitalOmega]", "->", "O"}], "}"}]}], "]"}], "^", 
          "2"}]}], ";", 
        RowBox[{"eta", "=", 
         RowBox[{"TO", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], ";", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"SSum", "[", "TO", "]"}], "+", 
           RowBox[{"TM", "/", "2"}]}], ")"}], "/", "eta"}]}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"etaGOsc", "[", "O_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{"Abs", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"TTOscON", "[", 
           RowBox[{"[", "3", "]"}], "]"}], ")"}], "/.", 
         RowBox[{"{", 
          RowBox[{"\[CapitalOmega]", "->", "O"}], "}"}]}], "]"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "Functions", " ", "to", " ", "calculate", " ", "the", " ", "transfer", 
      " ", "matrices", " ", "with", " ", "parametric", " ", "drive", " ", 
      "with", " ", "N"}], " ", "=", " ", "2"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"TTOsc2O", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"TOsc2", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "All"}], "]"}], "]"}], "/.", "HigginPaper"}], "//",
       "Simplify"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"TTOsc2ON", "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"TTOsc2O", "/.", "SteadyGOsc"}], "/.", "HigginPaper"}], "/.",
         "Sym\[CapitalOmega]"}], ",", 
       RowBox[{"Assumptions", "->", "AssumptionRealValues"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"TTOsc2mN", "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"TOsc2m", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "All"}], "]"}], "]"}], "/.", "SteadyGOsc"}], "/.",
          "HigginPaper"}], "/.", "Sym\[CapitalOmega]"}], ",", 
       RowBox[{"Assumptions", "\[Rule]", "AssumptionRealValues"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"TTOsc4mN", "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"TOsc4m", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "All"}], "]"}], "]"}], "/.", "SteadyGOsc"}], "/.",
          "HigginPaper"}], "/.", "Sym\[CapitalOmega]"}], ",", 
       RowBox[{"Assumptions", "->", "AssumptionRealValues"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"etaGOsc2", "[", "O_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{"Abs", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"TTOsc2ON", "[", 
           RowBox[{"[", "3", "]"}], "]"}], ")"}], "/.", 
         RowBox[{"{", 
          RowBox[{"\[CapitalOmega]", "->", "O"}], "}"}]}], "]"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"SGOsc2", "[", "O_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"TO", ",", "TM", ",", "T4", ",", "eta"}], "}"}], ",", 
       RowBox[{
        RowBox[{"TO", "=", 
         RowBox[{
          RowBox[{"Abs", "[", 
           RowBox[{"TTOsc2ON", "/.", 
            RowBox[{"{", 
             RowBox[{"\[CapitalOmega]", "->", "O"}], "}"}]}], "]"}], "^", 
          "2"}]}], ";", 
        RowBox[{"TM", "=", 
         RowBox[{
          RowBox[{"Abs", "[", 
           RowBox[{
            RowBox[{"TTOsc2mN", "[", 
             RowBox[{"[", "10", "]"}], "]"}], "/.", 
            RowBox[{"{", 
             RowBox[{"\[CapitalOmega]", "->", "O"}], "}"}]}], "]"}], "^", 
          "2"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"T4", "=", 
         RowBox[{
          RowBox[{"Abs", "[", 
           RowBox[{"TTOsc4mN", "/.", 
            RowBox[{"{", 
             RowBox[{"\[CapitalOmega]", "->", "O"}], "}"}]}], "]"}], "^", 
          "2"}]}], ";", 
        RowBox[{"eta", "=", 
         RowBox[{"TO", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], ";", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"SSum", "[", "TO", "]"}], "+", 
           RowBox[{"TM", "/", "2"}], "+", 
           RowBox[{
            RowBox[{"Total", "[", "T4", "]"}], "/", "2"}]}], ")"}], "/", 
         "eta"}]}]}], "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.861298933270497*^9, 3.8612989478715725`*^9}, 
   3.861299012076041*^9, 3.8612990436007442`*^9, {3.861299215651354*^9, 
   3.861299215896557*^9}, {3.861299444829357*^9, 3.8612994450012245`*^9}, {
   3.861299566957303*^9, 3.861299567170657*^9}, {3.8612996333191333`*^9, 
   3.8612996580383253`*^9}, {3.8612999019695477`*^9, 
   3.8612999137451053`*^9}, {3.861299950584571*^9, 3.8612999761596074`*^9}, {
   3.861300120984105*^9, 3.8613001431516323`*^9}, {3.861300534308234*^9, 
   3.861300536251565*^9}, 3.861302231688061*^9, {3.8697627736427608`*^9, 
   3.8697627918231554`*^9}, {3.8697635993679485`*^9, 
   3.8697636200423336`*^9}, {3.869763804775405*^9, 3.869763871334017*^9}, {
   3.8697639468181667`*^9, 3.869763947295822*^9}, {3.869764162602703*^9, 
   3.8697641981809235`*^9}},
 CellLabel->
  "In[189]:=",ExpressionUUID->"71d70cab-88f5-49a4-ad91-1250631dafdb"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plot the results (figure 3)", "Subsection",
 CellChangeTimes->{{3.8613163412652316`*^9, 3.861316345437515*^9}, {
  3.870284247901765*^9, 
  3.8702842500241203`*^9}},ExpressionUUID->"dc54fdb7-94cd-42bb-a8a0-\
8293eaa70c3e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Solve", " ", "for", " ", "the", " ", "crossing", " ", "points"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"lowerl", "=", "3"}], ";", 
    RowBox[{"upperl", "=", "18"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"C1", "=", 
     RowBox[{"x", "/.", 
      RowBox[{"FindRoot", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{
           RowBox[{"SGOsc", "[", 
            RowBox[{"2", "*", "\[Pi]", "*", "x"}], "]"}], "-", 
           RowBox[{"SGCon", "[", 
            RowBox[{"2", "*", "\[Pi]", "*", "x"}], "]"}]}], "]"}], "==", 
         "0"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "510"}], "}"}]}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"C2", "=", 
     RowBox[{"x", "/.", 
      RowBox[{"FindRoot", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{
           RowBox[{"SGOsc2", "[", 
            RowBox[{"2", "*", "\[Pi]", "*", "x"}], "]"}], "-", 
           RowBox[{"SGCon", "[", 
            RowBox[{"2", "*", "\[Pi]", "*", "x"}], "]"}]}], "]"}], "==", 
         "0"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "1050"}], "}"}]}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"C1", ",", "lowerl"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"C1", ",", "upperl"}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"C2", ",", "lowerl"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"C2", ",", "upperl"}], "}"}]}], "}"}]}], "}"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.869777624790141*^9, 3.8697776384049654`*^9}, {
  3.869778229978037*^9, 3.8697782399749613`*^9}},
 CellLabel->
  "In[204]:=",ExpressionUUID->"90e4cc34-c444-4acd-a485-966cbc1953c2"],

Cell[BoxData[
 TemplateBox[{
  "FindRoot", "lstol", 
   "\"The line search decreased the step size to within tolerance specified \
by AccuracyGoal and PrecisionGoal but was unable to find a sufficient \
decrease in the merit function. You may need more than \
\\!\\(\\*RowBox[{\\\"MachinePrecision\\\"}]\\) digits of working precision to \
meet these tolerances.\"", 2, 205, 61, 18251631308076902224, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.869777640017655*^9, 3.869854155738835*^9, 
  3.8700101747557616`*^9, 3.870284253168694*^9},
 CellLabel->
  "During evaluation of \
In[204]:=",ExpressionUUID->"1f5b1da2-2b6c-49ed-bad6-c05c0f82bdae"],

Cell[BoxData[
 TemplateBox[{
  "FindRoot", "lstol", 
   "\"The line search decreased the step size to within tolerance specified \
by AccuracyGoal and PrecisionGoal but was unable to find a sufficient \
decrease in the merit function. You may need more than \
\\!\\(\\*RowBox[{\\\"MachinePrecision\\\"}]\\) digits of working precision to \
meet these tolerances.\"", 2, 206, 62, 18251631308076902224, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.869777640017655*^9, 3.869854155738835*^9, 
  3.8700101747557616`*^9, 3.8702842531730013`*^9},
 CellLabel->
  "During evaluation of \
In[204]:=",ExpressionUUID->"1730073c-87d9-4d93-b9be-ee7e6df5a5b9"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Plotting", " ", "the", " ", "upper", " ", "panel"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.870284300222241*^9, 
  3.870284306323853*^9}},ExpressionUUID->"c482e3ad-0263-4efc-9095-\
ad8f0eba3482"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Sp1", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"etaGCon", "[", 
        RowBox[{"2", "*", "\[Pi]", "*", "x"}], "]"}], ",", 
       RowBox[{"etaGOsc", "[", 
        RowBox[{"2", "*", "\[Pi]", "*", "x"}], "]"}], ",", 
       RowBox[{"etaGOsc2", "[", 
        RowBox[{"2", "*", "\[Pi]", "*", "x"}], "]"}], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "200", ",", "1500"}], "}"}], ",", 
     RowBox[{"BaseStyle", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"FontFamily", "->", "\"\<Times New Roman\>\""}], ",", "16"}], 
       "}"}]}], ",", 
     RowBox[{"Ticks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"None", ",", "Automatic"}], "}"}]}], ",", 
     RowBox[{"ImagePadding", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"60", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "6"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"ImageSize", "->", "400"}], ",", 
     RowBox[{"AspectRatio", "->", 
      RowBox[{"0.618", "/", "1.5"}]}], ",", 
     RowBox[{"Frame", "->", "True"}], ",", 
     RowBox[{"FrameLabel", "->", 
      RowBox[{"{", 
       RowBox[{"Null", ",", 
        RowBox[{"Row", "[", 
         RowBox[{"{", 
          RowBox[{"\"\<\[Eta](\>\"", ",", 
           RowBox[{"Subscript", "[", 
            RowBox[{"\[Omega]", ",", "\"\<m\>\""}], "]"}], ",", "\"\<)\>\""}],
           "}"}], "]"}]}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Automatic", ",", "Automatic", ",", "Automatic", ",", 
        RowBox[{"{", 
         RowBox[{"Dashed", ",", "Black"}], "}"}]}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Sp1", "=", 
   RowBox[{"Legended", "[", 
    RowBox[{"Sp1", ",", 
     RowBox[{"Placed", "[", 
      RowBox[{
       RowBox[{"LineLegend", "[", 
        RowBox[{
         RowBox[{"{", "White", "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"Style", "[", 
           RowBox[{
            RowBox[{"Row", "[", 
             RowBox[{"{", 
              RowBox[{"\[Eta]", ",", "\"\<(\>\"", ",", " ", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\"\<\[Omega]\>\"", ",", "\"\<m\>\""}], "]"}], ",", 
               " ", "\"\<)=1\>\""}], "}"}], "]"}], ",", "\n", "             ", 
            RowBox[{"FontFamily", " ", "->", " ", "\"\<Times New Roman\>\""}],
             ",", " ", "14"}], "]"}], "}"}]}], "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"0.07", ",", "0.5"}], "}"}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Sp1", "=", 
    RowBox[{"Show", "[", 
     RowBox[{"{", 
      RowBox[{"Sp1", ",", 
       RowBox[{"ListPlot", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"C1", ",", 
               RowBox[{"-", "1"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"C1", ",", 
               RowBox[{"etaGOsc", "[", 
                RowBox[{"2", "*", "\[Pi]", "*", "C1"}], "]"}]}], "}"}]}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"C2", ",", 
               RowBox[{"-", "1"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"C2", ",", 
               RowBox[{"etaGOsc2", "[", 
                RowBox[{"2", "*", "\[Pi]", "*", "C2"}], "]"}]}], "}"}]}], 
            "}"}]}], "}"}], ",", 
         RowBox[{"Joined", "->", "True"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Dashed", ",", "DefaultOrange"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"Dashed", ",", "DefaultGreen"}], "}"}]}], "}"}]}]}], 
        "]"}]}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Plotting", " ", "the", " ", "lower", " ", "panel"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"t", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"SGCon", "[", 
        RowBox[{"2", "*", "\[Pi]", "*", "x"}], "]"}], ",", 
       RowBox[{"SGOsc", "[", 
        RowBox[{"2", "*", "\[Pi]", "*", "x"}], "]"}], ",", 
       RowBox[{"SGOsc2", "[", 
        RowBox[{"2", "*", "\[Pi]", "*", "x"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "420", ",", "760"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Automatic", ",", "Automatic"}], "}"}]}], ",", 
     RowBox[{"BaseStyle", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"FontFamily", "->", "\"\<Times New Roman\>\""}], ",", "13"}], 
       "}"}]}], ",", 
     RowBox[{"Ticks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"C1", ",", 
            RowBox[{"Round", "[", "C1", "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"C2", ",", 
            RowBox[{"Round", "[", "C2", "]"}]}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"4", ",", "4"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"8", ",", "8"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"12", ",", "12"}], "}"}]}], "}"}]}], "}"}]}], ",", 
     RowBox[{"AspectRatio", "->", "0.618"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p2", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"p", ",", 
     RowBox[{"Joined", "->", "True"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Dashed", ",", "DefaultOrange"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Dashed", ",", "DefaultGreen"}], "}"}]}], "}"}]}]}], "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Sp2I", "=", 
    RowBox[{"Show", "[", 
     RowBox[{"{", 
      RowBox[{"t", ",", "p2"}], "}"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Sp2F", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"SGCon", "[", 
        RowBox[{"2", "*", "\[Pi]", "*", "x"}], "]"}], ",", 
       RowBox[{"SGOsc", "[", 
        RowBox[{"2", "*", "\[Pi]", "*", "x"}], "]"}], ",", 
       RowBox[{"SGOsc2", "[", 
        RowBox[{"2", "*", "\[Pi]", "*", "x"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "200", ",", "1500"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"Ticks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"None", ",", "Automatic"}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Automatic", ",", "Automatic", ",", "Automatic"}], "}"}]}], 
     ",", 
     RowBox[{"BaseStyle", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"FontFamily", "->", "\"\<Times New Roman\>\""}], ",", "16"}], 
       "}"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Sp2F", " ", "=", 
   RowBox[{"Show", "[", 
    RowBox[{"{", 
     RowBox[{"Sp2F", ",", 
      RowBox[{"ListPlot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"C1", ",", 
              RowBox[{"-", "1"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"C1", ",", "32"}], "}"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"C2", ",", 
              RowBox[{"-", "1"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"C2", ",", "32"}], "}"}]}], "}"}]}], "}"}], ",", 
        RowBox[{"Joined", "->", "True"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Dashed", ",", "DefaultOrange"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"Dashed", ",", "DefaultGreen"}], "}"}]}], "}"}]}]}], 
       "]"}]}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Sp2", "=", 
    RowBox[{"Show", "[", 
     RowBox[{"Sp2F", ",", 
      RowBox[{"Epilog", "->", 
       RowBox[{"Inset", "[", 
        RowBox[{"Sp2I", ",", 
         RowBox[{"{", 
          RowBox[{"860", ",", "7"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"480", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"680", ",", "Automatic"}], "}"}]}], "]"}]}], ",", 
      RowBox[{"ImagePadding", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"60", ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"45", ",", "5"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"0.618", "/", "1.5"}]}], ",", 
      RowBox[{"Frame", "->", "True"}], ",", 
      RowBox[{"FrameLabel", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Row", "[", 
          RowBox[{"{", 
           RowBox[{"\"\<\[CapitalOmega] \>\"", ",", " ", "\"\<(MHz)\>\""}], 
           "}"}], "]"}], ",", 
         RowBox[{"Row", "[", 
          RowBox[{"{", 
           RowBox[{"S", ",", "\"\<(\>\"", ",", 
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Omega]", ",", "\"\<m\>\""}], "]"}], ",", 
            "\"\<)\>\""}], "}"}], "]"}]}], "}"}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Combining", " ", "figures"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Sp", "=", 
   RowBox[{"Multicolumn", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Sp1", ",", "Sp2"}], "}"}], ",", "1", ",", 
     RowBox[{"Spacings", "->", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Fig2P", "=", 
  RowBox[{"Legended", "[", 
   RowBox[{"Sp", ",", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"LineLegend", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"DefaultBlue", ",", "DefaultOrange", ",", "DefaultGreen"}], 
         "}"}], ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"#", ",", 
            RowBox[{"FontFamily", " ", "->", " ", "\"\<Times New Roman\>\""}],
             ",", " ", "14"}], "]"}], "&"}], "/@", 
         RowBox[{"{", 
          RowBox[{
          "\"\<Constant\>\"", ",", "\"\<PD, N=1\>\"", ",", 
           "\"\<PD, N=2\>\""}], "}"}]}], ",", 
        RowBox[{"LegendLayout", "\[Rule]", "\"\<Row\>\""}]}], "]"}], ",", " ",
       "Top"}], "]"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.86175498603572*^9, 3.861754986699893*^9}, {
   3.8618111602607956`*^9, 3.861811248936431*^9}, {3.8618112834917717`*^9, 
   3.861811400967708*^9}, {3.8618114375128345`*^9, 3.861811545206687*^9}, {
   3.861811608522709*^9, 3.8618117301743536`*^9}, {3.861811779470179*^9, 
   3.861811779642055*^9}, {3.8618118132358584`*^9, 3.861811813378867*^9}, {
   3.861811855237467*^9, 3.861811855393717*^9}, {3.8618119404786744`*^9, 
   3.8618119514885015`*^9}, {3.8618119817597446`*^9, 3.861812035238456*^9}, {
   3.861812086890439*^9, 3.8618120943819313`*^9}, {3.8618121325388775`*^9, 
   3.8618121354056797`*^9}, {3.861812175529498*^9, 3.8618121826729155`*^9}, 
   3.861812217212578*^9, {3.861812306617135*^9, 3.861812342558804*^9}, {
   3.8618123827956743`*^9, 3.8618126237388744`*^9}, {3.861812661911321*^9, 
   3.861812769022292*^9}, {3.8618129747811537`*^9, 3.8618130442916784`*^9}, 
   3.861813894321217*^9, {3.869764036555028*^9, 3.869764087077553*^9}, {
   3.869768595348273*^9, 3.8697687447170115`*^9}, {3.8697764744030914`*^9, 
   3.8697765415972633`*^9}, {3.86977753588618*^9, 3.869777609213359*^9}, {
   3.8697776673670406`*^9, 3.869777840975981*^9}, {3.869777911389311*^9, 
   3.8697779867664576`*^9}, {3.8697780235201607`*^9, 3.869778145863102*^9}, {
   3.869778249674358*^9, 3.8697782500114255`*^9}, {3.869854239102274*^9, 
   3.869854320521121*^9}, {3.8702842710809507`*^9, 3.870284271776635*^9}, {
   3.870284312174067*^9, 
   3.870284327097454*^9}},ExpressionUUID->"ad611b00-99c5-4bb4-9755-\
0510dd9b3e81"],

Cell[BoxData[
 TemplateBox[{
   TagBox[
    GridBox[{{
       TagBox[
        GraphicsBox[{{{{{{}, {}, 
              TagBox[{
                Directive[
                 Opacity[1.], 
                 RGBColor[0.368417, 0.506779, 0.709798], 
                 AbsoluteThickness[1.6]], 
                LineBox[CompressedData["
1:eJwVzXk41Akcx/EhtI2jJGcaJY+YRGlTKn2/2WpLT7WupbHFOsogR6Z2I0yO
5FqM46fY1DNZtBNTadXSYdowy2iMyGjG/Eo5Khs6NTI7/fF53s/rr8+y4Biv
ME0KhbJHva8tSeOup1CY2DJNuSsAPvBqfKIEekwcMyYdL+zlg0CkfTHdnIne
qxbopB7gw4RpOHXeWib+x6Y+8UrkgwfPQW54iIkpXO0Gu0Y+zD66kbq8k4m8
wNa2i05X4bBtu2hHWQRaWyZfq1t+DVyFr0PyVkehdLK29qBpA5S/v80VVsXg
76Nehjrsm2CxzMDIMTYOZ6oqjLPbm8Gde2U8QDseBxjW9bLse9BuZuj1tJmF
/6ZbN3WMCIBJa3ps6HccRzWV3PYlD4Bpaj9y1uhXTPGsClmS0gbbo+YW6LSf
wMCjY4bpnULY5OnAoAUmorkvkTwz3AEF9sZ1eWZJqBll31Nk1QUUzrblNQ3J
WDKn2P7jAjHYrpwq87Zho9ErJ0a1VjcodWxeJKvYmJgkN1s4RwKD9OkWVccp
zNkXVtk6LIHYnfwQXm0qxs1+gwpJD0wUWXntTktDN41LS4X1jyBphXM37E3H
MG3v1S6sXvi7wdY4iJ6BNBala2ZLH2hl3xnr/ZiBL82UYvlUH3zx35D2S99p
FPL+0B/68zE8941g6l7NRFqfSfCYXz9IzwH57uQZvJoiXmw30Q9J0g+LqYws
3DQpPFyVKwWnIM9Rll02LmvOHF5kOgAPF4VqSKay0XPCUu8DMQC0+/4KRlcO
PlPWaqVZPoGEWxN7XMtz8cyrz5N3Cp/A6dqIU9+dyMOCJHaNLVUG7LYKDfT+
Dc2vO5ynJMggc9XRhRxaPtJnJzunZTJwy7Mfna/MR/08BlfkLge2hXt1XGgB
Ph26lqqskMP+jA62j7AAo+PZhUaTcqCOP9gscilEVy1GWuv3gyD4ZNgyUVGI
u/LTY7nFg+Cp8XDFZV0OelB+au0ZGoSRK/IfDeI5+DmnLN2SrgBW3E5eZD8H
LWPi49sjFSBdY/P84I4iXKnUdzpXr4BtpZ7PZ3hF+HS87bHilQIyP75pXW1Z
jG3NIyKqMQktMS8fHsgqxoxC+0pzZxI0c10urntTjLmOrMb3u0mwqHrrwz1Q
gjMfIs42HiLBNVizu+mfEswIaArKTyZhn8uReJF9KWYHvV06XkyC29xdn1hE
Ke48d0xlxSPB+eTx7W1fSnFPtmJWco8EtnibXYGqFJO6GZGrWkgQ2Rjp7tcg
cLC8pDVT7XBRvfilFoG0tYxdmwUknKeNBRjoEViWwGFfuk/CvJaAo74WBA44
+9yKayWB1N5aOeRCIIufGavqIMGRMT+Vt4HA2sb+Zr9OEhLr5KHHNhL4eTji
U73aJn4J9LlbCEyuCXYLEpGwu+b6Dfp2ArOGDFR3u0j4y8O2M86bwB49cejJ
bhK0Kt/VbfQlUCo2qO5R2/OtoHCOH4ELx0T9dAkJr8sD/UoYBDKaZFSp2tbj
Zc9u/qz+c7pc++0jEmK3Hn5wKoTAvhf+4Tlq3y5ZV+MRRmABrdrkmdr+WyRH
ZOEENpWvcc/vJaGKc+GHqggC9SuP3X2h9tRw9NroKAK1ueEOm/tIwE1uJuuj
CYxJN8jiqJ2XrzutiiFwnlVk76ja/wNbFGA9
                 "]]}, Annotation[#, "Charting`Private`Tag$86385#1"]& ], 
              TagBox[{
                Directive[
                 Opacity[1.], 
                 RGBColor[0.880722, 0.611041, 0.142051], 
                 AbsoluteThickness[1.6]], 
                LineBox[CompressedData["
1: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
Zn5rIo43v/mLXIsxYB+3ejWC4ysiJiIZr/F5oQ8a7o7F9X4Zk93lGMwb500d
w/Hm7rn/eN5ioNO13ohwfEXN4PGJGgzK/mgvy/1fn5Ti41+PgYHVcMYCnm/T
/NiZlw0YrJTF/M7G8eULOtLDTXi/7/T+0cVx4au7q6KtGLwp91+txuvlEhhs
N2nH4FSeBJ8sjm08j7zAOjEQj/d19MT/r+ATjVTRg8GHekX5TNwPLuVei5k+
fB7rekkVuF82dxUPyX3HoI3A9bgc97NgMoTryk8MDrdK5KTjfnOd+9SfMIz3
Q9Cl+xaG6/OkShqZ+HvSgqZSeH8KeHxj1scwyL7OZ/SWTAROtwaHI5O4v5xy
s7rhRLD+KKrtMoOB0OPBwLwwInDQ3452LeF+jCovH8PnAzxlPM7/wWDK+DD1
KD4/wZb0xaZ1DO4qTxTtxOdrXvYSsZqTBonkqm2R3kRQ5q2M0tpCAzXRqBoR
TyK4LezlK+Ghgf9VhwOx7kQYqpuQyBGkAb1pt95+fN4l/72QKSNCgxOVOaFm
jng9CWUKaWI0CJCkxNs5EKHjGqaetJcGDx+iK2r4PtWuSZwPPUSDTjOoq8D3
bX2Y3L2sSoOKcpkuKWMiaDWzLnur00ClTUXYG9/PV6nFzk46NLgs99jqE77P
GRrGFLMzNEgIZtjSlIlA8gwqlb1Jg+dRrCwZHiJUWv48luFCg+mU8J16m4iw
jE7VibvTgPPZ9wcmBCJ48Ap+4vOlQVzcq7+Hlwlw9d+c0VUyDaQKZktVh/B7
9qtXou0JDXqCvr42wu/fmuVRyp1uGsjEKAmPmOH3dk97x89eGvSORx70NSbA
MMtZyrgfj1dle/rnJAGa/R/W7Bmmgdfb1/FTRwmQmrK+8WGGBpZ2t1kBkgRQ
/1IfLLEtAji9r947zWIHDwtTvxq9CNgmVMp1zJ8dhs1dnLkLI+CDY/fwgwQ2
6E1FP+aDI+HjwOYHMvNrqPOOkpozKRL+E7CpVmKuodaLu+j9lEh44ZlQqNu3
hup5/xx+T48EGTs5IXL1GnpJLo1gpOC8Znfprdg1RHY5eEirOBI6Odq1FuXX
kKKWeGjY70hIv+OeMub4F4X0LopvtY4CkzP9+2LWV1GKnnyD3pUo6Oc8W5Y0
v4pe5Vl5hVyLgq3FS7ueja0iVnhl47RjFAxOnjfu715FF/eTfXu8o0BPtKQj
J38V7Q/a1pYVGwU8t+TYX9uvom4JGTKqiQJbPk4h39YVdOiaKctHng71HTPf
vCuWEeHfkstPFOkgzCmC+RYto84F0fYGJTpcn+qghPy7jAKiB8vE1OhQeOq6
R/rDZVRX6h1drUuH1xYKvirBy8hiW7ISjw0d/J43/hN0fBmFlff5ZMbS4Ulm
c3xMwxJqE7rO3jFLB9ql7YHUsUUUyfwqA4t4vPPo0RtDi+hE+QXDlyt0OP6h
bvbMt0VUfFXvLp0tGjKivJBi6yJKyZHapccbDSqtUfeVXy0ie/h5tFghGjbY
H241DVpEi662HsnXoqFSt+N9Nf8ikqyzHLBujYYViaAwhXMLaFlK0CquPRrs
7Ipa3xkuoHZyS0dNZzTw+TnKWustIOqJE+/lv0ZDSeKHgdSjC2isRjFvkRkN
W0qUtxtLL6CS6vXABPYYkHtjLeCyMo+M32YJNx2JAUQwXgvMnkeBZdNnNR/G
wKk7B5hK/PNIK+OtX+GTGDj76h+KEc88Wo2MSVN4GgNFef98dd40j4Is5WdE
X8SA6ypPftHaHApeupq0WhoDp89qB3qPzaEQtba+io4YsFKKdkyvn0Okwryb
x7fGQpbKcUZy0ByivXAJ1wuIhcosex/NuVm07unq/W9wLFzrevlMe2oW+Wm5
3RAkxQLm55QFv2eR48dbp4dosbAo67ZhNjSLTk548FOSYkHxuNXPlM+ziEPl
TkZtfixIajVzPy+eRZQ3lBrdkVjYHfTOuMJ/FpEaHrHDhTiYVc0WQ5tnUcRB
L4EEybvw7kmaPunsDNKJVWBt/3MX4q+qPHJMm0YksRPPPa/HA8szQ+KZwDSy
wj6SLn6IBxWb0J+zqlNo68R/x1rU70HCuzZ0+cwkql3mr5l+dA+mIpMsuWMm
kCl7m1wOdwIcCaOuuHweR8y8/ku83gmQdP5Kra7mOPLxNMx1/ZIA0fG6v1sK
fqNeFZlhW4NESLLafY9D8TfSTzYd/pubCDap1WoNZWMoYmnqvbJEEvDK0yUk
jMZQze2xtitRSWBml11rMDKKCDHqGWpTSRCjI5j4LX4UiT2bu5h55T6Y930n
vdIeRZr2hPaK+vtQPZzf7zbLQibqt7xbFJLh4fc7lp/zWUhn0+llH0YyLG8b
5u9yYyHVYL+TDWvJcDKzSfa9KguRPunLx28kwxkzjLNZhYVaZAS5rdgZkBwT
p9KhzEJOLfmfxjgYoLbG5TmgxEJPJEdteHkYsGIzHrW2n4W21Nh4mYsxgAI5
XIbSLPSDUzdtSJ0BttQ3hjuEWEjJejs59ygDSg4O3ZMRZKGgl/3XfbUYsGfe
VOaIAAsJWwTu33ScAYEHw2Qu8rHQmeyikv0nGWB/syiOwcNCpUayzZ4XGCDr
ljilyMlCHGnzL7XMGcCjGPEWcbCQ6VztPaIFA05v6+y8QGSh8YdXLe5b4/oG
tp5gdhaSmkgZfGPHgDR/W6WONSby0L35X7gDA9wMPh9h/WWiqvtq2UY3GOC6
XBi+/oeJLI933PrmxIDEJ+qTiqtM9Cwh/fwzFwZ8xTK26a0w0eyI+2F3NwZ4
arB5Wy8zEWjrCGu4M4DDXE3Sa4mJYu9yr2zcxv2Kl95OX2Si/wGPXS4F
                 "]]}, Annotation[#, "Charting`Private`Tag$86385#2"]& ], 
              TagBox[{
                Directive[
                 Opacity[1.], 
                 RGBColor[0.560181, 0.691569, 0.194885], 
                 AbsoluteThickness[1.6]], 
                LineBox[CompressedData["
1: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
63HR/wCHqzxi
                 "]]}, Annotation[#, "Charting`Private`Tag$86385#3"]& ], 
              TagBox[{
                Directive[
                 Opacity[1.], 
                 AbsoluteThickness[1.6], 
                 Dashing[{Small, Small}], 
                 GrayLevel[0]], 
                LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQPbV5sTkDQ6YDAxh8sE9XO3HWbUYWnG958k1yr0EO
nD/7697FJ5fmw/lSinzCegWFcL7T4rVvo1mL4fwTEoJBD/eUwPmZcruvC4aX
Ifjims9nClfA+a457BPYTlTC+daBOlFy8dVw/gRN0XW9ErVwPsMkF+UVW+rg
fDXtTzOCVRrg/N9sKk/r/iP497R+Hvx/uhHOL/DYkLxmZROc/2GyfJB3czOc
X6tudNHerwXO37VFTTRBqxXOZ+na9/LqdwT/b4RFc/m1Njj/SWhWJvfGdjj/
5iz7B19qOhDm3/wmzRXVCefrJwS+KNHogvPPi6QwXvqE4Msdjrgfda4bzq/a
+cHXcnYPnN+2MqvRubIXzm84PofRIbgPzm/XLRKaJNcP59v2ar7g/43gN0g5
LS9MmQDnR7aebgg5ieBzvT1qc9ZsIpx/6IfgwQ9zEPxAxvPqq7gnwfnP194N
4ytG8EsKPdZk30DwbxqqPIlzmwznu0wLfPJnDYLf/v39MQOZKXD+wfxX52M7
EXymHrOFpu8RfKmln0MWx06F8y2TmC7uPoLg+5vlFp/VnIbwP7vnj5LpCL5R
TZnr8b8I/gNWx/mPzabD+b393D//5yP4AOch/UY=
                 "]]}, 
               Annotation[#, 
                "Charting`Private`Tag$86385#4"]& ]}}, {}}, {{}, {{{}, {}, {
               Hue[0.67, 0.6, 0.6], 
               Directive[
                PointSize[0.012833333333333334`], 
                AbsoluteThickness[1.6], 
                Dashing[{Small, Small}], 
                RGBColor[0.880722, 0.611041, 0.142051]], 
               
               LineBox[{{511.5462854897234, -1.}, {511.5462854897234, 
                0.6970877511586888}, {511.5462854897234, 
                0.6970877511586888}}]}, {
               Hue[0.9060679774997897, 0.6, 0.6], 
               Directive[
                PointSize[0.012833333333333334`], 
                AbsoluteThickness[1.6], 
                Dashing[{Small, Small}], 
                RGBColor[0.560181, 0.691569, 0.194885]], 
               
               LineBox[{{636.3186557876321, -1.}, {636.3186557876321, 
                0.9316932259769687}, {636.3186557876321, 
                0.9316932259769687}}]}}}, {{}, {}}}}, {
           InsetBox[
            FormBox[
             TemplateBox[{
               StyleBox[
                TemplateBox[{"\[Eta]", "\"(\"", 
                  SubscriptBox["\"\[Omega]\"", "\"m\""], "\")=1\""}, 
                 "RowDefault"], FontFamily -> "Times New Roman", 14, 
                StripOnInput -> False]}, "LineLegend", 
              DisplayFunction -> (FormBox[
                StyleBox[
                 StyleBox[
                  PaneBox[
                   TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                   ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                   "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                 FontFamily -> "Arial"}, Background -> Automatic, 
                 StripOnInput -> False], TraditionalForm]& ), 
              InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"], "}"}], ",", 
                   RowBox[{"{", #, "}"}]}], "]"}]& ), Editable -> True], 
             TraditionalForm], 
            Scaled[{0.07, 0.5}], 
            ImageScaled[{0.5, 0.5}], FormatType -> StandardForm, 
            BaseStyle -> {FontSize -> Larger}]}}, {
         DisplayFunction -> Identity, DisplayFunction -> Identity, 
          Ticks -> {{}, Automatic}, AxesOrigin -> {200.00000000000045`, 0}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {None, None}, DisplayFunction -> Identity, 
          PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.05], 
             Scaled[0.05]}}, PlotRangeClipping -> True, 
          ImagePadding -> {{60, 2}, {1, 6}}, DisplayFunction -> Identity, 
          AspectRatio -> 0.412, Axes -> {True, True}, 
          AxesLabel -> {None, None}, AxesOrigin -> {200., 0}, 
          BaseStyle -> {FontFamily -> "Times New Roman", 16}, DisplayFunction :> 
          Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
             FormBox[
              TemplateBox[{"\"\[Eta](\"", 
                SubscriptBox["\[Omega]", "\"m\""], "\")\""}, "RowDefault"], 
              TraditionalForm], None}, {"", None}}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {None, None}, GridLinesStyle -> Directive[
            GrayLevel[0.5, 0.4]], ImagePadding -> {{60, 2}, {1, 6}}, 
          ImageSize -> 400, 
          Method -> {
           "DefaultBoundaryStyle" -> Automatic, 
            "DefaultGraphicsInteraction" -> {
             "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
              "Effects" -> {
               "Highlight" -> {"ratio" -> 2}, 
                "HighlightPoint" -> {"ratio" -> 2}, 
                "Droplines" -> {
                 "freeformCursorMode" -> True, 
                  "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
            "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
            None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& )}}, 
          PlotRange -> {{200, 1500}, {0., 2.443969316746602}}, 
          PlotRangeClipping -> True, PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.02], 
             Scaled[0.02]}}, Ticks -> {None, Automatic}}], 
        InterpretTemplate[Legended[
          Graphics[{{{{{}, {}, 
               Annotation[{
                 Directive[
                  Opacity[1.], 
                  RGBColor[0.368417, 0.506779, 0.709798], 
                  AbsoluteThickness[1.6]], 
                 Line[CompressedData["
1:eJwVzXk41Akcx/EhtI2jJGcaJY+YRGlTKn2/2WpLT7WupbHFOsogR6Z2I0yO
5FqM46fY1DNZtBNTadXSYdowy2iMyGjG/Eo5Khs6NTI7/fF53s/rr8+y4Biv
ME0KhbJHva8tSeOup1CY2DJNuSsAPvBqfKIEekwcMyYdL+zlg0CkfTHdnIne
qxbopB7gw4RpOHXeWib+x6Y+8UrkgwfPQW54iIkpXO0Gu0Y+zD66kbq8k4m8
wNa2i05X4bBtu2hHWQRaWyZfq1t+DVyFr0PyVkehdLK29qBpA5S/v80VVsXg
76Nehjrsm2CxzMDIMTYOZ6oqjLPbm8Gde2U8QDseBxjW9bLse9BuZuj1tJmF
/6ZbN3WMCIBJa3ps6HccRzWV3PYlD4Bpaj9y1uhXTPGsClmS0gbbo+YW6LSf
wMCjY4bpnULY5OnAoAUmorkvkTwz3AEF9sZ1eWZJqBll31Nk1QUUzrblNQ3J
WDKn2P7jAjHYrpwq87Zho9ErJ0a1VjcodWxeJKvYmJgkN1s4RwKD9OkWVccp
zNkXVtk6LIHYnfwQXm0qxs1+gwpJD0wUWXntTktDN41LS4X1jyBphXM37E3H
MG3v1S6sXvi7wdY4iJ6BNBala2ZLH2hl3xnr/ZiBL82UYvlUH3zx35D2S99p
FPL+0B/68zE8941g6l7NRFqfSfCYXz9IzwH57uQZvJoiXmw30Q9J0g+LqYws
3DQpPFyVKwWnIM9Rll02LmvOHF5kOgAPF4VqSKay0XPCUu8DMQC0+/4KRlcO
PlPWaqVZPoGEWxN7XMtz8cyrz5N3Cp/A6dqIU9+dyMOCJHaNLVUG7LYKDfT+
Dc2vO5ynJMggc9XRhRxaPtJnJzunZTJwy7Mfna/MR/08BlfkLge2hXt1XGgB
Ph26lqqskMP+jA62j7AAo+PZhUaTcqCOP9gscilEVy1GWuv3gyD4ZNgyUVGI
u/LTY7nFg+Cp8XDFZV0OelB+au0ZGoSRK/IfDeI5+DmnLN2SrgBW3E5eZD8H
LWPi49sjFSBdY/P84I4iXKnUdzpXr4BtpZ7PZ3hF+HS87bHilQIyP75pXW1Z
jG3NIyKqMQktMS8fHsgqxoxC+0pzZxI0c10urntTjLmOrMb3u0mwqHrrwz1Q
gjMfIs42HiLBNVizu+mfEswIaArKTyZhn8uReJF9KWYHvV06XkyC29xdn1hE
Ke48d0xlxSPB+eTx7W1fSnFPtmJWco8EtnibXYGqFJO6GZGrWkgQ2Rjp7tcg
cLC8pDVT7XBRvfilFoG0tYxdmwUknKeNBRjoEViWwGFfuk/CvJaAo74WBA44
+9yKayWB1N5aOeRCIIufGavqIMGRMT+Vt4HA2sb+Zr9OEhLr5KHHNhL4eTji
U73aJn4J9LlbCEyuCXYLEpGwu+b6Dfp2ArOGDFR3u0j4y8O2M86bwB49cejJ
bhK0Kt/VbfQlUCo2qO5R2/OtoHCOH4ELx0T9dAkJr8sD/UoYBDKaZFSp2tbj
Zc9u/qz+c7pc++0jEmK3Hn5wKoTAvhf+4Tlq3y5ZV+MRRmABrdrkmdr+WyRH
ZOEENpWvcc/vJaGKc+GHqggC9SuP3X2h9tRw9NroKAK1ueEOm/tIwE1uJuuj
CYxJN8jiqJ2XrzutiiFwnlVk76ja/wNbFGA9
                  "]]}, "Charting`Private`Tag$86385#1"], 
               Annotation[{
                 Directive[
                  Opacity[1.], 
                  RGBColor[0.880722, 0.611041, 0.142051], 
                  AbsoluteThickness[1.6]], 
                 Line[CompressedData["
1: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
Zn5rIo43v/mLXIsxYB+3ejWC4ysiJiIZr/F5oQ8a7o7F9X4Zk93lGMwb500d
w/Hm7rn/eN5ioNO13ohwfEXN4PGJGgzK/mgvy/1fn5Ti41+PgYHVcMYCnm/T
/NiZlw0YrJTF/M7G8eULOtLDTXi/7/T+0cVx4au7q6KtGLwp91+txuvlEhhs
N2nH4FSeBJ8sjm08j7zAOjEQj/d19MT/r+ATjVTRg8GHekX5TNwPLuVei5k+
fB7rekkVuF82dxUPyX3HoI3A9bgc97NgMoTryk8MDrdK5KTjfnOd+9SfMIz3
Q9Cl+xaG6/OkShqZ+HvSgqZSeH8KeHxj1scwyL7OZ/SWTAROtwaHI5O4v5xy
s7rhRLD+KKrtMoOB0OPBwLwwInDQ3452LeF+jCovH8PnAzxlPM7/wWDK+DD1
KD4/wZb0xaZ1DO4qTxTtxOdrXvYSsZqTBonkqm2R3kRQ5q2M0tpCAzXRqBoR
TyK4LezlK+Ghgf9VhwOx7kQYqpuQyBGkAb1pt95+fN4l/72QKSNCgxOVOaFm
jng9CWUKaWI0CJCkxNs5EKHjGqaetJcGDx+iK2r4PtWuSZwPPUSDTjOoq8D3
bX2Y3L2sSoOKcpkuKWMiaDWzLnur00ClTUXYG9/PV6nFzk46NLgs99jqE77P
GRrGFLMzNEgIZtjSlIlA8gwqlb1Jg+dRrCwZHiJUWv48luFCg+mU8J16m4iw
jE7VibvTgPPZ9wcmBCJ48Ap+4vOlQVzcq7+Hlwlw9d+c0VUyDaQKZktVh/B7
9qtXou0JDXqCvr42wu/fmuVRyp1uGsjEKAmPmOH3dk97x89eGvSORx70NSbA
MMtZyrgfj1dle/rnJAGa/R/W7Bmmgdfb1/FTRwmQmrK+8WGGBpZ2t1kBkgRQ
/1IfLLEtAji9r947zWIHDwtTvxq9CNgmVMp1zJ8dhs1dnLkLI+CDY/fwgwQ2
6E1FP+aDI+HjwOYHMvNrqPOOkpozKRL+E7CpVmKuodaLu+j9lEh44ZlQqNu3
hup5/xx+T48EGTs5IXL1GnpJLo1gpOC8Znfprdg1RHY5eEirOBI6Odq1FuXX
kKKWeGjY70hIv+OeMub4F4X0LopvtY4CkzP9+2LWV1GKnnyD3pUo6Oc8W5Y0
v4pe5Vl5hVyLgq3FS7ueja0iVnhl47RjFAxOnjfu715FF/eTfXu8o0BPtKQj
J38V7Q/a1pYVGwU8t+TYX9uvom4JGTKqiQJbPk4h39YVdOiaKctHng71HTPf
vCuWEeHfkstPFOkgzCmC+RYto84F0fYGJTpcn+qghPy7jAKiB8vE1OhQeOq6
R/rDZVRX6h1drUuH1xYKvirBy8hiW7ISjw0d/J43/hN0fBmFlff5ZMbS4Ulm
c3xMwxJqE7rO3jFLB9ql7YHUsUUUyfwqA4t4vPPo0RtDi+hE+QXDlyt0OP6h
bvbMt0VUfFXvLp0tGjKivJBi6yJKyZHapccbDSqtUfeVXy0ie/h5tFghGjbY
H241DVpEi662HsnXoqFSt+N9Nf8ikqyzHLBujYYViaAwhXMLaFlK0CquPRrs
7Ipa3xkuoHZyS0dNZzTw+TnKWustIOqJE+/lv0ZDSeKHgdSjC2isRjFvkRkN
W0qUtxtLL6CS6vXABPYYkHtjLeCyMo+M32YJNx2JAUQwXgvMnkeBZdNnNR/G
wKk7B5hK/PNIK+OtX+GTGDj76h+KEc88Wo2MSVN4GgNFef98dd40j4Is5WdE
X8SA6ypPftHaHApeupq0WhoDp89qB3qPzaEQtba+io4YsFKKdkyvn0Okwryb
x7fGQpbKcUZy0ByivXAJ1wuIhcosex/NuVm07unq/W9wLFzrevlMe2oW+Wm5
3RAkxQLm55QFv2eR48dbp4dosbAo67ZhNjSLTk548FOSYkHxuNXPlM+ziEPl
TkZtfixIajVzPy+eRZQ3lBrdkVjYHfTOuMJ/FpEaHrHDhTiYVc0WQ5tnUcRB
L4EEybvw7kmaPunsDNKJVWBt/3MX4q+qPHJMm0YksRPPPa/HA8szQ+KZwDSy
wj6SLn6IBxWb0J+zqlNo68R/x1rU70HCuzZ0+cwkql3mr5l+dA+mIpMsuWMm
kCl7m1wOdwIcCaOuuHweR8y8/ku83gmQdP5Kra7mOPLxNMx1/ZIA0fG6v1sK
fqNeFZlhW4NESLLafY9D8TfSTzYd/pubCDap1WoNZWMoYmnqvbJEEvDK0yUk
jMZQze2xtitRSWBml11rMDKKCDHqGWpTSRCjI5j4LX4UiT2bu5h55T6Y930n
vdIeRZr2hPaK+vtQPZzf7zbLQibqt7xbFJLh4fc7lp/zWUhn0+llH0YyLG8b
5u9yYyHVYL+TDWvJcDKzSfa9KguRPunLx28kwxkzjLNZhYVaZAS5rdgZkBwT
p9KhzEJOLfmfxjgYoLbG5TmgxEJPJEdteHkYsGIzHrW2n4W21Nh4mYsxgAI5
XIbSLPSDUzdtSJ0BttQ3hjuEWEjJejs59ygDSg4O3ZMRZKGgl/3XfbUYsGfe
VOaIAAsJWwTu33ScAYEHw2Qu8rHQmeyikv0nGWB/syiOwcNCpUayzZ4XGCDr
ljilyMlCHGnzL7XMGcCjGPEWcbCQ6VztPaIFA05v6+y8QGSh8YdXLe5b4/oG
tp5gdhaSmkgZfGPHgDR/W6WONSby0L35X7gDA9wMPh9h/WWiqvtq2UY3GOC6
XBi+/oeJLI933PrmxIDEJ+qTiqtM9Cwh/fwzFwZ8xTK26a0w0eyI+2F3NwZ4
arB5Wy8zEWjrCGu4M4DDXE3Sa4mJYu9yr2zcxv2Kl95OX2Si/wGPXS4F
                  "]]}, "Charting`Private`Tag$86385#2"], 
               Annotation[{
                 Directive[
                  Opacity[1.], 
                  RGBColor[0.560181, 0.691569, 0.194885], 
                  AbsoluteThickness[1.6]], 
                 Line[CompressedData["
1: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
63HR/wCHqzxi
                  "]]}, "Charting`Private`Tag$86385#3"], 
               Annotation[{
                 Directive[
                  Opacity[1.], 
                  AbsoluteThickness[1.6], 
                  Dashing[{Small, Small}], 
                  GrayLevel[0]], 
                 Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQPbV5sTkDQ6YDAxh8sE9XO3HWbUYWnG958k1yr0EO
nD/7697FJ5fmw/lSinzCegWFcL7T4rVvo1mL4fwTEoJBD/eUwPmZcruvC4aX
Ifjims9nClfA+a457BPYTlTC+daBOlFy8dVw/gRN0XW9ErVwPsMkF+UVW+rg
fDXtTzOCVRrg/N9sKk/r/iP497R+Hvx/uhHOL/DYkLxmZROc/2GyfJB3czOc
X6tudNHerwXO37VFTTRBqxXOZ+na9/LqdwT/b4RFc/m1Njj/SWhWJvfGdjj/
5iz7B19qOhDm3/wmzRXVCefrJwS+KNHogvPPi6QwXvqE4Msdjrgfda4bzq/a
+cHXcnYPnN+2MqvRubIXzm84PofRIbgPzm/XLRKaJNcP59v2ar7g/43gN0g5
LS9MmQDnR7aebgg5ieBzvT1qc9ZsIpx/6IfgwQ9zEPxAxvPqq7gnwfnP194N
4ytG8EsKPdZk30DwbxqqPIlzmwznu0wLfPJnDYLf/v39MQOZKXD+wfxX52M7
EXymHrOFpu8RfKmln0MWx06F8y2TmC7uPoLg+5vlFp/VnIbwP7vnj5LpCL5R
TZnr8b8I/gNWx/mPzabD+b393D//5yP4AOch/UY=
                  "]]}, 
                "Charting`Private`Tag$86385#4"]}}, {}}, {{}, {{{}, {}, {
                Hue[0.67, 0.6, 0.6], 
                Directive[
                 PointSize[0.012833333333333334`], 
                 AbsoluteThickness[1.6], 
                 Dashing[{Small, Small}], 
                 RGBColor[0.880722, 0.611041, 0.142051]], 
                
                Line[{{511.5462854897234, -1.}, {511.5462854897234, 
                 0.6970877511586888}, {511.5462854897234, 
                 0.6970877511586888}}]}, {
                Hue[0.9060679774997897, 0.6, 0.6], 
                Directive[
                 PointSize[0.012833333333333334`], 
                 AbsoluteThickness[1.6], 
                 Dashing[{Small, Small}], 
                 RGBColor[0.560181, 0.691569, 0.194885]], 
                
                Line[{{636.3186557876321, -1.}, {636.3186557876321, 
                 0.9316932259769687}, {636.3186557876321, 
                 0.9316932259769687}}]}}}, {{}, {}}}}, {
           DisplayFunction -> Identity, Ticks -> {{}, Automatic}, 
            AxesOrigin -> {200.00000000000045`, 0}, 
            FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
            GridLines -> {None, None}, DisplayFunction -> Identity, 
            PlotRangePadding -> {{
               Scaled[0.02], 
               Scaled[0.02]}, {
               Scaled[0.05], 
               Scaled[0.05]}}, PlotRangeClipping -> True, 
            ImagePadding -> {{60, 2}, {1, 6}}, DisplayFunction -> Identity, 
            AspectRatio -> 0.412, Axes -> {True, True}, 
            AxesLabel -> {None, None}, AxesOrigin -> {200., 0}, 
            BaseStyle -> {FontFamily -> "Times New Roman", 16}, 
            DisplayFunction :> Identity, 
            Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
               Row[{"\[Eta](", 
                 Subscript[$CellContext`\[Omega], "m"], ")"}], None}, {
              Null, None}}, 
            FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
            GridLines -> {None, None}, GridLinesStyle -> Directive[
              GrayLevel[0.5, 0.4]], ImagePadding -> {{60, 2}, {1, 6}}, 
            ImageSize -> 400, 
            Method -> {
             "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
              None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                  (Identity[#]& )[
                   Part[#, 1]], 
                  (Identity[#]& )[
                   Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                  (Identity[#]& )[
                   Part[#, 1]], 
                  (Identity[#]& )[
                   Part[#, 2]]}& )}}, 
            PlotRange -> {{200, 1500}, {0., 2.443969316746602}}, 
            PlotRangeClipping -> True, PlotRangePadding -> {{
               Scaled[0.02], 
               Scaled[0.02]}, {
               Scaled[0.02], 
               Scaled[0.02]}}, Ticks -> {None, Automatic}}], 
          Placed[
           Unevaluated[
            LineLegend[{
              GrayLevel[1]}, {
              Style[
               Row[{$CellContext`\[Eta], "(", 
                 Subscript["\[Omega]", "m"], ")=1"}], FontFamily -> 
               "Times New Roman", 14]}]], {0.07, 0.5}, Identity]]& ], 
        Editable -> True, Selectable -> True, SelectWithContents -> False, 
        AutoDelete -> True]}, {
       GraphicsBox[{{{{{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1: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
               "]]}, Annotation[#, "Charting`Private`Tag$87480#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1: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
94CLJP4H1ZqtEw==
               "]]}, Annotation[#, "Charting`Private`Tag$87480#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1: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
               "]]}, 
             Annotation[#, 
              "Charting`Private`Tag$87480#3"]& ]}}, {}}, {{}, {{{}, {}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[0.012833333333333334`], 
              AbsoluteThickness[1.6], 
              Dashing[{Small, Small}], 
              RGBColor[0.880722, 0.611041, 0.142051]], 
             
             LineBox[{{511.5462854897234, -1.}, {511.5462854897234, 32.}, {
              511.5462854897234, 32.}}]}, {
             Hue[0.9060679774997897, 0.6, 0.6], 
             Directive[
              PointSize[0.012833333333333334`], 
              AbsoluteThickness[1.6], 
              Dashing[{Small, Small}], 
              RGBColor[0.560181, 0.691569, 0.194885]], 
             
             LineBox[{{636.3186557876321, -1.}, {636.3186557876321, 32.}, {
              636.3186557876321, 32.}}]}}}, {{}, {}}}}, {Epilog -> InsetBox[
           GraphicsBox[{{{{{}, {}, 
                TagBox[{
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1.6]], 
                  LineBox[CompressedData["
1:eJwVzns0lAkABfAx7arpYb4Z85Bh0DSaXW2sWtJYXUUtLWqzk7bkNZFeLKV2
CGNmfG1mV3kkOtJw8ghTLOlFUg41UipELzmhVZQtj9Sys3/cc8/vnPvHtQqO
+Gk7lUKheOnzfxvmrplJgQxj/SN1Uc9EWGLUIix1leFm6nmaoluETQkb3CSr
ZZDYzAnP6BChOGirvGyNDNff06WXW0XwsI765OclQ3FrA4yviaA+l/u24hcZ
Wn4txUSeCMyGD50h+2Wosam5rg4WgT+QX9x0VobBtQKFbnARJEzP3CP8WJjP
i96S8sEajn0OFzRHYkF5HZpG4VvDpZk9I+dDLI5yKxT9fkJsV68s+CMsDgM8
S8Oqowvx3YQ2rP1+HOYEH6SdfiGA0D08wWTtIVh62DiW2QogzmfrnC8dwpaY
lPGRlAWYLJwprhbEY+pZUvvqz1boUrtNibLikR6t2pkeboUg06a+d9QEHHxK
sUl9ZQn6RbFBzu4EyOoIzUSkJZ46fIpweZ4A+bVi58Y3FihZkijnCRNh6sN5
o2RZYL998T52QCL671p03XLgw9fllgHlRCLWn/mTNzfcHDP58zSsO4nQHO7o
MvnLDJ57x/4uNJQjtnogonuch6A0qnuIsxwSey+L9xt4oC2q8siNkSNn28Mf
lxWZ4uaNba+azsmRWvOo3HSWKTYuW5xt1ifHYIYv0Sabjyh23vthfhLiGx7M
Gnplgu23lwW+9k3C99P+gcIwE+wib4Q++j0JriNbPTKHuKBWj3NW30jCgbc5
+8ojuNhzwburcyIJdN/Tx2OmOdghWuc+aK9A/zrr1FUpHMTkY93QLgW6Aj/O
2sTnwO+dX4ipRgGxurCXW8uGTssRNnYrsC/8kQ/Pjw2m6/hENqHEWIBrWeu/
LOx+fC80wF0J++EKsrWYBUm/T3x+vBKToZ1S7/UssBtHiuhVSuiuWhgYGbAg
ZTnFTg4pofla3XtMawzSsSCQvlCFvfXVY9lSY9QGG/awNqvQtnxNawvfGIop
I9qJNBVYP0dXfmxngr93hZt7swqj5zb3ZmYw4eE956tIajKm7RpOStczQTq0
F6WIk+HcxpFQCSay/7m+vC0yGR3nzWdYdTAgtvCNzjibjNILoyWabAYqLWj1
8p5k6KjBtG9CGHAW1RQGsEkUtGh12bYMSDSzHa94k0gQWpplfCTgNpzYBSWJ
2/wSo4FmAhv853bYqkhECeqlDL23tWTd5yeT6H6h7RY3ETh4Vqv7TJJIc50U
HmskUBr6pPZiCokd3VlO3zcQYD53zLdLJ5E6tsfn5BUCPXeHd1rmk4i7eZ8W
oSUw5CILoxeQWMGr884tJzBZ/qV0Sm/zpkuVujICLLWZ/5Mz+r9ZtzpFpQTW
/uDpc6KERGl9XubLIgLa+jNLiQr93vVed5CGwBXbb+2m9fZ3ejkv7TSB5lNX
Fw9XkuDOLwpoyCPQG/dA2FJF4rcwqwDBKQIcJwOTwxdJ0ONX3unPISAoVrMO
XCLxsM9qlKu3HdeEEXqZhN9chdgjm4Dn6JLZbldJMHJLBGVZBDZJLxsurSVR
ZRTS+PQ4AekD9xkL6kg89lKo6HpHrmqbJq6R6An6QuqaSeBQxdbP03qnb+wJ
jM4g8B85OR8S
                   "]]}, Annotation[#, "Charting`Private`Tag$87134#1"]& ], 
                TagBox[{
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.880722, 0.611041, 0.142051], 
                   AbsoluteThickness[1.6]], 
                  LineBox[CompressedData["
1:eJwV0n841AcABnA/lu8hHN1h0iW6WIRkaGfXmxyhVHYP+im/WwqrVDvh7pz7
FjdraqOeNO7CnbgeHomkstZcYSKtdBq5lNZItJJr7PbH+7zP59/3eZfEpUUk
Gujp6W3U5f82Kg0i9MDDtwEDx0U2K+Bu3sm8uJaH+naKOt9yBaJytgRGruOh
lVExVWS6AvLYHYKaIB5qx09myOfcELLsgDZ6Iw/HL80qRl+4QXKp9HXdNh6a
OfsCW5vcYPXL24fxGTzsXKptr9/uBsYLqby9modQ67KVNZWuiLQKLc1nZMLv
0TN3uvdy+I74NJbnZ6Kvs0HGmHIBW0U3PPs2EyTty7SXXc5IlKyRfZd8DJHn
ioP7Kpbh82ll8oPeY2BwaGN7LjDB5HydYxuchfD1fdNhZUvBktI7/JuzoK7p
C06pd8JMJcG67JSNQ+8mBv8cdkS/JHDWpTgb1/e+bvOiOiLWrn1kwiAHiqwI
Y23UElg0sfTP7stBELXPyFXpgCc+2jT2YA4ypOJhur4DFO58wUImH4Ou/S2n
ehnI8JIfosfw0e3yWG1Rughc9h19vRI+kuOFJQU59iAYZuW0Lj56FGanD4oW
IjT13ctKIwEm2bFDWbl2iC0y4MT7C3C+67rSuvxTGDs3hJQeFqDg7vLy3c22
+PXWrtH2SwIEtN2MbRi2wVfebmfsRwQwGfm7245pgwP0n6fGGUJMpz7LT4iz
RuJd792vuEKIisO3ODTSkULeSnp0QogHVS8Nz9LpMLj83nrdLSHcn/PXrE6n
YX9jeP/DaSFSm9Xx554swB6XMM5fXrkYbMyb+yloAQ5LETaWkguapdy5q9kK
0RPR8XbluegUqjQ3/K3QobRm3n6cC4k2JLqwxRJWa99Pn6GK4GZeqylbb4l9
6ntJMRwRNmyOeTU9QEXk803Z0mwRzr95yv1mPxX022+qLBpE0CTvsLc0oSKB
tjpzZkwEFSPTdWOQBUhf2W6LpXmoKgzzkBWaozXOaIi2NQ9O8/w0jsNmyJ01
Ny4pysPWuO4OwsMMjNQvAjmqPAT0h9ZpC+cjJNz0s3QDMY4KC9YMjZqC9HlQ
VcASg852Trm3wRRnJtv8etLFqI7aFunaZgLWYu7B09ViXDUd+n3YwwT1i41v
CobEUHyZdvRKrTH8Xa5UxtBJ/JC03fCDlzEiy018W8JJEA2XzbX1FASO8/sh
IsEaU+jeTsGWnfP/8MjTOVOv05tNwa7O4l6GmAQtScNh+1NwtFrZ8ZEkkUaf
5xvhR8HFpIHWpgISDHbT/GxPCqwGfaWep0h8wpvIGHGgYKh7fK+DlMSHI75t
k/oUjLF5yRYyEqmUGa6RHgUztfMSZnXus6Ww7GYJ0CT2OwcqSPAf3vg3YIZA
8PrQTSUKEj5lyu0lkwSUNytWUetIFC1YvDdCQ6DFY6XnnM5TF7l2KU8JqM5f
cxuvJ9G++dpC0SCB4WP3mZ0NJCoNBiyvqAlYr9a3Pd5EQvYo445DHwEnuYR2
pJmEt5ir799LwNPG1jLpKon9rMcnou4RCP3H3STwGgmDkz9Kvu8kEJVw1WhV
KwnXC3KjmrsEEu5zDB2v6/ZVLOpRqQikB/TMUW+QUCdqXo38RiCrbsfHOZ2p
stFIw9sE/gPpPBsO
                   "]]}, Annotation[#, "Charting`Private`Tag$87134#2"]& ], 
                TagBox[{
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.560181, 0.691569, 0.194885], 
                   AbsoluteThickness[1.6]], 
                  LineBox[CompressedData["
1:eJwV1H841HcAB3CuIj/6ONxJEYXzY5nzoxyd8S4u0dLKEU1Rd6iUpKKdX3fn
7r6SVk9JtEc9qByKEjpiZf1gfjwb5keyJ7OdWsba1IjG7I/3835ef73/e6/Z
f3RnNE1DQ2PbQv5vrcLN2hoQ4Wrs8d7cATacSAerYqMIO7lv1cJuNnZl7PAL
9RXBrtqtxb2DDeW+CMmtzSKE1MZ+ePmQjQDbxNmwbSKoQhbrbillI6eq8M+7
u0VovqYZEJ/EhtF37/oFJ0XYyhfUEBM2LF4VK1vKRYi+lDaYstsJoUaBhdkW
KVjFDfzMfdARHLV7XVF2CmxHPB4Yn10L71bmoivvUhCvClclR3yC6ByfkrOx
qahXDZ65aO+A9dOVsb3dqRir8IsrMrcHi3cww9Q/DcNZt5sKl9mBW8xs96pP
w0AdXyVj2mLmpja31jodzGODj/q9WHie4zdnfzkdkwzN3+5E2WDfyhb1W1oG
DseFnZu7Zg0DFVfzyuEMcJbmPHGdsMLP7rNHvV9moOCER1CnhxXKnMQSM5YY
4dku978uWIOTrsoTzEgxRjxP0fSnVoPv/b2mRr4Yo4f638xGrYa2xbIiRqcY
OpsmRp7UWyIw/p/fb2pJ4JTFZFpVWGDfBRpP4CXB65yaP441roKOXU1AYZIE
bPJ681iLOZ483vu6pUqCpvlzUhu1GYLXORaYqyWolx33V5qbIZF5bXLCQgox
P/nq+aCViG5bFzXGl2Kyan5UP38F4qjHMQOnpWinCfS7xk1Bq50y8X0sRUKd
jZuftymO1AU975+W4t8QNUktXo4D9lt5b1wz0dm8uG9IczmSirF1PC4TPWUp
wR/iTBD2NkywsigTzooU97pRJtorTVhPBzPRFWGa9CqCCaONU9MFdBlKArxs
XEcYOPzix5hIngwC0YyQdZSB0NHt6cXpMpRdcvAYmDIG8+lfpQY1Muykl2cd
O2sMIcMzZWZcBq/gg90sS2NQnJIoAxs58ugSr5JGIzTt1xpmhMvR1nlFZ2mU
ETLniE7+BTlK9ywLb5s3hEX8Bj9eqxyC8F/VtWWGCAjSc0igKWBm+HlfwBeG
oNx7S89wFbBmLal0+UhHwd/NHl0JCjQfmKoavkMH15J/PLdcAb0px6nE/XRU
W+o8kgwroL3l+uVV5nR42d+/GcmkUC1Z4vPVPQOEFulyHgRRsN4tbn5jbwC/
CfFzyCg4hzcZy28R7Nij38eWU+A0VM8Jygn2dlzutlBQCBZyfX2VBKfKK9s/
UhT0bRsGaNcJKmKGmlRnKPCSdrkpviEweskpdr5IIWxtYl5hNsHwDxOHVhdT
SHrPPk8OEox7i2INSii8WD+aNR1DMHN7iXBuwbnK3oERIQEjx3zP0I2FfVuT
dFUUgf+WwO35ZRTGck2HYsMIKh/dcKPfpSCN0+vr8yd4wHZxnl/whrZqz2c8
gtarjY4T1RRcFEcma30JRlJ7WB01FDp4Px3I8yEw8dQ0zVJROMU5FP4lh8Ba
mcNIrqfw7F5V3Lb1BM7LTQ1jGijwY5J7fNwIAt876fo1UtB145Ww2AS7hA1a
bk3Uwv/Y6a34lEDYw1tk9S2F2RDfVv21BAmbuubpDynkyalBDQeCtLsRH+cX
HNn1y8b3tgT/AW0WD8M=
                   "]]}, 
                 Annotation[#, 
                  "Charting`Private`Tag$87134#3"]& ]}}, {}}, {{}, {{{}, {}, {
                 Hue[0.67, 0.6, 0.6], 
                 Directive[
                  PointSize[0.012833333333333334`], 
                  AbsoluteThickness[1.6], 
                  Dashing[{Small, Small}], 
                  RGBColor[0.880722, 0.611041, 0.142051]], 
                 
                 LineBox[{{511.5462854897234, 3.}, {511.5462854897234, 18.}, {
                  511.5462854897234, 18.}}]}, {
                 Hue[0.9060679774997897, 0.6, 0.6], 
                 Directive[
                  PointSize[0.012833333333333334`], 
                  AbsoluteThickness[1.6], 
                  Dashing[{Small, Small}], 
                  RGBColor[0.560181, 0.691569, 0.194885]], 
                 
                 LineBox[{{636.3186557876321, 3.}, {636.3186557876321, 18.}, {
                  636.3186557876321, 18.}}]}}}, {{}, {}}}}, {
            DisplayFunction -> Identity, Ticks -> {{{511.5462854897234, 
                 FormBox["512", TraditionalForm]}, {636.3186557876321, 
                 FormBox["636", TraditionalForm]}}, {{4, 
                 FormBox["4", TraditionalForm]}, {8, 
                 FormBox["8", TraditionalForm]}, {12, 
                 FormBox["12", TraditionalForm]}}}, 
             AxesOrigin -> {420.00000693877644`, 2.971197775816463}, 
             FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
             GridLines -> {None, None}, DisplayFunction -> Identity, 
             PlotRangePadding -> {{
                Scaled[0.02], 
                Scaled[0.02]}, {
                Scaled[0.05], 
                Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
             All, DisplayFunction -> Identity, AspectRatio -> 0.618, 
             Axes -> {True, True}, AxesLabel -> {None, None}, 
             AxesOrigin -> {420.0000069387755, 2.9711977758164565`}, 
             BaseStyle -> {FontFamily -> "Times New Roman", 13}, 
             DisplayFunction :> Identity, 
             Frame -> {{False, False}, {False, False}}, 
             FrameLabel -> {{None, None}, {None, None}}, 
             FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
             GridLines -> {None, None}, GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], 
             Method -> {
              "DefaultBoundaryStyle" -> Automatic, 
               "DefaultGraphicsInteraction" -> {
                "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                 "Effects" -> {
                  "Highlight" -> {"ratio" -> 2}, 
                   "HighlightPoint" -> {"ratio" -> 2}, 
                   "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
               "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
               None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                   (Identity[#]& )[
                    Part[#, 1]], 
                   (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                   (Identity[#]& )[
                    Part[#, 1]], 
                   (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
             PlotRange -> {{420.0000069387755, 759.9999930612245}, {
              2.9711977758164565`, 15.923010511720175`}}, PlotRangeClipping -> 
             True, PlotRangePadding -> {{
                Scaled[0.02], 
                Scaled[0.02]}, {
                Scaled[0.02], 
                Scaled[0.02]}}, Ticks -> {{{511.5462854897234, 
                 FormBox["512", TraditionalForm]}, {636.3186557876321, 
                 FormBox["636", TraditionalForm]}}, {{4, 
                 FormBox["4", TraditionalForm]}, {8, 
                 FormBox["8", TraditionalForm]}, {12, 
                 FormBox["12", TraditionalForm]}}}}], {860, 7}, {480, 0}, {
           680, Automatic}], ImagePadding -> {{60, 2}, {45, 5}}, ImageSize -> 
         400, AspectRatio -> 0.412, Frame -> True, FrameLabel -> {
           FormBox[
            TemplateBox[{"\"\[CapitalOmega] \"", "\"(MHz)\""}, "RowDefault"], 
            TraditionalForm], 
           FormBox[
            TemplateBox[{"S", "\"(\"", 
              SubscriptBox["\[Omega]", "\"m\""], "\")\""}, "RowDefault"], 
            TraditionalForm]}, DisplayFunction -> Identity, 
         Ticks -> {{}, Automatic}, AxesOrigin -> {200.0000265306127, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 
            Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {200.00002653061225`, 0}, 
         BaseStyle -> {FontFamily -> "Times New Roman", 16}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, 
         PlotRange -> {All, {0., 30.400063562243403`}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{Automatic, Automatic}, {Automatic, 
            Scaled[0.02]}}, Ticks -> {None, Automatic}}]}}, 
     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
     AutoDelete -> False, 
     GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{0}}}], "Grid"], 
   TemplateBox[{
     StyleBox[
     "\"Constant\"", FontFamily -> "Times New Roman", 14, StripOnInput -> 
      False], 
     StyleBox[
     "\"PD, N=1\"", FontFamily -> "Times New Roman", 14, StripOnInput -> 
      False], 
     StyleBox[
     "\"PD, N=2\"", FontFamily -> "Times New Roman", 14, StripOnInput -> 
      False]}, "LineLegend", DisplayFunction -> (StyleBox[
      StyleBox[
       PaneBox[
        TagBox[
         GridBox[{{
            TagBox[
             GridBox[{{
                GraphicsBox[{{
                   Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                   Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {}}}, 
                 AspectRatio -> Full, ImageSize -> {20, 10}, PlotRangePadding -> 
                 None, ImagePadding -> Automatic, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                GraphicsBox[{{
                   Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.880722, 0.611041, 0.142051]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                   Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.880722, 0.611041, 0.142051]], {}}}, 
                 AspectRatio -> Full, ImageSize -> {20, 10}, PlotRangePadding -> 
                 None, ImagePadding -> Automatic, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                GraphicsBox[{{
                   Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.560181, 0.691569, 0.194885]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                   Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.560181, 0.691569, 0.194885]], {}}}, 
                 AspectRatio -> Full, ImageSize -> {20, 10}, PlotRangePadding -> 
                 None, ImagePadding -> Automatic, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
              GridBoxAlignment -> {
               "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
              AutoDelete -> False, 
              GridBoxDividers -> {
               "Columns" -> {{False}}, "Rows" -> {{False}}}, 
              GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
              GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
          GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
          GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], "Grid"], 
        Alignment -> Left, AppearanceElements -> None, 
        ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"], 
       LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Arial"}, 
      Background -> Automatic, StripOnInput -> False]& ), 
    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             
             TemplateBox[<|
              "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
              "RGBColorSwatchTemplate"], ",", 
             
             TemplateBox[<|
              "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
              "RGBColorSwatchTemplate"], ",", 
             
             TemplateBox[<|
              "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
              "RGBColorSwatchTemplate"]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
         RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), Editable -> 
    True]},
  "Legended",
  DisplayFunction->(GridBox[{{
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {2, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Above"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.861812921103383*^9, 3.861813066539873*^9, {3.861813302702673*^9, 
   3.861813319006731*^9}, 3.8618138963144107`*^9, 3.869763967345447*^9, {
   3.8697640418682733`*^9, 3.869764091592822*^9}, {3.8697686215542765`*^9, 
   3.869768637168545*^9}, {3.86976866725437*^9, 3.8697686978605394`*^9}, {
   3.8697687291243086`*^9, 3.869768745328335*^9}, 3.869776477121332*^9, {
   3.86977652314599*^9, 3.869776542147616*^9}, {3.8697775475315056`*^9, 
   3.8697775883353376`*^9}, 3.869777651440278*^9, {3.869777701165948*^9, 
   3.869777735862091*^9}, {3.869777805923498*^9, 3.869777841811406*^9}, {
   3.8697779239981976`*^9, 3.869777987672556*^9}, 3.869778025130724*^9, {
   3.869778086261732*^9, 3.8697781470510035`*^9}, 3.869854160763832*^9, {
   3.8698542571176414`*^9, 3.8698543211587076`*^9}, 3.870284256688718*^9},
 CellLabel->
  "Out[218]=",ExpressionUUID->"d5f10bd5-d1b6-42ae-b491-a61cbb9520c1"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solve the transfer matrix with more sidebands numerically", "Subsection",
 CellChangeTimes->{{3.8697648310261436`*^9, 3.8697648437245398`*^9}, 
   3.870284393409109*^9},ExpressionUUID->"066ee850-2345-42d9-9d58-\
dbce602d4e07"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Set", " ", "the", " ", "matrices", " ", "with", " ", "their", " ", 
    "numerical", " ", "values"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"AdN", " ", "=", 
     RowBox[{"Ad", "/.", "HigginPaper"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ApN", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"Ap", "/.", "SteadyGOsc"}], "/.", "HigginPaper"}], "/.", 
      "Sym\[CapitalOmega]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"AmN", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"Am", "/.", "SteadyGOsc"}], "/.", "HigginPaper"}], "/.", 
      "Sym\[CapitalOmega]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"BN", "=", 
     RowBox[{"B", "/.", "HigginPaper"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Calculate", " ", "the", " ", "transfer", " ", "matrix", " ", 
     "numerically"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"TOscOG", "[", 
      RowBox[{"x_", ",", "N_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ApNN", "=", 
          RowBox[{"ApN", "/.", 
           RowBox[{"{", 
            RowBox[{"\[CapitalOmega]", "->", "x"}], "}"}]}]}], ",", 
         RowBox[{"AmNN", "=", 
          RowBox[{"AmN", "/.", 
           RowBox[{"{", 
            RowBox[{"\[CapitalOmega]", "->", "x"}], "}"}]}]}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"TransFOsc", "[", 
        RowBox[{"AdN", ",", "ApNN", ",", "AmNN", ",", "BN", ",", "N", ",", 
         RowBox[{
          SubscriptBox["\[Omega]", "m"], "/.", "HigginPaper"}]}], "]"}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Calculate", " ", "the", " ", "trasduction", " ", "efficiency", " ", 
     "numerically"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"etaOscNG", "[", 
      RowBox[{"x_", ",", "N_"}], "]"}], ":=", 
     RowBox[{"Abs", "[", 
      RowBox[{
       RowBox[{"TOscOG", "[", 
        RowBox[{"x", ",", "N"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "3"}], "]"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Calculate", " ", "the", " ", "added", " ", "noise", " ", "numerically"}],
     "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"SOscNG", "[", 
      RowBox[{"km_", ",", "N_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ApNN", "=", 
          RowBox[{"ApN", "/.", 
           RowBox[{"{", 
            RowBox[{"\[CapitalOmega]", "->", "x"}], "}"}]}]}], ",", 
         RowBox[{"AmNN", "=", 
          RowBox[{"AmN", "/.", 
           RowBox[{"{", 
            RowBox[{"\[CapitalOmega]", "->", "x"}], "}"}]}]}], ",", 
         RowBox[{"w", "=", 
          RowBox[{
           SubscriptBox["\[Omega]", "m"], "/.", "HigginPaper"}]}], ",", "T", 
         ",", "Tp", ",", "Tm", ",", "T4p", ",", "T4m", ",", "TO", ",", 
         "eta"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"T", "=", 
         RowBox[{"TransFOsc", "[", 
          RowBox[{
          "AdN", ",", "ApNN", ",", "AmNN", ",", "BN", ",", "N", ",", "w"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"T", "=", 
         RowBox[{
          RowBox[{"Abs", "[", 
           RowBox[{"T", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "All"}], "]"}], "]"}], "]"}], "^", "2"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"Tp", ",", "Tm"}], "}"}], "=", 
         RowBox[{"TMech", "[", 
          RowBox[{
          "AdN", ",", "ApNN", ",", "AmNN", ",", "BN", ",", "N", ",", "w"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"T4p", ",", "T4m"}], "}"}], "=", 
         RowBox[{"TForth", "[", 
          RowBox[{
          "AdN", ",", "ApNN", ",", "AmNN", ",", "BN", ",", "N", ",", "w"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"eta", "=", 
         RowBox[{"T", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"SSum", "[", "T", "]"}], "+", 
           RowBox[{
            RowBox[{
             RowBox[{"Abs", "[", 
              RowBox[{"Tm", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "10"}], "]"}], "]"}], "]"}], "^", "2"}], 
            "/", "2"}], "+", 
           RowBox[{
            RowBox[{"Total", "[", 
             RowBox[{
              RowBox[{"Abs", "[", 
               RowBox[{"T4m", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "All"}], "]"}], "]"}], "]"}], "^", "2"}], 
             "]"}], "/", "2"}]}], ")"}], "/", "eta"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"di", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1500", "-", "200"}], ")"}], "/", "200"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"d3", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "/", "2"}], "/", "\[Pi]"}], ",", 
         RowBox[{"etaOscNG", "[", 
          RowBox[{"x", ",", "3"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"2", "*", "\[Pi]", "*", "200"}], ",", 
         RowBox[{"2", "*", "\[Pi]", "*", "1500"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"d4", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "/", "2"}], "/", "\[Pi]"}], ",", 
         RowBox[{"etaOscNG", "[", 
          RowBox[{"x", ",", "4"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"2", "*", "\[Pi]", "*", "200"}], ",", 
         RowBox[{"2", "*", "\[Pi]", "*", "1500"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"d5", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "/", "2"}], "/", "\[Pi]"}], ",", 
         RowBox[{"SOscNG", "[", 
          RowBox[{"x", ",", "3"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"2", "*", "\[Pi]", "*", "200"}], ",", 
         RowBox[{"2", "*", "\[Pi]", "*", "1500"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"d6", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "/", "2"}], "/", "\[Pi]"}], ",", 
         RowBox[{"SOscNG", "[", 
          RowBox[{"x", ",", "4"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"2", "*", "\[Pi]", "*", "200"}], ",", 
         RowBox[{"2", "*", "\[Pi]", "*", "1500"}]}], "}"}]}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{
  3.8697649328934436`*^9, {3.869764965149381*^9, 3.869764985270803*^9}, {
   3.869765036929988*^9, 3.869765159108879*^9}, {3.86976551472614*^9, 
   3.8697655763985825`*^9}, {3.8697656093772125`*^9, 
   3.8697656135885572`*^9}, {3.8702843415120697`*^9, 3.870284341681147*^9}},
 CellLabel->
  "In[226]:=",ExpressionUUID->"864c3166-0d23-43f5-a583-82fb85538db3"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plot the results with more sidebands", "Subsection",
 CellChangeTimes->{{3.870284399234539*^9, 
  3.870284415054882*^9}},ExpressionUUID->"f1969d06-a0f7-48bb-88ff-\
445c0e53bdfb"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"p1", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"etaGOsc", "[", 
        RowBox[{"2", "*", "\[Pi]", "*", "x"}], "]"}], ",", 
       RowBox[{"etaGOsc2", "[", 
        RowBox[{"2", "*", "\[Pi]", "*", "x"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "200", ",", "1500"}], "}"}], ",", 
     RowBox[{"BaseStyle", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"FontFamily", "->", "\"\<Times New Roman\>\""}], ",", "16"}], 
       "}"}]}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Row", "[", 
         RowBox[{"{", 
          RowBox[{"\"\<\[CapitalOmega] \>\"", ",", " ", "\"\<(MHz)\>\""}], 
          "}"}], "]"}], ",", 
        RowBox[{"Row", "[", 
         RowBox[{"{", 
          RowBox[{"\"\<\[Eta](\>\"", ",", 
           RowBox[{"Subscript", "[", 
            RowBox[{"\[Omega]", ",", "\"\<m\>\""}], "]"}], ",", "\"\<)\>\""}],
           "}"}], "]"}]}], "}"}]}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "0.618"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p2", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"d3", ",", "d4"}], "}"}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Dashed", ",", "DefaultGreen"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Dotted", ",", "Red", ",", "Thick"}], "}"}]}], "}"}]}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p", "=", 
   RowBox[{"Show", "[", 
    RowBox[{"p1", ",", "p2"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"p", "=", 
  RowBox[{"Legended", "[", 
   RowBox[{"p", ",", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"LineLegend", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"DefaultBlue", ",", "DefaultOrange", ",", 
          RowBox[{"{", 
           RowBox[{"DefaultGreen", ",", "Dashed"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"Red", ",", "Dotted"}], "}"}]}], "}"}], ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"#", ",", 
            RowBox[{"FontFamily", " ", "->", " ", "\"\<Times New Roman\>\""}],
             ",", " ", "14"}], "]"}], "&"}], "/@", 
         RowBox[{"{", 
          RowBox[{
          "\"\<PD, N=1\>\"", ",", "\"\<PD, N=2\>\"", ",", "\"\<PD, N=3\>\"", 
           ",", "\"\<PD, N=4\>\""}], "}"}]}], ",", 
        RowBox[{"LegendLayout", "\[Rule]", "\"\<Row\>\""}]}], "]"}], ",", 
      "Top"}], "]"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.8697646968438807`*^9, 3.8697647759131985`*^9}, {
  3.869766663863369*^9, 3.8697666848193483`*^9}, {3.8697668315555696`*^9, 
  3.8697668701859355`*^9}},
 CellLabel->
  "In[238]:=",ExpressionUUID->"ae2899e2-dff2-4a92-86c5-7a293e02b0d3"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
Zn5rIo43v/mLXIsxYB+3ejWC4ysiJiIZr/F5oQ8a7o7F9X4Zk93lGMwb500d
w/Hm7rn/eN5ioNO13ohwfEXN4PGJGgzK/mgvy/1fn5Ti41+PgYHVcMYCnm/T
/NiZlw0YrJTF/M7G8eULOtLDTXi/7/T+0cVx4au7q6KtGLwp91+txuvlEhhs
N2nH4FSeBJ8sjm08j7zAOjEQj/d19MT/r+ATjVTRg8GHekX5TNwPLuVei5k+
fB7rekkVuF82dxUPyX3HoI3A9bgc97NgMoTryk8MDrdK5KTjfnOd+9SfMIz3
Q9Cl+xaG6/OkShqZ+HvSgqZSeH8KeHxj1scwyL7OZ/SWTAROtwaHI5O4v5xy
s7rhRLD+KKrtMoOB0OPBwLwwInDQ3452LeF+jCovH8PnAzxlPM7/wWDK+DD1
KD4/wZb0xaZ1DO4qTxTtxOdrXvYSsZqTBonkqm2R3kRQ5q2M0tpCAzXRqBoR
TyK4LezlK+Ghgf9VhwOx7kQYqpuQyBGkAb1pt95+fN4l/72QKSNCgxOVOaFm
jng9CWUKaWI0CJCkxNs5EKHjGqaetJcGDx+iK2r4PtWuSZwPPUSDTjOoq8D3
bX2Y3L2sSoOKcpkuKWMiaDWzLnur00ClTUXYG9/PV6nFzk46NLgs99jqE77P
GRrGFLMzNEgIZtjSlIlA8gwqlb1Jg+dRrCwZHiJUWv48luFCg+mU8J16m4iw
jE7VibvTgPPZ9wcmBCJ48Ap+4vOlQVzcq7+Hlwlw9d+c0VUyDaQKZktVh/B7
9qtXou0JDXqCvr42wu/fmuVRyp1uGsjEKAmPmOH3dk97x89eGvSORx70NSbA
MMtZyrgfj1dle/rnJAGa/R/W7Bmmgdfb1/FTRwmQmrK+8WGGBpZ2t1kBkgRQ
/1IfLLEtAji9r947zWIHDwtTvxq9CNgmVMp1zJ8dhs1dnLkLI+CDY/fwgwQ2
6E1FP+aDI+HjwOYHMvNrqPOOkpozKRL+E7CpVmKuodaLu+j9lEh44ZlQqNu3
hup5/xx+T48EGTs5IXL1GnpJLo1gpOC8Znfprdg1RHY5eEirOBI6Odq1FuXX
kKKWeGjY70hIv+OeMub4F4X0LopvtY4CkzP9+2LWV1GKnnyD3pUo6Oc8W5Y0
v4pe5Vl5hVyLgq3FS7ueja0iVnhl47RjFAxOnjfu715FF/eTfXu8o0BPtKQj
J38V7Q/a1pYVGwU8t+TYX9uvom4JGTKqiQJbPk4h39YVdOiaKctHng71HTPf
vCuWEeHfkstPFOkgzCmC+RYto84F0fYGJTpcn+qghPy7jAKiB8vE1OhQeOq6
R/rDZVRX6h1drUuH1xYKvirBy8hiW7ISjw0d/J43/hN0fBmFlff5ZMbS4Ulm
c3xMwxJqE7rO3jFLB9ql7YHUsUUUyfwqA4t4vPPo0RtDi+hE+QXDlyt0OP6h
bvbMt0VUfFXvLp0tGjKivJBi6yJKyZHapccbDSqtUfeVXy0ie/h5tFghGjbY
H241DVpEi662HsnXoqFSt+N9Nf8ikqyzHLBujYYViaAwhXMLaFlK0CquPRrs
7Ipa3xkuoHZyS0dNZzTw+TnKWustIOqJE+/lv0ZDSeKHgdSjC2isRjFvkRkN
W0qUtxtLL6CS6vXABPYYkHtjLeCyMo+M32YJNx2JAUQwXgvMnkeBZdNnNR/G
wKk7B5hK/PNIK+OtX+GTGDj76h+KEc88Wo2MSVN4GgNFef98dd40j4Is5WdE
X8SA6ypPftHaHApeupq0WhoDp89qB3qPzaEQtba+io4YsFKKdkyvn0Okwryb
x7fGQpbKcUZy0ByivXAJ1wuIhcosex/NuVm07unq/W9wLFzrevlMe2oW+Wm5
3RAkxQLm55QFv2eR48dbp4dosbAo67ZhNjSLTk548FOSYkHxuNXPlM+ziEPl
TkZtfixIajVzPy+eRZQ3lBrdkVjYHfTOuMJ/FpEaHrHDhTiYVc0WQ5tnUcRB
L4EEybvw7kmaPunsDNKJVWBt/3MX4q+qPHJMm0YksRPPPa/HA8szQ+KZwDSy
wj6SLn6IBxWb0J+zqlNo68R/x1rU70HCuzZ0+cwkql3mr5l+dA+mIpMsuWMm
kCl7m1wOdwIcCaOuuHweR8y8/ku83gmQdP5Kra7mOPLxNMx1/ZIA0fG6v1sK
fqNeFZlhW4NESLLafY9D8TfSTzYd/pubCDap1WoNZWMoYmnqvbJEEvDK0yUk
jMZQze2xtitRSWBml11rMDKKCDHqGWpTSRCjI5j4LX4UiT2bu5h55T6Y930n
vdIeRZr2hPaK+vtQPZzf7zbLQibqt7xbFJLh4fc7lp/zWUhn0+llH0YyLG8b
5u9yYyHVYL+TDWvJcDKzSfa9KguRPunLx28kwxkzjLNZhYVaZAS5rdgZkBwT
p9KhzEJOLfmfxjgYoLbG5TmgxEJPJEdteHkYsGIzHrW2n4W21Nh4mYsxgAI5
XIbSLPSDUzdtSJ0BttQ3hjuEWEjJejs59ygDSg4O3ZMRZKGgl/3XfbUYsGfe
VOaIAAsJWwTu33ScAYEHw2Qu8rHQmeyikv0nGWB/syiOwcNCpUayzZ4XGCDr
ljilyMlCHGnzL7XMGcCjGPEWcbCQ6VztPaIFA05v6+y8QGSh8YdXLe5b4/oG
tp5gdhaSmkgZfGPHgDR/W6WONSby0L35X7gDA9wMPh9h/WWiqvtq2UY3GOC6
XBi+/oeJLI933PrmxIDEJ+qTiqtM9Cwh/fwzFwZ8xTK26a0w0eyI+2F3NwZ4
arB5Wy8zEWjrCGu4M4DDXE3Sa4mJYu9yr2zcxv2Kl95OX2Si/wGPXS4F
           "]]}, Annotation[#, "Charting`Private`Tag$252541#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
63HR/wCHqzxi
           "]]}, 
         Annotation[#, 
          "Charting`Private`Tag$252541#2"]& ]}}, {}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 360], 0.002777777777777778]], 
          AbsoluteThickness[1.6], 
          Dashing[{Small, Small}], 
          RGBColor[0.560181, 0.691569, 0.194885]], 
         LineBox[CompressedData["
1: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
Ti3c8Fa7/SCLjKRbx+pu69VCpbZuqFEOGVOKw96nLq2F6Y0rfV7nklEp2iU/
b0UtbLq2ycE6n4zlL6a8/WhaCyHbtptyCoh+XJXzhWdeC1lT3TUOFBL98zzm
29eNtdD91meyq4jQo8/7maOWtbAo+GxnUAkZ51n5WSna1sI+43Nfpnwk6vch
L2KBQy3EdsVkR5WRcXvBl9o1zrVQ9SDp1rzPRDxXa1Zs31MLMvsy6I8qyVjs
1H3Ta38twJwCr5U1RH/nblakedYCqarM7i2HjL7S/6LjjtZCdiTP2LaOjPda
tupk+dVCL4jV6urJmHNic+GXwFrQG/0xfqiJjMvt5h7vOlsLB178E/a2kPF4
WM8iGWot3PRTLA9pI6N+c0ePHqsWavQ0n08VkpFWYlRsFVELcm1LYq+KyTi5
rOex96Va2HxrDWX+V2K+nrJMOH+1FihOWzxSusjo57fvdlpsLeTI79xq2kvG
fYcPZFQn1EJfyUHDou9ktJh9onIwqRYW0/xV7X+Q0ao/a1zjUS0cXEP5U/+L
yPf8nes2P62FW/3n2w4PE+uvOn3h+PNaYKfElfb/JmMDY93X6zm1IO+ZnEYZ
I+ZfTa1LYX4tbNHMjpGZIKOpzCFOV2Et0GrfBV+fJOON5umH1D7UQm5U5X5t
aQoqP+j7a1leC/3WzZZp0yiouHp9+qmqWlgy+c3ATJaCOlVqvg+4teCRP6xc
Ik/BTONHFtyGWkg4NXXYQZGCneQZmtNaa4G7bFZLkzIF9144qbBWVAsKHdrF
3rMoaDf+W8nvWy1Y3TVM+Tmbgiplnxfe76sF+u51V+hzKTg3SNmm/mct5M20
PSOvQUG/5q90pd+1MFC+yy1uPgUPxZE/Wf+tBYMwL1ioTcFuuf4FTKk68Fx/
avGzBRQcEPpceS1TB4lDDAULXQrG+ykrDivUQd2zqJ+liymYtGb6XZNZdaDk
k9jgZEDs9/QZDJhbB1sXpBbyl1Fw/Dpt5Nn8OmA25SYfM6Lg4zrrou8L6iD/
+oeLQ8YUbLIcSVyhXwc/7TkBrFUUXC6VczFweR0sm96+S3ENBS97372cs7IO
vN71rY9fS0FY1Xb/95o6uBMytlBvHQWXeiRWbFhfB7yVcnJZG4j8jQxNP4d1
oNyj1r8eKMisVt392boObJJ168o2U/DnTc0CVfs6YO03KXCxouB2A+NV+53q
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
6+VO/2qazDm/qETznhBufvnj5/aIJnX7l97YVo7Ps/b6gaUPabLTedXFa/ex
Pzp7Ls2toom8qXPijwdCODyp7r1OJU0yx7rzLSqFMNnF0VSpgia29JbwQ1VY
z+PDk6Ue0OR9td/OqodC2JfiqvKtnCYHM3Z7yVcL4c3anpx392iienTf2jU1
QoD9q5yfldGkwOPQktOPcf6s3TuxpJQmTvOjLVufCKFlYmj31RKacJNjDLWf
CWH1z5UNZ4tpIuo9Oc33uRCqVORe8+/SRP9lktKNF3g/nsyn9xbRpOpamuzP
Wpw3R9eobLtDEy/BlT+WdUJQ+shscC6kyaDPDfpwPZ7/A1G+XQFNkmwK2h6+
EsJw+fnac27TZN600rrRr3F+PvuVqZNPk/r+iirHN9jvRa+tJ+TRZNfbx3fO
NGKeetn4Y3guTUYXvMx+9xbnx2fp4h83aZIV35ii0yyEkzWbz3y6QZPFgW0n
/FqEMKAlIaq/TpOPKzojb7YKYWL2h8SKazQ5pM/s/fUO5/uMMQV5OTSZItPr
t+A9zi87ir6UTZM7H/66H/2A8yFys0XCVZqsLZNaU/1RCHWJyecis2jSkzTS
VqFdCNdHLJgUcoUmMXvHzlvbgflj0erLWzNpYrB2kkFSJ+5fSZu982WaPDSe
OvX9ZyH46XeNWpJBky1jdMbpfRGCZPyh1nnpNJHoNhju343zoyjlkf4lmpx7
aPLr1lchNBU6V6tcpIn5JfMvv2l8nrfX2+TSaNJwCFqsWCFMEGSN6U+lSdDG
xS+OcXh/jFjpyKTQRMHC4UHNNyHc9b5y7d15mmRPXHt77HchuP24q1F7jiZL
vrtdWfcDf37uiSv3k2nS/twrOblXCDHtRkvzkmhyOHt77IefQlh24exg+lma
TOUHHpn+Wwj6j1qfnDpDkyLv0D0BfUJIjB64wT9NE+dFB7fl/RHCi2vS2WGn
aPJ9aqTbn7+Yzzb8LPFPpMnxvwIH6BfCrbDXHR4JNJn55sTCqAE8z3t5umtO
0qQ674zpk0HMn5IJB2ziaeIdl6qnKCkCyYX7u+ecoIlUwGWV9VIiqFjiF6gf
R5Pzy66NPj9MBA/eBshPOU4TS718iU/DRXAw/HjZmFiavBlW/F1fRgR3mxv4
kjE0CW6737FTVgRz31j7/RDSZFxJdWP+CBHMGdu6uVNAk5wzL578HSmC3vYb
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
k8bAuRD48yKNzEq4s1vBQw6WPlhy1bcf/eN5U7P7A3ruu27qkh8UMS2wEEuH
X1hXJmXD1W0yCx1gvmeG5y1/4vvz95YxLthL4dXp3/DP8fCfNY3ouSvmJ5N/
4bwM9PdHwrPL3oWrD2C+d8YNacIW4bYhn+Gufqe/I+/Rc71Ne48N4n6asufJ
hfvsnP3Eh/D9p3JCzg9Wr/rq/hwuutBouQY+rezp5Pcb81DA9nBzA3ruapfN
0mGKzH6ZvpMAr+PaZZ4DU7/qOkzh/cd+GG4foQjDpHoNO1z+I1BvGJ5g6/Et
e4eecx7WuDRKEfE1cg/DYJeag8oaYxSRy09ZrATf3fxHthV2L1/v3VePnrt5
VPL4OEXMrZteXIeNVv5bvXaCItJH7iq6wsmR0UJVcLZW+lV++PvgIl7/SXzf
ZD8Qqn+LnnOLXb7sD+6b2h4qBj5Rt2JhLlxzX2M1gd9oJsxun6JI2Z7M7Ok3
6Lm7fJPDsN+ksv4jeI8g/fvSNL6vg1taA+GiU6I/NGZwPzanHpeCF42md7XC
mQYHpb7Voee81rUd/4t5Venfchm+8e7Wp7WzOO92BxLs4N+60g1VMIM/yYoL
1svNee0/h/uM7bXAq1r0nKhS1bJ/FNmiyd8VBX85+7AsF/5WHFqkDctMbi60
mkePpPckjb9Gz/kV3xuBz4/uDrsHv/ygk5WygCYnns6674H5t1bc2MJGkySB
G1brYe/7Bmlf4Ptz9sZtr9Bza2pSTrDTZF2y0DYa/nfeLH7dQpoMNfWa28CW
M2/PvoAbByqcOOAre2yidy2iyeqXd/ZV16Dnmj8eXb6YJj9PM2NOwlu2OYXl
wa90krI04TOPvgRZL6GJ63Ry4+hLFuOjhMfuUXjJ83S2fHh94ncvailNztzM
19wNH/jn56q5jCaGpS8OS8DPAvvtvsIXRTrKvlaj577u235yOU3Yns8upeGd
Zr+NJTjwfO/X7LSBs5+Ekmo435kUcsB/Nk5q7V5Bk1A3P6GXL9BzKRFqHJw0
+TYQezISTmGfU8iH+WTyBrXgrgNRUjZcNHFbW+87XsViKHcuXDcGv2/+9e0e
HLn9rCjNTROzoCX+AXB9GQe/Fg9Nzo6vGpaEV8nFc7bBHw8o/NfxnMUISF25
JJKXJo/YNFZdhouXUPMSK2kSl6tZZgcvOSQyXQ27x6v6cMP23Wmju/lo8uSe
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

          "]]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 360], 0.002777777777777778]], 
          AbsoluteThickness[1.6], 
          Dashing[{0, Small}], 
          RGBColor[1, 0, 0], 
          Thickness[Large]], 
         LineBox[CompressedData["
1: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
Ti3c8Fa7/SCLjKRbx+pu69VCpbZuqFEOGVOKw96nLq2F6Y0rfV7nklEp2iU/
b0UtbLq2ycE6n4zlL6a8/WhaCyHbtptyCoh+XJXzhWdeC1lT3TUOFBL98zzm
29eNtdD91meyq4jQo8/7maOWtbAo+GxnUAkZ51n5WSna1sI+43Nfpnwk6vch
L2KBQy3EdsVkR5WRcXvBl9o1zrVQ9SDp1rzPRDxXa1Zs31MLMvsy6I8qyVjs
1H3Ta38twJwCr5U1RH/nblakedYCqarM7i2HjL7S/6LjjtZCdiTP2LaOjPda
tupk+dVCL4jV6urJmHNic+GXwFrQG/0xfqiJjMvt5h7vOlsLB178E/a2kPF4
WM8iGWot3PRTLA9pI6N+c0ePHqsWavQ0n08VkpFWYlRsFVELcm1LYq+KyTi5
rOex96Va2HxrDWX+V2K+nrJMOH+1FihOWzxSusjo57fvdlpsLeTI79xq2kvG
fYcPZFQn1EJfyUHDou9ktJh9onIwqRYW0/xV7X+Q0ao/a1zjUS0cXEP5U/+L
yPf8nes2P62FW/3n2w4PE+uvOn3h+PNaYKfElfb/JmMDY93X6zm1IO+ZnEYZ
I+ZfTa1LYX4tbNHMjpGZIKOpzCFOV2Et0GrfBV+fJOON5umH1D7UQm5U5X5t
aQoqP+j7a1leC/3WzZZp0yiouHp9+qmqWlgy+c3ATJaCOlVqvg+4teCRP6xc
Ik/BTONHFtyGWkg4NXXYQZGCneQZmtNaa4G7bFZLkzIF9144qbBWVAsKHdrF
3rMoaDf+W8nvWy1Y3TVM+Tmbgiplnxfe76sF+u51V+hzKTg3SNmm/mct5M20
PSOvQUG/5q90pd+1MFC+yy1uPgUPxZE/Wf+tBYMwL1ioTcFuuf4FTKk68Fx/
avGzBRQcEPpceS1TB4lDDAULXQrG+ykrDivUQd2zqJ+liymYtGb6XZNZdaDk
k9jgZEDs9/QZDJhbB1sXpBbyl1Fw/Dpt5Nn8OmA25SYfM6Lg4zrrou8L6iD/
+oeLQ8YUbLIcSVyhXwc/7TkBrFUUXC6VczFweR0sm96+S3ENBS97372cs7IO
vN71rY9fS0FY1Xb/95o6uBMytlBvHQWXeiRWbFhfB7yVcnJZG4j8jQxNP4d1
oNyj1r8eKMisVt392boObJJ168o2U/DnTc0CVfs6YO03KXCxouB2A+NV+53q
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
6+VO/2qazDm/qETznhBufvnj5/aIJnX7l97YVo7Ps/b6gaUPabLTedXFa/ex
Pzp7Ls2toom8qXPijwdCODyp7r1OJU0yx7rzLSqFMNnF0VSpgia29JbwQ1VY
z+PDk6Ue0OR9td/OqodC2JfiqvKtnCYHM3Z7yVcL4c3anpx392iienTf2jU1
QoD9q5yfldGkwOPQktOPcf6s3TuxpJQmTvOjLVufCKFlYmj31RKacJNjDLWf
CWH1z5UNZ4tpIuo9Oc33uRCqVORe8+/SRP9lktKNF3g/nsyn9xbRpOpamuzP
Wpw3R9eobLtDEy/BlT+WdUJQ+shscC6kyaDPDfpwPZ7/A1G+XQFNkmwK2h6+
EsJw+fnac27TZN600rrRr3F+PvuVqZNPk/r+iirHN9jvRa+tJ+TRZNfbx3fO
NGKeetn4Y3guTUYXvMx+9xbnx2fp4h83aZIV35ii0yyEkzWbz3y6QZPFgW0n
/FqEMKAlIaq/TpOPKzojb7YKYWL2h8SKazQ5pM/s/fUO5/uMMQV5OTSZItPr
t+A9zi87ir6UTZM7H/66H/2A8yFys0XCVZqsLZNaU/1RCHWJyecis2jSkzTS
VqFdCNdHLJgUcoUmMXvHzlvbgflj0erLWzNpYrB2kkFSJ+5fSZu982WaPDSe
OvX9ZyH46XeNWpJBky1jdMbpfRGCZPyh1nnpNJHoNhju343zoyjlkf4lmpx7
aPLr1lchNBU6V6tcpIn5JfMvv2l8nrfX2+TSaNJwCFqsWCFMEGSN6U+lSdDG
xS+OcXh/jFjpyKTQRMHC4UHNNyHc9b5y7d15mmRPXHt77HchuP24q1F7jiZL
vrtdWfcDf37uiSv3k2nS/twrOblXCDHtRkvzkmhyOHt77IefQlh24exg+lma
TOUHHpn+Wwj6j1qfnDpDkyLv0D0BfUJIjB64wT9NE+dFB7fl/RHCi2vS2WGn
aPJ9aqTbn7+Yzzb8LPFPpMnxvwIH6BfCrbDXHR4JNJn55sTCqAE8z3t5umtO
0qQ674zpk0HMn5IJB2ziaeIdl6qnKCkCyYX7u+ecoIlUwGWV9VIiqFjiF6gf
R5Pzy66NPj9MBA/eBshPOU4TS718iU/DRXAw/HjZmFiavBlW/F1fRgR3mxv4
kjE0CW6737FTVgRz31j7/RDSZFxJdWP+CBHMGdu6uVNAk5wzL578HSmC3vYb
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
k8bAuRD48yKNzEq4s1vBQw6WPlhy1bcf/eN5U7P7A3ruu27qkh8UMS2wEEuH
X1hXJmXD1W0yCx1gvmeG5y1/4vvz95YxLthL4dXp3/DP8fCfNY3ouSvmJ5N/
4bwM9PdHwrPL3oWrD2C+d8YNacIW4bYhn+Gufqe/I+/Rc71Ne48N4n6asufJ
hfvsnP3Eh/D9p3JCzg9Wr/rq/hwuutBouQY+rezp5Pcb81DA9nBzA3ruapfN
0mGKzH6ZvpMAr+PaZZ4DU7/qOkzh/cd+GG4foQjDpHoNO1z+I1BvGJ5g6/Et
e4eecx7WuDRKEfE1cg/DYJeag8oaYxSRy09ZrATf3fxHthV2L1/v3VePnrt5
VPL4OEXMrZteXIeNVv5bvXaCItJH7iq6wsmR0UJVcLZW+lV++PvgIl7/SXzf
ZD8Qqn+LnnOLXb7sD+6b2h4qBj5Rt2JhLlxzX2M1gd9oJsxun6JI2Z7M7Ok3
6Lm7fJPDsN+ksv4jeI8g/fvSNL6vg1taA+GiU6I/NGZwPzanHpeCF42md7XC
mQYHpb7Voee81rUd/4t5Venfchm+8e7Wp7WzOO92BxLs4N+60g1VMIM/yYoL
1svNee0/h/uM7bXAq1r0nKhS1bJ/FNmiyd8VBX85+7AsF/5WHFqkDctMbi60
mkePpPckjb9Gz/kV3xuBz4/uDrsHv/ygk5WygCYnns6674H5t1bc2MJGkySB
G1brYe/7Bmlf4Ptz9sZtr9Bza2pSTrDTZF2y0DYa/nfeLH7dQpoMNfWa28CW
M2/PvoAbByqcOOAre2yidy2iyeqXd/ZV16Dnmj8eXb6YJj9PM2NOwlu2OYXl
wa90krI04TOPvgRZL6GJ63Ry4+hLFuOjhMfuUXjJ83S2fHh94ncvailNztzM
19wNH/jn56q5jCaGpS8OS8DPAvvtvsIXRTrKvlaj577u235yOU3Yns8upeGd
Zr+NJTjwfO/X7LSBs5+Ekmo435kUcsB/Nk5q7V5Bk1A3P6GXL9BzKRFqHJw0
+TYQezISTmGfU8iH+WTyBrXgrgNRUjZcNHFbW+87XsViKHcuXDcGv2/+9e0e
HLn9rCjNTROzoCX+AXB9GQe/Fg9Nzo6vGpaEV8nFc7bBHw8o/NfxnMUISF25
JJKXJo/YNFZdhouXUPMSK2kSl6tZZgcvOSQyXQ27x6v6cMP23Wmju/lo8uSe
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

          "]]}}}, {{}, {}}}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {200.00000000000045`, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 0.618, Axes -> {True, True}, 
     AxesLabel -> {
       FormBox[
        TemplateBox[{"\"\[CapitalOmega] \"", "\"(MHz)\""}, "RowDefault"], 
        TraditionalForm], 
       FormBox[
        TemplateBox[{"\"\[Eta](\"", 
          SubscriptBox["\[Omega]", "\"m\""], "\")\""}, "RowDefault"], 
        TraditionalForm]}, AxesOrigin -> {200., 0}, 
     BaseStyle -> {FontFamily -> "Times New Roman", 16}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{200, 1500}, {0., 2.443969316746602}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
       StyleBox[
       "\"PD, N=1\"", FontFamily -> "Times New Roman", 14, StripOnInput -> 
        False], 
       StyleBox[
       "\"PD, N=2\"", FontFamily -> "Times New Roman", 14, StripOnInput -> 
        False], 
       StyleBox[
       "\"PD, N=3\"", FontFamily -> "Times New Roman", 14, StripOnInput -> 
        False], 
       StyleBox[
       "\"PD, N=4\"", FontFamily -> "Times New Roman", 14, StripOnInput -> 
        False]}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {40, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.880722, 0.611041, 0.142051]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.880722, 0.611041, 0.142051]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {40, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}, {
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Dashing[{0, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Dashing[{0, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               
               TemplateBox[<|
                "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                "RGBColorSwatchTemplate"], ",", 
               
               TemplateBox[<|
                "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                "RGBColorSwatchTemplate"], ",", 
               RowBox[{"{", 
                 RowBox[{
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "}"}], 
               ",", 
               RowBox[{"{", 
                 RowBox[{
                   
                   TemplateBox[<|"color" -> RGBColor[1, 0, 0]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small"}], "}"}], "]"}]}], "}"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {2, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Above"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8697647018643336`*^9, 3.869764776366184*^9}, 
   3.8697666858605804`*^9, 3.8697667607878785`*^9, {3.8697668333397293`*^9, 
   3.869766871848956*^9}, 3.87001022100727*^9, 3.8702844175473843`*^9},
 CellLabel->
  "Out[241]=",ExpressionUUID->"daf20e70-4059-461a-ad2c-0f8bdf5f5b73"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"p1", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"SGOsc", "[", 
        RowBox[{"2", "*", "\[Pi]", "*", "x"}], "]"}], ",", 
       RowBox[{"SGOsc2", "[", 
        RowBox[{"2", "*", "\[Pi]", "*", "x"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "200", ",", "1500"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Row", "[", 
         RowBox[{"{", 
          RowBox[{"\"\<\[CapitalOmega] \>\"", ",", " ", "\"\<(MHz)\>\""}], 
          "}"}], "]"}], ",", 
        RowBox[{"Row", "[", 
         RowBox[{"{", 
          RowBox[{"S", ",", "\"\<(\>\"", ",", 
           RowBox[{"Subscript", "[", 
            RowBox[{"\[Omega]", ",", "\"\<m\>\""}], "]"}], ",", "\"\<)\>\""}],
           "}"}], "]"}]}], "}"}]}], ",", 
     RowBox[{"BaseStyle", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"FontFamily", "->", "\"\<Times New Roman\>\""}], ",", "16"}], 
       "}"}]}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "0.618"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p2", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"d5", ",", "d6"}], "}"}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Dashed", ",", "DefaultGreen"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Dotted", ",", "Red", ",", "Thick"}], "}"}]}], "}"}]}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p", "=", 
   RowBox[{"Show", "[", 
    RowBox[{"p1", ",", "p2"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"p", "=", 
  RowBox[{"Legended", "[", 
   RowBox[{"p", ",", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"LineLegend", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"DefaultBlue", ",", "DefaultOrange", ",", 
          RowBox[{"{", 
           RowBox[{"DefaultGreen", ",", "Dashed"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"Red", ",", "Dotted"}], "}"}]}], "}"}], ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"#", ",", 
            RowBox[{"FontFamily", " ", "->", " ", "\"\<Times New Roman\>\""}],
             ",", " ", "14"}], "]"}], "&"}], "/@", 
         RowBox[{"{", 
          RowBox[{
          "\"\<PD, N=1\>\"", ",", "\"\<PD, N=2\>\"", ",", "\"\<PD, N=3\>\"", 
           ",", "\"\<PD, N=4\>\""}], "}"}]}], ",", 
        RowBox[{"LegendLayout", "\[Rule]", "\"\<Row\>\""}]}], "]"}], ",", 
      "Top"}], "]"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.869767307062746*^9, 3.869767361717447*^9}, 
   3.8697673953704743`*^9, {3.8700102472286525`*^9, 3.8700102656398563`*^9}},
 CellLabel->
  "In[242]:=",ExpressionUUID->"023414d0-6f7c-4f25-95a5-5568785b585a"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
uoIqnZhccXTY6Hz4IzkJMm3fRHq9xbEmeMO3XXVJaNPskjeeW4WHlSqrvTWS
wWYHDlXGiEEgrWHi7XwyYu8WZRQKiuCnm0liVE8KKsVnfbJahTDiHOAvXHEC
peucdfZ+XI7+QmKYjDuJ3DcZRbb7BcHsn5Nf6ZEK19VRjfYzAtDxdhgPV0uD
8CrTgl3P+NFF8eV9PZOGJ4l3Taqe8oHW4jbk8eIUyIEzVUpveMGombbfdO40
Pl/bett0BS9SSgPY22PSUUI7urzFggesJ0W8cMqA0UhI2QbD38QJrVDJbFom
Xs5ryLGlfxFb0tXHV33PRBij/1Hp7x8ES27bjeO+WbjXl6f5iPKDcE9uZ+15
lgVaeuUlj+3fiZWTrWadxmcwEiys+zB8iXi0INE8XXQG1vt6jFe2LhIOvF2q
ZcLZeHW1SUKSukiM3R5wEQvLxsQmK3tfzgIRftzqVmBfNp7LjvAq/5gn+vXo
I16WZ5EdVVIqETlPWOQ5jPy4dRaptUJny/jmiRPzU226a3KwOXV4XCFzjmg+
9m/XvtQc5A41RHipzBF8p40vG03lgC761vNq+ywhV/xtz9V9uRjs8L+uHjJL
bDrI96r2cS6Kq/Nf3FCYJXYZHw3rVM+DtE1fc0MvSWxZbr0Qzs3DX4Nz2s/T
SUI/LnLHk595INI01hnakwTrpYVa1u88VDftHVxjRxKddClhd14ubOZDPi2z
JYkjnXdf/ivAxZtXz7/0WZHEBdqEp5gIF636VC7HgiSEmj1DneW42HSlZ8+I
KUkMLzO/+NGYC9Gk9vphDZLQ9ljFuWXCReNUC+8bdZKIvTPgG7GZC3VtqaxW
NZKQdmVoLN/KxVoVq1M3VUjCtuRelcYOLsoGRBYZSiRx30al47gTF0aFeoWq
ciQhcJG8s9mZC+uyzkiaLEk4fHt0ht+VC2c7saLVMiTx+dx+11wPLsL8JZsE
pElCaTL/Q/UBLoZvmgWOSpBEiPnhVrYPF9EFUmlD4iRRn2tUYuPHxZrzD6f7
VpGE29bXR/8+wkVO5qrcDlGSKM6+tLs4gAuBrydft4mQxMxosEFwEBcd9v6u
zcIkAdMt0huDuSCYeevrVpJEeqbw4u9jXFQfnDN+IEQS/wMPINGd
           "]]}, Annotation[#, "Charting`Private`Tag$253574#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwVjnk41IkDh53JUZHbaEpkjCLkiLLfT4WtkFyFJCkSQjFmxqAZkxxd7hGK
bC1KaCsl2VYJuWuto4uQKyNRiRp+fn98ns/zPu8/r4ZPiJOviJCQUP7i/v9R
T61dJN+Fw363g1X1YyDKvc6HMhmO2meKSuKJgEE2K+yEJg2DHU75fBEgizSU
PptIQ/ZwWtx62d9Q+uzXPp9kGjLN/W7tmLLE80B51aZMGlYx1z2M67DEVBWu
5P5Bw8egPt+zly1h55lzg6imoemY955T6ywhdGVvRdwkDTqHq8QeWm3FcXJV
l9z+CNBcy8SM8yxg3/ljRtQrAk2WGsf5XAsYXjRV+X40Ai8Lyemt/haYFdxx
e30qAtpl5mskNlkg8V1RT8HFCDz/aX1k1wtzFOdmvtlUFwHuGsUlXb82Y1Tt
VK+rCR1yjaQz+2LM0PKqbOH3rXQ86HcfSDhmhjtJ/NUWO+hQDWRrvdlrBuac
vzfZkY4Q45LQ95pmkHx96MNQEB2CZx+sPZpMQb1sP0C/TkfSmZYvP1ab4rgy
dfiyPANSO4Yq6e+N8Ti5+XKgGgNXKlslrjQZQ1Yq1M5Sg4G/aLX6bx4ao+JX
xZ0+fQaOFgn5XUszhli/VRRlNwO0+PZVjruNkV/iLXefzUC5/OdG0uNN6NqW
taWdz0CSXFn8wXIj6FZtmbj2lYHBwl3zLvlGiDHuzQ/7yUAwljd4JxtBi6K9
RFmSiWe00//dCzXCKZl77Qe1mHCobj1ma2SE5V1tvp88Fr3rt+vKlYawDpJI
XtLARILc5YTDHQboXtj42aeVifaG6M0Z9QYISnPb86SDiVCZblbXIwOkPyqW
YXxgwuVrUkD8NQMMLrVLHJ1jgp9YXZoaYoDYG8mxzXqR0KifjLBeboB/3qvS
UtMi8VhlGWPjLX24nNreMXE5EnHlzlWT6foYEQ/cZJsfiXWadczGGH3I6j3+
Ino7EsdHt/TXOenjEMsrmFYXiXGbq896f+phXvmPY26zkai4axtPc9LDFscN
HuRDLCi6ePi7y25A7leWspgfC2ni0ZG7f67HPK+pYzSIhYFdhd3OQ+sXewIc
7keyEAMGv/TxetgEFVvZZbKgY954LzZgPfbGa2+MbGHh1WyPK7dRF37Va8Q6
t0RB2lZyhWQOFfXeoTVV26PwqWRYrzaBCh2xf2Ku7YrC+6yTN9IiqPi0+9Bs
0P4oeE5E6IU4URHafWVCNGzRS86lKUpTwZpW6zG8GYWS054fJdg6SKYqll5Q
iYbKuZyXzXQKjIZHlefJ0dCw3TrG96eg4/rfnOB10bgwmTm9yoMC5TX+rg5G
0TB5GXDh5lYKripV/ZK1i8aUA9EZJkJBiehh2/TT0XiS1femIlkbDe9KRrKH
ojEkYrQy7sE6CKVaaRbdi4FirZ1nra4W5OROr/7xKAZJc//6u63WwtrkStLO
mhjUSdZIzMhrwfqivsJISwwU0sqanAWaSEpSEdcZjoFguk45qV0T8tzxoULV
0+jecHVfL0MT2uHpNwtjTuNsxqMjb9vXQnv9VJazFhtOUrz59hwNZEyttfmH
wsab6j3Xx1M0IPbIeXrDejYubaMVySVoYGDnffslRmy05Xnl0cM1kO/HEKkk
2BC5smvlX/YaIBXMB5IPsDHQcjO9S1gDsqrSxGjKIusmeeaGrsHPJVofYxbY
2L5M/dpoExlJB3gj5SIcyHYW6hLVZKiVS433i3Mwkmo/nF9KhoX7lykbGQ5u
XOXVJaSQwbj1t9AKVQ7evD1dObKfjK8O7up5RhzM1FnHvx9ahfGsi85PfDnQ
+rMoy37ZKrzXna1ZaOKgsS1vro5JgosEOzyijYP7jl8Km4NIaBxYQuG/4sDu
dcPxd4dIeJCrcP51DwdVVTI/V9uQkLzcYN/9YQ701L0ldORJ2D7lNxYgGgve
7el08zI1FFZ2rOy0iMXLXtVv8p9VEbqz/EhJcSxGM8+Ze51TwVXxgN6Vt2PB
H+O0inFU0PxU8wCzPBbDg10ZdyNUoGPJc7J5EIuPOenZVB8V9BnGbOurjUVD
sjovwlwFe0l2qxX6YrHvB9/pwqgyDCaGX7OUuAhWDmfRHZQxmbbayZbLRVCz
ZXeRgRJ+e0/Sop/lIuRWV9VdHSWc11H5XpDIhfdXvmHtGiVQq2Wz5y5xcWZt
Xs03WSX4DAn3F+dyoeZ6azD7iyL+3Tx4cmkFFwdvn5wZuauIindFKc9HuNh7
JtgubKsioilGL4k9Z+Cxxj5gp6cCHt3TVvTWjYNZrHz9sTsrIZb09+h/M3F4
05zoa+ctB4HbZi698yzM6CPHhKmyGHQNOC59Jx5Ly01CPvy+HD3ZRN/XqATU
OabaWBfIILrnO0nKIxFlRuGCQAVpbPR2HAnXSQJdXY9zvU0SbQpHhV9NJYH1
XVptY8VSkJ+59Xq0nsMWlwJFkSIJRFZO2pvnnIfzUe9h9YYlOFscwNnBvIA7
6X4DjZ/Fwa7PFYbzRXD9pkIPGokjXu/UylTyJQjmLob4p4nB8gJ1ZMXPS2A9
UJvumhEFW2174cmjyXAp8aGHh4vCPa6J7fIiGQUmr9SXLYhAiv98a4tpCgwP
SOhOJIng6Q+5msncFLydOzw2QxGBo3Ab5aZ0Kihtg8o1z4UxfPvdvuVhqZBZ
e92l4KQwwk/uLAnsTgWJUcY5u04YPYZag142aRh3furp2SMEq0zHwV8laaCm
yteW8IQQP/O5zkA9HUE+Qv4vXIVQEzLWdjAxHcZXHNkTqkIQOW96zeRzOg4t
DQsUal4g1G5Mu/xxMAPDrY8mSUcWCHMfkZdVtRmIOmf27YXEAuFgeiKshZqJ
hByLlrG784SlxK4f4bxMzPCFsyu85gmjqAjrekEmzvJb3QwV5gl2u5VO8kIm
nkieGJlYOU+0aMlLuwvzkFM/21YiN0/4t5S1j4nx8Jbs9Sd1xTxxlTx6YLkM
D42mrUEUqXlCsubAKVc1HsLWelptEpon+sS35Q2Y8nDbpHjbuXEBoe+xIrZk
Mw8bG0pTnD8JCFbpu6M0Cx7qPStM1McEhNL+SF2J33iQKHNklg4LCNuiu/d1
rXkgJv0+dfYLiIrd2s0nnRf5QZG3WY+AEMv7WmrhykPxdEG/WLeAcJx+miK6
n4c909UVrzoFxHjOof0ZHjzI1Pe6hHQIiLX8rP6Hhxf76Vm+JW0CInTbseec
IzxcpHjRoloFRHWGSdFu30WWcu+0axEQbr+9OvHWnwfHq8xzE40C4kZq/t4b
ATx8lPTtffJCQEwNBW8KDuJhP1nuTEqDgMAWSyWzYB5e93gzj9QLiAuXpGcX
QnjI/N3siUmdgPgfJPOaRA==
           "]]}, 
         Annotation[#, 
          "Charting`Private`Tag$253574#2"]& ]}}, {}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 360], 0.002777777777777778]], 
          AbsoluteThickness[1.6], 
          Dashing[{Small, Small}], 
          RGBColor[0.560181, 0.691569, 0.194885]], 
         LineBox[CompressedData["
1:eJwUV3dcje8bTtIQSiglKZ3THqe960ohUtJA40tDSijR2SMNkTSkJCkNNERI
qVBKShJpURJKShSJFun3/v46n/N53+e572vc17mPgm+Isz8/Hx9fuSwf3/8/
aTtNl09fC8PvCN3uzS7WeLr194BsQRjeoOThQidrLBBY+KygKAxzruEX6+ys
YfpQ/Jb+jTA82GR694S1NcJocucflYTh4WS7kIOpNW5oa3C23QlDlLtt8mo9
a3weNvF9czcMHgYnnIbVrbEud7PdvntheCmfbPWAZI3dnm5aPyrDEP8wyCtl
rTXOrvRbyXkQhuRKsStHJK3xrOXIrFBNGOyenlixQ8waC0/yPpyrDUOsX3u+
gbA1zHGmYV19GDqb+PbILbAGdSa9+HpDGEYMZfREZ4Gbd/KTjZrCgGEN0t+f
wNDBMsbjZqK+xFat8a+APPnxnu0viPu/RDmOfALc+1pt37aGITTpR8TQOyA5
rU8toD0MVwbynwx3Ac1O38QnOsNw+thjybGXwKLFs5O8N0Q/Vd5Hp54Clo+F
3i1+G4YSpaxOgTqAzln1+Py7MIQszrKQvA/cMlAsXP8hDF/yo/LV7wJfxiiJ
N/vDYC5PE994A1hfYEk1HQzDQvMsqu81wNNnm2fDUBhkgpQ6oi4DKTIe1s4j
YXD4Ya5aeAFoaQ9Q7vsWhl2z4kfbzgKC8dSlQd/DUHui8/r8acBqU9TE7/Ew
8GvWtFOiAcZ8UnfErzC4KQkM+XOB2xVZNUunwlAW2tefRQNGQouvps+Eofzr
qfq3IYCielUc+W8YThlsiJU9AHh9agy9/S8M65u2aPn4AuczO3dZLKBixYf+
W4WewMudAxZNC6lI3uC8bNIVEBYfV3QTpEJ1U5/NJkfAuumfyEdhKvymWx0v
bgZYkUt+HBKlws6QqkHIg1Izma7ppVS8S5TucTAFvv1SfhAtTkWj9DK3G3oA
+aZBrvgKKlQOXbkorgnsCbA5dWkVFSsldAroSkCa/I5gldVU9FsuYfevA1q7
97jelaHic+0Z8R3SgMi5Q6ZYS4XLd7H9jyWADdtY8s/XUaFzd5xhsgRgLzol
uHs9FU6ZZzeVLgLuVqd+GyBRscv4ygWff1YYpee1hShTsVxdS2zfuBWUdW5X
/FGl4uSjuK+HP1nBe6Q666QGFUGvElTCX1shPe959AptKu4sX1Kb9swKbV49
QZd1qHBY9rbk3kMriEoOO6nrU0EW6P7ed8sKti9/G94zpKJw0wh76RUrcE8t
XGtjQoW77Q9HmzQrlFsvX/jSjIpH6t1+x09b4fus3BcPSypckVRWz7WCyl2N
l59BhfNzISvxUCv4HDYtO2pDxc6bRn9891nhopJdxr+NRH/hMoMPdlmh/b1b
xGk7KmKTbkyttbfCknS/AEl74jv5t2aMpRU2Ooc65DpQUa8zHflbxwrhouF6
Wk5UCOx8NH6QbIWK+jPSVc5UJJV4Ub+stsI49+L8RjcqIts+CgcvsYKaUcHg
q11UJP7anz8zbwm/H2XN/3lQ0TqyaNuZCUtcKnx8+4sXFVH/vR8nD1mi0/dV
GnUvFeNxkikNPZZYJvueu8CXioitrzSDX1hic+c3v/h9VKxuMa2SrbPE8YTZ
LdIBVNQIndBvK7NE5WZhytUDVMh96EtLKLTETz5JSZ1DhN/ORL3fkWkJ9SrF
vw+CqVisfV1Q9qwl9h3T6bcLpaIlI0V4NNoSmRpWTzuOUcH8FvWhnmGJrsFt
N71pVNwsrYnNO2QJ8cseKd8YVDTPJs2f8rbElt2BLAabCqGgzRZUV0tELqd5
C/CoSFhtYBloZ4n7z6I2JR2nIuX0zTkfc0v8ijqrIRtFhWDYUrovxRKaFpcl
Ck5Qsaf01tUDJEvsnyye1jtFhUzsTDR9tSUul1T11Zym4kWqvfiZJZZ4E/i0
3j6e8NsfcZt8PkssX99V9DqRikr98tVNvyyw9e1Akl8yFYckis6MD1sgKmWc
9j2Fiooen4vy7yzwwGHei51GxYc6F4udryzwW3CpjdBFKoQP/z2S/MQCWo9k
VM9dIvrz76Z0VloggKkitu4yMS8ZwQy5mxbI0TX8XZRDhbzNBpvgXAv0fLV5
a3iFitOtvWfqz1tgxdUdtXXXqPC+0+ykEGeBbXv25jsWUpFXlHs6OtwCJ6QO
x/dcp8I3fcJg7JgFqltZx/bfpMKmeKfjnkALTMWecv95i4pPfwJfdnhZgGJz
3opXSsXBF013d+ywwIG/eeTF5VR8T5WZ7dhogdyy26LnK6jYumBhxh5TC7wN
rhlXuE/Fm1Pq58a0LLBSpeX1jYdUiPds6ItWtIDDx56HJo+oyNo/TVdYbYGY
i8N5T+oIPZUXetUvsUCNy2TsjieEno2SMYcXWGBmicCRd41UZK8fH5edNIdu
w/KdB54RfnnllNE2Yo6D4evMfz8n/Ns1xU14b44rxprrI15ScdW6KNWpwxzv
xk2Fl7YRfPVT+lY3mUPyut3YhQ5CH7i7DD00x/Z9OztIr6mQHPn54/4dc5xa
u6/qVjcVh4+8vHM+3xy1XaHZ5r1UbDvUkEK/ZI7ZxPCYp31U7D92O3nPWXPo
bYk/5PqRiveShwrsY8xxiD/D+cMAFZs/vX5lyTbH1fsFxoc+E3wJvV5sfMQc
fWHlctPDVHDzdmw38jeHlFa9QPRXKryOUjLMPczhNPRqRGyMii9rfUc2bzfH
6ez3rRk/qGj61GnsbmuOx+6j5coTVOz9djzyiIk5/kr8uVT6m4oAS4/H8Vrm
MHguHGU1Tcxvo8fULUVzBJ+QPNA8S+TvjgiZntXmyLckbd81R0VHxAsVkWXm
+DClYzAwT/D7xlbOcqE5pG9brQnhp2HU7eskY9oMzkEOC/4I0PDlWMvNylEz
xCl6DsUI0TDJm7bmGzBDfW9gi8RiGoQ/c4q3vTHDXCqtNGsJDQKpB0eyWsxg
uD06XU2Mhin191OTdWYIEU4OL19Ow/eWsVbXCjMU1F7237CShgMFFaEVN8zw
kXXD/oUkDQpenl0KeWZYo39fx0Oahk6zP7NJF8zgOvpU6vMaoh/hh28XJZgh
/lrXXKgcDeqU5rDjUWZo2PtpYE6ehtOvd9TxMc0wv/pnU6wiDVW9vEcxwWYw
bpsvWaVEw6Uj0Qcl9pkhNG7p+RwVGh57X6zJczdDke0ajqY6DQsxWWG63QwD
cyq+lZo03DZpd3ltawbZe4Z2GylE/9VHzjBNzeB2xFbrlS4Ny76I7VWgmCFB
1XnlfwY06DMmGl+QzdDYv3d22IiGinK/xxFrzMB36fCHMFMaKLaFDqbLzWDi
xm7gs6DhgY2E37SgGY4tiy0+Y0XUUx2dv//XFMWN55NXb6CBMRQvf+KnKQaP
X2FcsSXwCm6tdRk2hZzpnT2UzTTQrzL6lPtMsWuixvbBFhqSd9PCFnSYIqm4
Rc1uGw1HbHLCPzSZosn/rXiHI4FX2v1vfY0p+Nd9mdy7g4aZkgVDN8tMYfZm
sverCw0Xp/jNs66bIuyswGP6ThoKDjRMJeeY4sZWicKF7jR0LbonGZ9mis8L
5RMTPWk4rLox9Uy8KdY91KSu2UND0Z3+kLNRpthNM/PM96bh5jx/XgbTFGe1
t1jr+dHwib1W/XqIKZ4N71Su8achpf+mwCN/Uwjk7ltqH0jDD3uKRo+nKSw8
j050BdFww5CcNbPDFLSVx7t9D9Mgyl66S87OFCUt8TVjITTEGAW72FmaYjgm
4yrrKA1SMa2JdH1TKKAwTpBKvD9WLVysZgqPmfLQZDrBv9+TqkF5U5y7U79L
jkWDvQQ1lyRliucH2yyKODSsSfR+ELjUFIvIHxQNw2mIb1+z6M5CU1j2jYrU
RRB8PbFk8s2agJ7257tDNA07DPxXuf4wwS0nka7uGBo2bdfoKv5sgi8iUg/8
Y2mwvKxbsfidCdY/JuWOx9GwpHNNxeF2E3hydE9xE2j4NX2mrbPJBKkGCBY5
S/ATpCFg88gEL8YcXFPP0XBv35UtZeUmECrwNFU4T4Oe8ZXLGjdMAJ8D8jcu
0FAc8Zq/MM8ETBm6oEkGDd6TEyFqF01wpz36W30mDfvPXR+4lWSCr2eS25yy
aXDZV+ZhftIEpE3ZFb25NCI/nr96zjXBf/M3sgKv0mBtUbzRN8wE5yvuR//K
p+FvrUTp3yATvAxtCjpeRIMMpU7yko8JhNVfOy25QUOUOu8wdpvA+tMnwwsl
NMymid794mgCVuZPWdIdGhpX6g2lbTRB6U6+hbfuEvwb1S20NzfBqNiyL2b3
iHnpjBRcqGcCpaY1LxsraUi7afetRtUEeyNVy1we0KBTO3A7Qt4EF8yMMt5X
0/BvSsXVTsoEr37ZRhyspaHvy4+XK5aZYPFN54Cpx0R9r1XrPwmYwCbA2yGq
gUbsv6GbK/8YgyMfrCfWRMNV9ifzcz+NUdbNls5opmGs1nE+9IsxxpJj55Ve
EP6vTIlz+2AM5W1pg3daCX1VL/VZvDaG96KrzZbtNLjN2f9We2GM9Oo7t591
0tDzO/G57BNjtNEfpe18Q0NupYvPigfGENV5we3voWFr9clby0qNYTvy1i/4
HZEfXrL3lhUZg5f3Zcvsexo2VggeXZFjjHteU9ox/TREL7Hok71gjB+rFklK
DNLQcbN8Wi3RGKovJf5mDtFAKg+ptogxhu8p+X7VEWL+Vu3TcOMaI8Na62nZ
Nxq2cFKsQsOM0TFrdtP6O+GX6/y/zx40xtK7W1Jaxol5Pnp7yz1fY2w6vIvl
/osG/90Fph/djRGu5O89OElDQvlYvdgOY1S8P7opdIYGTlrS4AY7Y4xfOK4x
94cGo9fp6SwrY6g5J0jE/qPh41+ZvnJDY/iJXppeuYAO5xTyrSlNY1yqL+zL
XkjHac3nSyzIxujk3qvXEKTD+C95PEbWGGJGT4oqhOk492+LR+cKY9j9aEuy
FaXj+CuXjSqixogo/EBrXUpHW/eeknB+Y1T5jnl5idOxWDIu9e2MESbW/N0w
LEHHIHfml9m4ETQ6RVTDVtGRsOD5s+xhI/gnSInxrabjkaLqysUfjJC1mfw7
ToYOCxWjF/TXRnjNp/dWai0d/32Qn/zywgjiVajNW0dHxDKJWO8GI2w55piv
vZ6OZH+j6LcPjRCp4RV/n0THlFzdJ48yI9wfPHBsszIdnloD+X3FRviVRXdv
V6WDItL6bP8VI2juPmG1V4OOkt6HWycyjBCw/Bz5qxYd486fSdHnjJD9LFuU
rkMH+W/UTuk4I3RH3Rzn16fjh0Nb751II0hYPHidYEh811te5sQygv1k00MZ
EzoU7Y/3/gw1QnTJ67xrZnTcyvFzSj9ghIeBg7G6lnTc+fVvqa2PESYVJkKq
QYdsZobExG4jaL/l27nVhuhPItzzmpMRAlOWmXdtpCOtdnLwPzsj5DjIrve1
I+6r3V4iDSP0CKoJj22lY0ar+263kRFWPDIaYzrQsfVv/0SmthG2MTd2LHKi
o9Xh0YH9ykY4oetSddaZjhFq4wq9dUao/uqdvdaNjrm07d8XShlh+kpwTOEu
Ojryb828WWYEnT2cQwYedOz6volyR9AIQVKnnWu96PgYHZKU+M8Qea1pxg57
6RCxPyUVOmmI3tirct0+dDzd/LNu55ghVtmUCvjvo+N5zvIkfDaE499HIz/2
03Fkkz1Hq88QJ8tetHIO0JG3UvCEfJchHgX3lgsfosP1VmG+5AtDzCiPXEoJ
psPhdfZH8QZD6H6cipQPpRN7sztFrNoQBy8uOlB8jI7X3dZnl5cb4orLiu3G
NDqaM5sWrL5piHdLFAzqGXRMm+wLX3/NEJINWmuc2ISfWqOFdLIMsT3cfEEv
l46Cqtw0m/OGiDXeOhRwnA4fUUNNjwRD1I3vapmIJPwaf+9JWIwh/hT5l4af
IObF4sqeczxD6O87li56io7AK4zfZTRDHF4bEZ52mk7sF2Une4MNca0rwV8x
no7CmR4JoQBDvE+8ZF+SSIdV8uEUg72GWL2lSMcsmQ5Rz58igbsMsYO/Qqox
hQ4t2e9HsrYb4vT9J3POaXRkPRpteLPZEI/D2gf60gk9KugiUjDEX82PTUGX
6BBKljF0NzaEwdBYyWQWHY4n9m29TDFEcPbf1MgcAu/RTzZfVAyR776Ys+wK
od8OTXkjBUN8lFjte/EaHScvveo9JW0ImedkO6VCOvzeB9D7lhvC5YSe1p3r
dESRY0aNFhvijKX1SsubhD9PN5in8hviyZTjbNMtOvqfPvadnDXAv1teH9xK
6ag1l/7Pc8IARkFBDR/LiPr2+1XrvxrgiCKj+HAFHaT2LU8onwxQ2HsieaaK
wF+5Xyun1wD9qecYJx7SUc/29l3VaYA123P2LH9ER7je2z3xLQZwFS6xzayj
o7KLqyDSYID42gdqqk/oiHafyD9VbYAG1jPxskY6JB70fxe9Z4B5vTeTeEaH
WuSfyeQSAxiPDvY+f06HjemXqrUFBjh6baJu90s6yoM8TYqzDXB974LCT68I
PIcEjlimG+DTarHEIx10SKmmeXWcNcDaNlnq3y46tks2/j182gA749Q8T3XT
8eaivaNolAESbY2tV/YSeAt6HYvZBng6t1E5u4+Oqvu6f53CDLDgnstSjY9E
Xq4RcZ05ZADTIz4T9wbo8JiUc73qb4BjqiHdNp8JPJHas657DFDcz6l5OUzk
4+5/NsK7DDCYcfqq51ciP6TttWu2G0DO7ULc0Cgdcpu7K5l2Bti17FrosR90
bFkf8tHI2gBJjaW75n/SEXy4PW/GxABNx2st4n7Tce9gy79qXQMsNH2pKDVN
h4aJyo+T6gYwn+gVyZsl9He+SXUlGYBaPPJda44OMxGteNJaA9z0n+6smqdj
iTpNf3qVAYbkBB9s4meAzbfzwMtlBpB/syK3TYABwdxs1SIhA7ifVTi1R4gB
32iVY6f4DJC8VTt4RISBqOHHNkEz+mheaOFKW8LAyAG79O0/9SHwcKspvxgD
OYcSQ42/6sOCtls+YTkDtU+PPiN90gdNe7+gzEoG/jQ9z1n5Th8lw8e+XZVk
gBXO/i3UpY/hnIg2HWkGrjp6Pf73Qh8KnokVD9cw0OnlJDLTqA/PlZlZW+QY
eGNh8mTykT5SWoqiO+UZWPxr+tdUpT5aYiqCfBQZ8DOnnv97Rx+CaHAaJTMg
qXQuX6BYH1Yz7YZMFQaO0s2UxK/qg3Hno+widQbiNu8UX5elj9sHv/Of1WRg
hc9LP500fYyQ5oZlKQysnUyW25ykD8W+xS8LdIn+L8dbesfqwyttdZm+AQMX
r5XUciL1keqklPHIiIFLWcNXL7H18UJEP2KbKQMtjepfasL0IfTYOuCNOQM2
Nw7Gfj6sD3C2O+yzYqAuIitaPEAfTIP/9H5YM5D4puqNhbc+7owFSXNsGZi7
ci8q2F0f3/IZ80KbGfDkJkblOuuD7BMzeG4LA3Cz6Oq218cemZTmddsYiOc+
YK7cqI+09pzb1x0ZOPly8SFnS320nilJM9rBQFCRyvVzRvoQ2fSQ+9iFgfcN
kgZvKPrYMP/Mb/tOBqSMuoTk1fTBrniz5e1uBk5dOahwUFEfd0M/awd4MjA4
2xNeKauPUbVfqyb+Y+BrpbqCqKQ+lD4t+MvzZmBRuf9CbzF97M0U61/sxwBj
9VlShbA+Luxc+/S8P8FPemXkCn59vBJTv7k+kIEEysiao3/0sLjJOOVmEAOO
3jpj7b/0YBO5iWV6mAGxv5lTxmN64Jq5ejeEMCCtbGWYM6SH8l8+m5yPMtAQ
p1yw5KMevt8I0egLI/oTO2DP7tGDSgBXIojOgMJaabnRdj34yMdN/2YyILJr
m5xvix4udl/oi+AwsKZfZmtPgx7ak6/VLw1n4LJG5mW3R3pYsu1uUXoEAxlj
X2U7KvWwcVFdEjmageP26x+5leqBV/2SdjuGgcgPe072FOvhHv2dl0UsA6v3
Pjzie00PPyhfNzTFMaAz7sUavawH1ZFpFbcEBn6T9+ay0/Xgmyco9jGJAa3W
wc9Lzukhw2vl70PnGNgkuGJTzhk9dK5a/3Y6lcDrtKTaOEYPy15q10ZfYCAl
YHJbe7geNp+yyBfPYICPOvPjCFMPx63t4y9lEvP7waJg+TE9VM7uPqaSTczT
9m9Hyg7p4Wfpfve7uQxkNWhv8dqvB/XDYVa4StQrMdQW9NbDPqVI8vN8gh+G
ukKpux4y3yeK7i5i4JoG1vq56KHrQub4QDED6r25CpIOehBzvv46pIQBgZlo
jeeb9GAnWvnwz20G6t3WmJ+AHiLqG/JO3mVgb9N5R2tTPVRxO2JX3GNgxwNt
Xz59PUwY9odcriT6uyhDrdPUg8aP727qD4g80kg8cVJZD/sL58zuVTMwE9N4
druCHi77iq63qSXmeWIuTWaNHt6skRZ++ZjQa/TQ+eGVeljeqTTm0cDAYzvn
uMpletiaoN/x+SkDmnMjYfHCeojavKHqaDPBz076jn38enjA55T9r4UBtxdG
6yz/6uJ35X8xp1sJPpcf7pWZ1IXWsYOHJNsZUF3qcXL2uy4CNJjOuZ0MNM/Z
yr37oovswRhjrTcM9GqEXq4b0EV3VopcVQ8DJtpkkevvdCGxO1dg0zsGlN4U
up9/rQv75bdGXr1n4BDZLjH6lS6inz1s/a+f4MNqSwG1WRcPo5rLv3xiIDp5
JvfAE11MmXdfog4xEHP9Cte7RheUyc+RC0YYCNudbuhRqYsDJb8C478xsD6G
/HxnqS5yA/m3S38n8sD7ovnOG7p4qyBucHWcgUqjLTG783Wx8u3aNTq/iHmJ
jMr/L0cXDinqCx5OMvDfz8ws/wxdxDiYDNnNEHno8u3AkVRd1Ahubun4Q/R7
/YkQL1EX0zWupd7/GCiSj6AlxOpCh+mb/o2PiYt/qHdzonQRpHsknLGQiZiK
fzX3uLrI+8r1FxBkwmE0LK2VroveK3H2ScJMSPsYmHwL1cWqPek6sqJMpE1k
5C0+pIvtUvlSBUuZ8KgQ7lTfr4tTrXfn9MSZSH/2unm7ty5qY+sGaiSYuBxx
MIbmoYvZDa1N9quY4G4lL8x21YXe33clr6WYiLixH88ddXGo7GuqnwwT6zxT
zP/Y6eJq8Az7uywTbbIrJjVsdNGnLOTLXsfEhs7NB30sdCH1caWd0HomAuMu
XrxgpAuni+u1zpGYeOx+NLJNRxexLpSV65SZ8OGYKIhp6KJuieVskSoTYhvc
qY5KuvjzxP6DoQYTF1ZbcpPkdaEf7t5Qp8XE2khXo04ZXRw2Dih21CH4WCWS
K7tKF9fGw5J79Jjoi2q+v19MFx+KIhn7DZlYlrQ4qlREF9L7kvb8NGbiykrj
SX4BXTivzbLlmTHx+U/9Crd/Oojruq622JIJk03knsJpHdQnVoqfBxPlC1s2
L5jQwZxd46SCDRM0V4qn56gODPk7e29sZKI+qEGiYkgHIff760zsmHCOWXRY
ql8HBWE/Cp5sZSJ2cn8gs1cHHzX/JexwYCJYat/Cvi4dyAyJUt9tZ6JlB818
4ysduGRLex5wZmKfjIxESbMOzrgrW/92Jfgcfxa5pkEHTyQMlCN2MfF7r1D8
6Uc6+Ne8YelSD6Kf2W3af6t0YHTCaeKCF3Gfp2zgkTIdhFru6SbtZWKL8qTB
UIkOiqYO1tzyIfQX9kzzLtLBwC3mVfN9TIzefHG694oOZINOxj3dz0TZq/Zl
npd14KaYGup6gIkTqj8UetN1kNCbu+vDQQIfraBub4oOGlNvWRwKZsI77MT3
wQQd8G2vVpw+QpwfFc0PjtWBifBzkehjTHTkNAzNROngaG33dzEaE8vdrG6d
5OngOmuoM4NB6NvMNy/F1MEnvd/3ldlM/GhObSs6poO1o/y5pVwm3kvFqSJY
BzuviZ+yOs5EblAI/5tAHSTulQtujmRib/grz6N+OmhareG66wQTOsuhL7ZH
B/xtJqYDJ5mgvNh2+uZuHZjFbZYPOc1Egm+sl5OLDsJs3QT/nGGiiXGy8JeD
Dm7M+X6LSWSiq6QnJMNOB5/Lj7RJJBN6pa++aWujg3VHeBVZKUzIPe7y/WGh
g92qZ7LU0pgEj9fPZBnr4Gx/enR5OhOiwxpq2/V08CwjP2jDJSa8Gn6b8Gvp
YKFbmdOLLEKvqsyqeyo6MF/22NAjh4knKx8VhSjqgNrYKvs5j4m3pClhNTkd
3Dzex3/0GhMH131o/7xaB0Mm34bnCpiINJJafG2FDuQnZl7EXmfCIMqsKGCZ
DjyKhcpW3WSiZ9m3O+oiOjjnvyoj5xYTLu8a1/9cqIPncooRmqXE+6+OTFf9
o2DRG0pAZRkTKU0ndWNmKLA8a+mwsYIJkahbL11+UUDfuk3vVRUTfOXxLxS/
U3BroYf0fw+Z0Jqs15z8QsGXBwHzwzVMvGr68/XZJwrW06iDYXUE/qLXQrnv
KfDUjmrme0LoP8R3nN1DQcpw0u0zjUyceSHnsquTgpacrLTVz5gghb8NN2il
QNCzmHvlORM3F38UkGymwGpllR/lJRNHj3Z/mH5CAaOlccuDV0yYnQ6V6HtE
we2YTm27DoJPYvF/cp+Cr1YDqzq6mBhr1g0tKaeANPPjz95uJpjKFRkZtyn4
786/j1/fEvmRkip5upiC8weXPKX3MeHqw/7AyqfgJUnm5sKPTAQ0S08fzqVA
uE85JXGAmN9uRS+/TAqs0wxYaz4zkRhrL+p5gQKWk413/jCRV7kbBdzOUVAq
smOT3lcmrr5/snFHAgXf6vZo1IwyceNJ5IvtsRSQOYck7H8wkfxIN9MpmoI9
Bqzprp9MrFA6c8slnIK0sZN9vr8Jf4rZCbmzKGjNT60fm2JiJW9dtjeVAhGf
vCLWLHE+4Bkz6AgFNjK3kwTnmLjkKXiOdpACTns1LXmeCXmB+JHo/RSUnXnu
JcfPwrUHa8JTfSgY29izoUiAhfr24O0FXhQozw+pGAqxEO660ePhLgq8K34v
qxNhwcP8v6wOZwrSQxf+dljCgrkNXWbMgYI2teVvu5exQBdwbRHZQoHoJ7la
/+UsrJkvLVO2pcA2UyN/fAULZw94tG22ooC70zSeK0ncd1BkfZApBeVidsdE
pFnY+fFEXoIBBd+furmnrmEhKzbFrYxCgUqkn5WCHAv5C2cN+9Qp8DELJd+Q
Z2FHDneTiDIFF3/xRE0UWXC+MhhpuJ6CjhtnxuvJxPl/syP+aylYGnDxtZMK
CxlnT3DTVlOwSb7gYa8aC/yj202aV1AQ3l2WF6jJwmUeae0CMQoqkh/H/tJm
ITe5RdlkMQXj9q9CjuuyUKcjtfvYIgrUFr13W2LAAnVZa3EJHwV+1d/MLhix
YNx1ckvvlDYu0WcVSKYs3N8fyf1vTBudFGHhW+YsKEtRJvo/aWPZyKoxMysW
VD9TCg691cbmPMWORmsW9GJJF2dfaeO4l06Viy0LFvMlDWeeaqNylVX2+00s
tK+jqSvWaOPni20xB7ewICK8ruFhmTbUT3kcmrJnYSjGOcWrWBv+1oHOUY4s
WMtVnJvP1UbWLNVYbAcLs2WztdfStfG6NEouw4WFqKPPZJ2TtCF++KyA8k4W
gute5iw4qY0tSpdH7uxmQbS0xrGMq43I98Wtlp4snM7YrHA4TBv3L1SVP/uP
hUWiMlKqB7Xxa8fTSzu9WeA8HtP84qMNTdGuyH5fQp8Oqt+N3drYXz8QGOzP
gtzbg2XU7dq4zB13nA0g/FB3QmHDJm28MZzXjwli4U0e96qEhTaW/1iyRuIw
C47fxK2G9LSxtVBmQVYICyq3/n6tUdNGlK/KkOpRFuaK5govKWjjwRrDlrIw
FrSqO2nc1dqY7LAptaaz4JVh6+Qrpg3thB3pLUxCH0kxfXtBbQRu3hvuzmEh
9urMOuM5LeTwHfYf5BH9+z1drvpLCz2VLPvQCBa23N0gJPdVCyuOndKZi2Lh
2CqDf5L9WtimcV4qNoaFAY39v1Z0a+HEYN7cyljCT5U5QytbtVCddXsgO46F
saryTulGLUztqmnSSGAh9dWxB+urtUBZ3lJSkcSCkml+unaZFg4860m1PcfC
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
lZbiatuoxrFTbPWzUcHc53C/Sx/UKLQsezemrwrTTU73HN+khu3y+4ULLFVI
KC1qqfzCzocisVUrV+Hmxju1/s1qRGUEJ2dKVeg07OnV9y1qvLU7k1QuVGH4
t8YjUb/UqHjx6Mtnrgqrjv2M79SmRvijoSf4vVQ4Hmi4alsHm19+AytGmqjw
RsaZJf6nRlao0n2xkQqmHxP2P9DTQG98pNUOQxU5T62vwZ/nOv9CPRUmHt6r
CzDQYFrZ5e8fO5TkfLWhBp8Or30r+a0E5Z+z7ENnDbbZK4dO+qEk5627avBU
T/BiwzclLgkuTl1tpMHzsCuvTjYpyfnrbhq8yVvn+vq9Et/vlTnpd9eAqjzT
Jn6rJOexTTRw/3in+9SXSgzYXGW+vYcGW20HRm2uU5Lz2T01UO4Z5lhSq8Qi
15cGkl4amHb18/pboyTntc002C/4cHn4QyX2tX95n8nRQKoNoKLvKcn5ba4G
qQLRnvO3lXic/+feYL4GmXYbu7XeUJLz3AINvv5qu+18XQmz5d3PXRFqkPbt
e8OGq0pyvlusgefySo9rl5Xw6Cv+z12iwcNJfzp3vagk572lGjSOfsHxOqsE
Xd9HWy3TQN75VUTKKSU5/22hwc11y+X1uUpcTnNYskCugbPTF3ObY0pyHlyh
gaTg9rI1R5T4Mc3Vq0mpwZwRK41KM5TkfLilBp15k75z9ythazLFYa2VBryM
YpugPUpyXry3BoaysafO7lZicam/pHNfDY5ucKaNkpXk/Hg/DYpTex2cm6jE
gY3L9JKsNXAycjQ+Ha8k58n7azBlJL/QaLMST5zWvpUN0MA3VHZ5vk5JzpcP
1GDz8wsGlyglON9iK7JtNRB8np7M26gk580HaRBQsCgsYp0Sk44ln3YYrEHJ
ap/td1YryfnzIRrsDd7202aVEkxgRupVew2CZ2gzt4YryXn0oRpcTs9I/7RM
iSuyvI2ejhp4pfhXey1RkvPpTux4riv9Tgcp8bP6StDjYRocmztfLFygJOfV
h2sw+uhmZYy/EnYJtz2CRmjgZtwj7PUsJTm/7qJB78A57Z7TlQiZ+MTu60gN
dk1pvH1umpKcZx/Nrm+2sk7prURGp3f//9879KzaMHj7JCU53z5Gg5A1IaXt
E5R4eqmlo+tYDVZ+npW21E1Jzru7afCIX3y8lh0NL1L/1c5xGuys4/2bNFJJ
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
NPirBstXD9J7wJETL+Mb2++NNn+qN5HDJSvr7+VmDW6v/PTwWxc58TNa2PiM
pc4adpIjav7Z1xN/sP2gNTJR3G5BPI2fGqSs+hJo98MCJ8Qlt6p+sfmotRjk
/sWC+Bq/NSjPsvkW+N4C7x7cz5vfpoGD27ijmlcWxNto12Dk+93T9z+3gCK+
LuVThwa/Z3u1Fj2yIP7GXw3KhqVue1lpgVnjPm2I/qfBLelBftcKC+Jx6FE4
tjotYWCZBXb8/b3QUJ/C7qaTbX5XLYjPYUAhZobZdM0lC1Sc7+qeaEih54Cm
A8fzLYjX0ZnCjvNramtPWKDzCv4gWVcKaQdqO3U/akH8DiMKC5wnC0YessCo
/pb87G4Uuth1CFbstSCehzEFry5ig6zdFljzyq7d3oSCoGftk7okC+J79KCQ
17Y0XRRvgbz/RjUU9aTwW97ZzTfWgngfvSgUODyqTtJY4L2f541JZhQaCnne
lessiP/BoZD8/PsJTpQFVKazcx9xKWx9md3iF25BPBA+hWc+wfI9IRaYc3Px
zkABhTIq0PZloAXxQYQUVhY+VNgEWCCZilr7RUQhzurLj6iZFsQLkVB43+nT
8eJpFrgznJ63XsrOz5O/bmaTLYgfImN/rzjgyoIJFujSkjiuqwU7P+kT+Plj
LIgnIqdwv+HTJCMXC4zO3WezU8HO1/PY+QGOFsQXUVL4EzRl2jk7C0QHHzeT
W1IYymgVvWwsiDdiReHLet9by3pb4JT80q9jvSk88NT3LpdbEH+kD7t+f0ty
+0ks8OHxjeeO/SismV7zZjPPgngk1hTMVSt/fuppAasd1SXF/Sl8+FBVN7Wb
BfFJBlAYHD583wUDC/hPenXUayCFAYee2Sv/mhOvxJZClUPbvq2t5kgx/JZQ
O4jCt6d36n41mxO/ZDCFSUa7mxc1mePelb9RwUMoXA/Y+aT6nTnxTOzZ9730
d8eEl+YwWmMyt9mB/Xyu2KLgmTnxTRwp/H2gWGf3yBxj7CSuG50ozNrgdySr
0px4J8MoHOry46Ciwhzr3vftZzycgpIaE7qnzJz4JyMovLNbbyi6Zo4zGUN7
prhQmLajPiSlwJx4KCMpWFfm7xGcM8enOWNblKMpOPRzSkvNMyc+CihcUecs
kOWYozd/am3uGAr7fvq0HMw0J16KK4XQVxFTrA+YI+BuwFVnNwqNEyZEnU43
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
cJNeNk6LM6Uho7W3xcTjGq/FucX6r3BDDOmempBfE7Qwi1v/QK9ETHwudy3c
lvv2KC4Uw9f3tTftwcbjReOdzCUx8bomaRE8wCJw4jkxtvVoHmo6WYtxqZyY
HqfFxO/y0mJtYFD9w1wxysr+Sfd4s79vkBy/56iYeF5TtLjNsaKCMsX4p+6h
33eaFk4bdl2xPSgmvpePFiM2Lh7T9p8Yw5yljad9tTAMNDe5kSom3pcfO74X
jua7ksVY0dzv7qgZbL6ecooMShQT/2sm+/3OB3oNjRfjWI5j/q1ZWnRv+fGt
yyYx8cDmaFHhfU5YS4vxKsgtffpc9vezFlMn1GLig/lrUdcSb8usF0NmMU3z
MoD9e9hRizlrxMQLm8/mb+qoqfarxPB7NC94+QIt3ijul5qEi4kftlCLmIpX
698tFWN7YphnW6AWV879WVkSLCae2CIttnsfOHZgoRg33NcPiQ3WIrXbNJU6
QEx8scVa7M3Z/SRgthh6BptFnBAt4qe23Bs9XUy8saVaFDg0GaqmiTH8csrf
vcvY8WzrHt3ZS0z8sVAtXsy91++Duxirog6/tl6uxUjb64L748TEIwtn83V6
6JjzY8Q4bnv61tkILb7198reP1JMfLIVWtiJmj02O4vx5l1R3phVWvxpqOsX
OVRMvLJILeQZaWPmDxbD4uCdlDtRWmwJy0mePFBM/LI1bH06sUfpYi3GjNlP
N8yK1qJrv6/vbHqLiWe2VouhZ+zeyZRiJHLfL3yzTotVru8sTM3FxDfboIXA
4r/t+mIxyit+TlwRw47vTfXQXzwx8c42amFvJ+c19RJDP9Zw0B+1Fss+6Fm/
NhET/4xi52eWfuQzIzFGjObwN2vZ/vHkeEu1oZh4aLQWcy5sO3ZfT4zIVnk7
T8f2i042uyo6RMRHi9VCdbpnfnmrCLmnBjYciNNCWXe9y80WEfHSNmnx1awm
/sZXEd4uHXFjwBYt6Oz7425+EhE/bSvbX+qdB99qFEFu5Z57IV6LXf4ZXnde
i4into3Np1sJeyvrRZj5fPpOtwQtjjjsNH/0TER8tUR2PhIc7j5/LMKOlKC1
95O0CL/y78SbKhHx1nZqkR/PFH2+L8Jt75Xz5iZrMeW8+7/WChHx13Zp8dm7
IcywXATDbppxjSlahE6vMjYrFRGPLVWLbudOVltcE2Fk8TabyDR2fpbo3x14
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
75NrSxJ/8on3uYfGpr1cq+Xf+fi9vXP14L1sPU5pK/L8yif+5z42nlpVLgOa
+BgykVtwZT+NwPAxqSYf+MQDPUgjPFK/quktH8s6KQ+6Z7CfzxB+ufeKT3zQ
QzT6Lhr0/nQ9H4cv2cZVH2brTXr7tZTnfOKFHqHR73v/tetr+Xi+yiVsQRYb
LzvCey54xCd+aDaNO7x11IQqPoQDPXyajtJ4n/S70raSTzzRHLZ/7zzwT3CX
jylvZzivPc72v0gLY73bfOKL5tJYrt/n2/sbfGzev0je+SSNCmZJftV1PvFG
89j6emWXz9VrfBTPXNU56RS7H3Gad/d4IZ/4o6dpNDSttUov4KPdjPooy6dR
Oz/Zb9MFPvFIz7L9UzN/wZqzfDjc3l6ZfY6GYZcdExaf5hOf9Dyb7zFPus48
yUcY8995h4s02nSfDrof5xOv9BKN5MxovstRPo6MPLb3agENq8ChCwcd4RO/
9Aq7n4i7H2d5iI8XP8/TnoU01tV2ihUd4BPPtIjdD/VYO7fnXj5EeaUhj6/S
WPTig3HndD7xTYvZ/cV7o6SOFD6mhjz0Diqh0WXAps8tO/nEO71Oo4WSWH5O
5GOLqmHo11IaCQOjbBu38Yl/eoPGGw+PXq+28FHy9LN0w00aU/y9b9bF8YmH
Wk5jxKJh058yfHQkd3Qyus0+r/78xccUn/ioFTRK8unmmo18DPUybtx5h4av
6xS9mvV84qXepXEh5P7L6mg+lncV3ZXfp1F650JaTRSf+KmV7P7mYZHV45V8
ZF/tnZ/zgJ2/Oel0bTifeKoPadjcaj/7PJSPhrX26U7VbH1rSC9oCOETX7WG
xrvXA5LfBvMhsR+jKXlE48WuRaM/BfKJt/qExrw1bZeb5/Ph88kr2LuWrceh
h03a/PnEX31KY6ofz1Z/Dh/xmXM9nz6j8V+LobL7TD7xWOtojOxu/Ybnx0dp
wNIhi1+w+XfJcZ18Gp/4rPVs/a5/86K/Nx9/hdGi7w3s/qLuE9/Jk0+81lc0
jHfoydzc+XCq1P3d+JqGh/OTb1PH84nf+obGzcSBu+eP5SNiy87Xxu/Y/VTN
6e4R4BPPtZFGcBeFt2YkH0fHHryV8p7d360etCBpOJ/4rh9oiGN3jjnkxMfL
jhN5qk/svxcbfT3rwCfeaxObz36uoeWD+ZCeu5xy4jMNp3etZ5/b8on/+oWG
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
nyB+wMN8nfFc63YS3+vbeQ9qeNS/+yjBvHud2kPv87Cv2eJ7/ScJFrHtK70q
edTD6yD7v/UB6+IdHq7E2TWv6JSA+8Cl9c8tHvXxvkjwMS57qW0pD18XuN1o
/yrBhLM5KxJKeNTL+y7BuKPGfW+KeTDq752+44cE+7f+MZ9YxKN+3k+yfwN/
9A8r4GFtSaBc+T8J7kxt21SXx6OeXjeZXzWzfHQu8pAUFLY1+hfpJ2GiP/7Z
POrr9ZB5qb5Lr+wcD48mxLgO+UPeZ7Jxm3omj3p7veR9z0ZYeGfwwGtPmpnx
l9Tzi08Mi07zqL/XR+LJ728WJ5UH69NZuhOVpAgOqyhblcyjHp+yFBl6HP/L
iTyEel5hSlSkcBiceol1jEd9vv5SrO70lK1K4KFo4J1OW1UpZgvV/ys4xKNe
3wAp+tYndnMP8vC95uGjR2pSFO2ujPaK5lG/jyXFooXbi67LeTCWvCpezZZi
uSxgp6aURz0/jhRpEYn3tkTy4IXO1M9cKarib1yqPMCjvh9fCrtxRSajw3hI
7vkj3iUg6/NZYbFvL496f0Ip/NdHPH8SzENTHsuvv7oUdw2VNabs4lH/T0MK
n46slkM7eBD4ai05OFBK/ie4Tf0ayKMeoKYUhkEv9Rdu5cFWX3/6cC0pPtcO
OnvBj0d9wMFSLPnVWMzZzMP+F5N0ModIUW79bfXmDTzqBQ6Volk8+/h9bx6K
j0LVbLgUtiuT15ms41E/cIQUoxyf3IxezcOPxQs/3dSWosWuNvvLCh71BEeS
+39bPM7ZkwcT9vJ6+1FSqLvOsCxw51FfUFeKdK81rwa78uB9e+OVx6Ol4LUl
auxdwqPeoL4UWzRKH79ezMPJkJ3J6wykcH6UYWKzkEf9QUMpokP11bPteXhs
Hhn+ZYwUboMGSjXseNQjHCvFR459TLA1D8IvhzbuMZbCI/eU3pu5POoTmkix
06RjwYLZPNhlpi5SGy/F+87+yvmWPOoVTpBCXF9uPXwmD+FrcszjTcnzev4N
E0/nUb9wohRmvdFhX6fwcH3o9WE6k6W4csF2u6cZj3qGZlJ4XlPrvjuRh66G
KuXz5lLcKUxlJk/gUd9wihS1iR2ZKSY8jI9+/H7KNCm01csfc8fyqHc4XYrs
yX2Hgw158LFuq7k1QwrO3YBXH/R41D+cKcVuoz9X3XR5SP33PX/hLCkCWjeP
qtDhUQ/RUgrr5NODpo7g4UmRUuJTKymEPVuPnx3Koz7ibCkGFBdkDR7Mg3og
P2z9HClGVM+zkWvyqJc4V4qTEf8F9KrzYG88fP33eeT3qWeN/IU86idaS1Go
NnbLGx4PEW+NHPbZSIGby61cOTzqKdqSeKwWJd9jeChJnjqJvUCKPQ5jJFYD
eNRXtJeiX/T2v5f78fCf6/zBRxzIev3q/41V5lFv0VGKhAOaMaf6uJggXNI3
apEUfneHZQ7u5VJ/cbEUXu3Fjgd7uNhQtfpttpMU4/7V7GO6udRjdJai/u84
i/0/uTh1YMu96Uul8L5x6cDvb1zqM7pIMcZ5ksv2L1y0WIRcvOMqRe7Y6LzO
z1zqNbpL4fTf4cSNH7kY2CU74rRMin8bjXht77nUb/Qg8btLh72mjQvHnKMh
zz2lmHPSOe75Gy71HFdIYaqeeNrjFRdin4y1G1dK8Wd23azm51zqO64i8f2r
bq1rCxc3R+bbdq2WYo1vgKixmUu9x7VSFEyKtlvaxMWvJ6Xj96+TIn/gP/aj
Bi71H73IektTXZbWczExvnYgbz3Jr/t2Ro21XOpB+kghG90U6VrNxSaHZ7+P
bZDi264Rm5uruNSH3Ej279GfZo8KLtJUP77S2yyFvr593fNyLvUifaUInN3q
uOYWF89udN+96CdFsnvq0rabXOpHbpFC19OjdWMJF5q7VLNnbpUiKq6jp7OY
Sz3JACkiB0w6tr2IS/6na8RXBkpRMaz/jd8FXOpLbpdi/1DLzfvzuZB8HLl7
6Q4pdpgVpTCXuNSbDJJC+dtCz4M5XJSmjV/1aqcUD5KeJg++wKX+5G5Sfxun
+pzK4qJn+cz5vsFSOBrMvjL2LJd6lHtI/VGui76czsWkQQuMf4VIwTW58dHy
NJf6lPukuDzpfU1VChe+dW6iiFApmn4YTHVJ5lKvMozUG01Xg9eJXGRIvbsF
B6TYGOOU5HeMS/3KcClW4WfC7wQuXsze9jwpgpxf96BB0ngu9SwjpViWc3jY
oDgutP6E3TaUSNGe43AmPYZLfUupFF1VmoWTo7hYfDkmK18mxW2d+wtuy7jU
u5RLcfWvndcSCRcyvxOxVlFkPSf8VN5GcKl/GS1F6kiB/o4DXNwyOLfjfgx5
fi+nekAYl3qYB6V44Ter+9heLv68vOLpFkfO91/YGeM9XOpjHpIixSDvyY1d
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
c9OFE2qCKExR/dodsZYPOyldleeBFPJ+f2+rteQjYnbGk48BFCza/jSJWPGx
9YJl/pg/hQ/Xhas3rOejRVYnX5xwpEC0OHkDH69umzxR20dhmq9U9quNpL/S
A5UX7qVQsVYhRX0zHxtMG+NW+1Gwm6Uav8OaD53vC1UdfSkMC888WGBD+rW8
sM13DwXe27n7hm35UGzXKYvaTWHurQUeS7fwYfGjsOKkD4WGVMMth+z58HWZ
1ZW7i4Lnfqy968DH3J38+dU7KQhZWyyb7Ejm/WFn1lNvCmd1N8zf5MRHwiMp
w94dxOfE7DRObePjgJbKjz9eFF70Osm9cebjQ+zPVinCgXe3i2i4kvkbO/N6
picFyaxdf7zdyPvNpRljD+JzB/d9LXTn49LC2XabtlNY4xjyfmQ7HzI1fxu9
3InPGRx6bujJxy7DQ+4H3ChEycQ0HPbiY96N86qJrsTnviVU1u/gI/Cbh1CO
C4XKh0mFYjtJXrAqmCpn4nO5aZmbd5H5yE/Xf7aNwkhM5okUHz5MRFlR/U7E
57bnxHbs5mP5677vE44U5pkWhf3nS+qfvIorT/i+SumeXX58FGyTstTZSnzu
103XK3v5ePRz5VxzBwrCrbXWP/aReUh6rudkT3yu+P4q4wA+Pg9XOwZsoWDM
e7I0KpCP1pO/L8fZEZ/zaZvbEMSHdNEhlSxbCkEWnaoSwXxY3jK7Vm5DfE6z
Z6pNCB972s19n1hTKBT6TKWF8sEeCbHq20x8rmP4Z2cYH8H81o1ChD9WjH3S
PEDuM8o+RHET8blTQp0+EXyM24zW6m2koBbIbrl6kI+x1bkL1m4gPrdxyt3R
Q3xc79t5z309BYd5cjeWRfLBctE7FG5FfE5kWt6RKD70L/zYemIdhcQejbON
R0g91xVvLbCkoFurLZgSzUf9EueD9WuJz2XoHbWN4aPv39DdzjUUvA8sCT4d
y4ftlx16vyyIzzks3/XuGNkfA6W3pxLOXLRq26w4PijLFwFzVxOfm2q1cU88
yY/hmrWrVlFo/2K98loCyccYf3NXc+JzTVsX/+KQ+9n2ZnuYGQXpHDet5Tyy
Tzz+Zp9YSXzuqLdKNJ+PmWONk4tWUFjn5jelSUDOI7EsuRHE55btnySVRO5f
eP2KD6YUopUivtud4OP5wx9Tx5cTnxs90pueTPJXaT6jRLjqadyr9yf52L/x
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
1HVfU2wrzsM1acxeWLhxoM6wjUN/rK+eb+5n07bVB5+3w98KY+TM4NS8n+Vn
33PI4V96dUkfm37OPf5A5QP2l/qqC+qw8eXxomp4cu3QtrheNnH/+ud6fuRQ
C0/GcCr8cR9f+ox2fP8Ts2V+X9m0qOXcjXx4wfgRo8EeNvmuE75u/Qnnecd1
+13w8zuhUb/gn9IPQuq+sOk/JVFOXAeHPqytr10Fu/IiLhp9xvoXaVIq6GZT
IVvq7Cd4zrTnYUow/4HYU0GduF//uCUc1cWmLe9lj6p24X7i7BktBCesTzrw
HO4UktQ/0cmmwRIld69uDi08Fz/Y+5lNK9TSdot+wf3onEDRDvhS1IIdBfDq
gtWc2g42NQvkWNv04P5VvN1vJax6eMmm33C00Wq//E9sOvLpjum1r1h/P/6G
K8Hlm/SMqZdDtwID70S1s0ns4X2DDvhKbN3AZNhx4Urtc304T3s6l/t+ZFN2
bLmGWj/uc7PvRw18YNPfyevUXsDKn7YIOcLmx54r7B9Ar/XfuPT6PZtiujbI
iA1iP+jLll8Lf7GqlyiErSP2Vxe3sUm7bOt02yH05ZWPQepw0OJmoT/wniS2
1fVWNr2Ot2euf+OQvveLpaKw/LSPf+g7h+TySfXsOzbt9939swMel9u2aLSF
TQ++dg2cG8bneYqZuMNTtrl/UfuB82WL+8G2ZjbZVfS3v4ANzu7I2QTfWub9
bv9PzMf73azyJjaNJv9oEBvhUEfhpD068BqxYzWF8DLloubbb9nEC/hTYTuK
3qv+4SgLtw/4Pf4DyzuUjnMa2aS5g7l3fYxDN+NEbgvAfs+DClb+wnlh9GHv
8TdserF8ctZnuFFwiUF/A5tm3wpJPf+bQxdz+OUd4b2SMxLn/8F6H9sk9eY1
m4rO8mJewuKJ4gqmsMCwZMSBcfweNzPD+/VssnKMCRX/y6F/M755LIaTauec
vwNvthPISqlj09CKxIBtExwSmBzIloYNMxRPjMN6ba6uYa/YFCp961D8P/Tl
tewPDPzugrrnKhaX0gS3uR+tZZPaaJZLJ7zg6w7Bvho2HXXW2nWBzaUj7Ad3
dsHPXhduU2e4pDLn0LE3L9k0c9Vyyxp46LfvejPYKad0vTcflzrcGrUevmBT
jiytncnPpXQNX/Wl8L+QMqMiOEHUUzvtOZss/qxdbifApX+fkixl4di91Vp/
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
TvL/OLHR6Szqg0n2/o1b6CSg+7ntXxp6rkqeqoE1HR58soIv7MhTc5TBes4n
Zq9i0HPJqopLt9LJz0/+o1thXr6SbdnwyjHb6Mho9NyV3ZLG2+iE4hzQnY1C
z/2oWj8Fx2ovXm4Bzx7bv5YhSycxOdX9VZHouVd1K9W34333r30nDccoGfJ+
gSd4uWrC76Dn/mvkvCZHJ9FyIe+mIljUjhVHmBt30Em1V9x3M9jPr/V3DVw0
uYu/Mhw9N2L2y1Ee603VRV8KXney6+dSBTo57yFJCwtjUWfeWPdnw00vzoxP
3kbPqfZ3GSvSyW9phZNmMNcDx7Yp+O0n37aKW+i51cNNDCW8r3EDeyn4v8Dz
9erKdHLdP5Y9PBQ9N/Hr5ReYV8omZ+omes7Ko+zaTjo5LpB2zhwOa5jL36RC
J1yHrTSrbqDnNK4+fQXvWHNHZAss84iVeUYV69VFkfdOCHpubdB9XjU6aZzU
4Z0NZlGvQhYnP4Ele+pETsGrZ0IZh9Ux79peaNZcR8/ZLYuchkcOLT+/DX7a
HBkau4tORB+8zYkOYlFManXQLg28v5fj7H8D0XNPYq92wd8uetjbwImiIp7+
mnSy7oh5W10Aeu5WygUJLTpZ451sLg+r/tno9BoeC9Eci/VHzzmm2zrtppPc
F0rRrGvouU9bLPgonAdrAnUc4U37HpvmwK8NJXkb/VjUxec7jEwInSynC39T
gSvEc/VmYBW6xasUX/TcHRXtuD100vpmrHgxfHKhSENDm070499Unr+KnnPR
2tkNPx8ea231Qc91VMoF7KUT6xizhd2wjt6+LZv3Yf6qcSs/vMKiaPm1G2vh
ovHZK/xw3+YDIs778efWUh8ue6PnYt6vXqaD9/s2Sv2bF3qO3WT5U7hwn9oz
PbjhwifuI7qYN55C6s8uo+e6T7DPwgOp25qFYWfDL3/j9OjkyEVX70BP9Fyx
1bSGPp0Y/P2pMOzBohbL9I12w59/Rv89ApvGnh4MMKCThuunP5a6o+e4fn7b
fIBOerrtSyXhX27nPtfCbg9uv4hwQ8/1Tnx0NsTvv6Gt/Lcres7YvWHZQezH
P/vareEv5b9fP4WN8z6x119iUVu3+1QeOUQn7DWBGkqwdyKzaBZ+sepQcNJF
9NySwNx4Izpp81f8ygWv8eLK1jTGeVKyXf/CBRZlN3DzwVe4uHv3y/bz6Lmj
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
Skr4aNoxQ3y/85617rDHjbbkP/DxYfmE6Vj03Ix5bNJBnA/c3d7u8Er77kjq
EPabvu/paQZ67oPNrV749DiftTv8hHwPCjbC+hgLPT1NR889OeO7xRjrLWjS
2x02EBvxfAtPqeokTNPQc7cvXDx/mEH+6gfVusODfyadVpowSOHcQ/aZGPTc
GU+7PDh61zM9Dzio9Y/F8SPYP0bJSTPR6Ll9vsf+wkqVLgsesHgum3HyUZxf
DetcZqPQcxuv6xNTBik7//C7J1x6h3tvH8wrt/Lc70j0HPOWZsgxPD/DY+xe
sNnZ5Soyxxmkvtrt3twd9NznqB3v4B0fHY294Vm9NTIXTjDIHh5F3r8R6LmC
uE0CZgxyMK3pwxU4WlJU9AW89Oeeh/PhTOpbzN01J8xxnrUE3rwK7+CQ4J+H
5R5EeS6EoecuPuBJOckgn4fPXfKD33bLcOyxYBDuoTXerNtMSvhg9nwf3BMf
Eu4PnymRnwk5xSCdtyqesMP5MnljMpYMsqSo7EvgLfRcnOqPd/COZ/5CnLDJ
4pKeC1Y4/woXWwWHoufcd3cKWDPIpQbD3MXweG9Vywt4i6/J6ps30XOH978/
YcMgca9XBy6BwyrqaufhAtWYf7duoOe2G1al2DLIyqb6ID54S1Jj8R47rI/1
JUIRIUzKc+mRvH54sZNtIT/8yqs1+4Y9ft6zMoeoYPTcoNnDrQ4M8jXk3YZV
sI1pV2oDvPnn7QHadSaV89I64eJpBpl1ni8ShJkK/TGrHLGfTYQT4oLQc6mO
4fnwinu9IevghOXDIWZnGGT+5zH/pEAm9ePqef9/8OQOt5D1sOrwL++7TjhP
2VXjUwPQc2YebtrODDJhd7dwE/yxdu7sd/jzYFZ/mj+T2qhy9fRNF8yHdnMx
afhiGstq21kG4duVaZt5DT0nEGT2Hh5OYeRtg/kCFh+5dI5BEvnEVz3xQ8+N
hxquPo95sGa/nzyceWqZTgG8tYJj9rkveu5tJGV+gUHqes2u7IT371qtvgAH
ze/jLbyKnsuIVUy9yCD7emsydsG9giKyey8xyLH+NpMyH/RccIrkABxndHUJ
gf2mNm4IdWUQD9mcd9VX0HM26Wtl3RjkypvzSfthkaYtAo1wfnGxV503em73
Y15XdwYZORRlcwAueLyDa40Hft/I8WPvvdBzIrnMAnj/qk8nDsNHQ1XmzD0x
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
          "]]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 360], 0.002777777777777778]], 
          AbsoluteThickness[1.6], 
          Dashing[{0, Small}], 
          RGBColor[1, 0, 0], 
          Thickness[Large]], 
         LineBox[CompressedData["
1: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
UIkOiqYO1tzyIfQX9kzzLtLBwC3mVfN9TIzefHG694oOZINOxj3dz0TZq/Zl
npd14KaYGup6gIkTqj8UetN1kNCbu+vDQQIfraBub4oOGlNvWRwKZsI77MT3
wQQd8G2vVpw+QpwfFc0PjtWBifBzkehjTHTkNAzNROngaG33dzEaE8vdrG6d
5OngOmuoM4NB6NvMNy/F1MEnvd/3ldlM/GhObSs6poO1o/y5pVwm3kvFqSJY
BzuviZ+yOs5EblAI/5tAHSTulQtujmRib/grz6N+OmhareG66wQTOsuhL7ZH
B/xtJqYDJ5mgvNh2+uZuHZjFbZYPOc1Egm+sl5OLDsJs3QT/nGGiiXGy8JeD
Dm7M+X6LSWSiq6QnJMNOB5/Lj7RJJBN6pa++aWujg3VHeBVZKUzIPe7y/WGh
g92qZ7LU0pgEj9fPZBnr4Gx/enR5OhOiwxpq2/V08CwjP2jDJSa8Gn6b8Gvp
YKFbmdOLLEKvqsyqeyo6MF/22NAjh4knKx8VhSjqgNrYKvs5j4m3pClhNTkd
3Dzex3/0GhMH131o/7xaB0Mm34bnCpiINJJafG2FDuQnZl7EXmfCIMqsKGCZ
DjyKhcpW3WSiZ9m3O+oiOjjnvyoj5xYTLu8a1/9cqIPncooRmqXE+6+OTFf9
o2DRG0pAZRkTKU0ndWNmKLA8a+mwsYIJkahbL11+UUDfuk3vVRUTfOXxLxS/
U3BroYf0fw+Z0Jqs15z8QsGXBwHzwzVMvGr68/XZJwrW06iDYXUE/qLXQrnv
KfDUjmrme0LoP8R3nN1DQcpw0u0zjUyceSHnsquTgpacrLTVz5gghb8NN2il
QNCzmHvlORM3F38UkGymwGpllR/lJRNHj3Z/mH5CAaOlccuDV0yYnQ6V6HtE
we2YTm27DoJPYvF/cp+Cr1YDqzq6mBhr1g0tKaeANPPjz95uJpjKFRkZtyn4
786/j1/fEvmRkip5upiC8weXPKX3MeHqw/7AyqfgJUnm5sKPTAQ0S08fzqVA
uE85JXGAmN9uRS+/TAqs0wxYaz4zkRhrL+p5gQKWk413/jCRV7kbBdzOUVAq
smOT3lcmrr5/snFHAgXf6vZo1IwyceNJ5IvtsRSQOYck7H8wkfxIN9MpmoI9
Bqzprp9MrFA6c8slnIK0sZN9vr8Jf4rZCbmzKGjNT60fm2JiJW9dtjeVAhGf
vCLWLHE+4Bkz6AgFNjK3kwTnmLjkKXiOdpACTns1LXmeCXmB+JHo/RSUnXnu
JcfPwrUHa8JTfSgY29izoUiAhfr24O0FXhQozw+pGAqxEO660ePhLgq8K34v
qxNhwcP8v6wOZwrSQxf+dljCgrkNXWbMgYI2teVvu5exQBdwbRHZQoHoJ7la
/+UsrJkvLVO2pcA2UyN/fAULZw94tG22ooC70zSeK0ncd1BkfZApBeVidsdE
pFnY+fFEXoIBBd+furmnrmEhKzbFrYxCgUqkn5WCHAv5C2cN+9Qp8DELJd+Q
Z2FHDneTiDIFF3/xRE0UWXC+MhhpuJ6CjhtnxuvJxPl/syP+aylYGnDxtZMK
CxlnT3DTVlOwSb7gYa8aC/yj202aV1AQ3l2WF6jJwmUeae0CMQoqkh/H/tJm
ITe5RdlkMQXj9q9CjuuyUKcjtfvYIgrUFr13W2LAAnVZa3EJHwV+1d/MLhix
YNx1ckvvlDYu0WcVSKYs3N8fyf1vTBudFGHhW+YsKEtRJvo/aWPZyKoxMysW
VD9TCg691cbmPMWORmsW9GJJF2dfaeO4l06Viy0LFvMlDWeeaqNylVX2+00s
tK+jqSvWaOPni20xB7ewICK8ruFhmTbUT3kcmrJnYSjGOcWrWBv+1oHOUY4s
WMtVnJvP1UbWLNVYbAcLs2WztdfStfG6NEouw4WFqKPPZJ2TtCF++KyA8k4W
gute5iw4qY0tSpdH7uxmQbS0xrGMq43I98Wtlp4snM7YrHA4TBv3L1SVP/uP
hUWiMlKqB7Xxa8fTSzu9WeA8HtP84qMNTdGuyH5fQp8Oqt+N3drYXz8QGOzP
gtzbg2XU7dq4zB13nA0g/FB3QmHDJm28MZzXjwli4U0e96qEhTaW/1iyRuIw
C47fxK2G9LSxtVBmQVYICyq3/n6tUdNGlK/KkOpRFuaK5govKWjjwRrDlrIw
FrSqO2nc1dqY7LAptaaz4JVh6+Qrpg3thB3pLUxCH0kxfXtBbQRu3hvuzmEh
9urMOuM5LeTwHfYf5BH9+z1drvpLCz2VLPvQCBa23N0gJPdVCyuOndKZi2Lh
2CqDf5L9WtimcV4qNoaFAY39v1Z0a+HEYN7cyljCT5U5QytbtVCddXsgO46F
saryTulGLUztqmnSSGAh9dWxB+urtUBZ3lJSkcSCkml+unaZFg4860m1PcfC
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
lZbiatuoxrFTbPWzUcHc53C/Sx/UKLQsezemrwrTTU73HN+khu3y+4ULLFVI
KC1qqfzCzocisVUrV+Hmxju1/s1qRGUEJ2dKVeg07OnV9y1qvLU7k1QuVGH4
t8YjUb/UqHjx6Mtnrgqrjv2M79SmRvijoSf4vVQ4Hmi4alsHm19+AytGmqjw
RsaZJf6nRlao0n2xkQqmHxP2P9DTQG98pNUOQxU5T62vwZ/nOv9CPRUmHt6r
CzDQYFrZ5e8fO5TkfLWhBp8Or30r+a0E5Z+z7ENnDbbZK4dO+qEk5627avBU
T/BiwzclLgkuTl1tpMHzsCuvTjYpyfnrbhq8yVvn+vq9Et/vlTnpd9eAqjzT
Jn6rJOexTTRw/3in+9SXSgzYXGW+vYcGW20HRm2uU5Lz2T01UO4Z5lhSq8Qi
15cGkl4amHb18/pboyTntc002C/4cHn4QyX2tX95n8nRQKoNoKLvKcn5ba4G
qQLRnvO3lXic/+feYL4GmXYbu7XeUJLz3AINvv5qu+18XQmz5d3PXRFqkPbt
e8OGq0pyvlusgefySo9rl5Xw6Cv+z12iwcNJfzp3vagk572lGjSOfsHxOqsE
Xd9HWy3TQN75VUTKKSU5/22hwc11y+X1uUpcTnNYskCugbPTF3ObY0pyHlyh
gaTg9rI1R5T4Mc3Vq0mpwZwRK41KM5TkfLilBp15k75z9ythazLFYa2VBryM
YpugPUpyXry3BoaysafO7lZicam/pHNfDY5ucKaNkpXk/Hg/DYpTex2cm6jE
gY3L9JKsNXAycjQ+Ha8k58n7azBlJL/QaLMST5zWvpUN0MA3VHZ5vk5JzpcP
1GDz8wsGlyglON9iK7JtNRB8np7M26gk580HaRBQsCgsYp0Sk44ln3YYrEHJ
ap/td1YryfnzIRrsDd7202aVEkxgRupVew2CZ2gzt4YryXn0oRpcTs9I/7RM
iSuyvI2ejhp4pfhXey1RkvPpTux4riv9Tgcp8bP6StDjYRocmztfLFygJOfV
h2sw+uhmZYy/EnYJtz2CRmjgZtwj7PUsJTm/7qJB78A57Z7TlQiZ+MTu60gN
dk1pvH1umpKcZx/Nrm+2sk7prURGp3f//9879KzaMHj7JCU53z5Gg5A1IaXt
E5R4eqmlo+tYDVZ+npW21E1Jzru7afCIX3y8lh0NL1L/1c5xGuys4/2bNFJJ
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
NPirBstXD9J7wJETL+Mb2++NNn+qN5HDJSvr7+VmDW6v/PTwWxc58TNa2PiM
pc4adpIjav7Z1xN/sP2gNTJR3G5BPI2fGqSs+hJo98MCJ8Qlt6p+sfmotRjk
/sWC+Bq/NSjPsvkW+N4C7x7cz5vfpoGD27ijmlcWxNto12Dk+93T9z+3gCK+
LuVThwa/Z3u1Fj2yIP7GXw3KhqVue1lpgVnjPm2I/qfBLelBftcKC+Jx6FE4
tjotYWCZBXb8/b3QUJ/C7qaTbX5XLYjPYUAhZobZdM0lC1Sc7+qeaEih54Cm
A8fzLYjX0ZnCjvNramtPWKDzCv4gWVcKaQdqO3U/akH8DiMKC5wnC0YessCo
/pb87G4Uuth1CFbstSCehzEFry5ig6zdFljzyq7d3oSCoGftk7okC+J79KCQ
17Y0XRRvgbz/RjUU9aTwW97ZzTfWgngfvSgUODyqTtJY4L2f541JZhQaCnne
lessiP/BoZD8/PsJTpQFVKazcx9xKWx9md3iF25BPBA+hWc+wfI9IRaYc3Px
zkABhTIq0PZloAXxQYQUVhY+VNgEWCCZilr7RUQhzurLj6iZFsQLkVB43+nT
8eJpFrgznJ63XsrOz5O/bmaTLYgfImN/rzjgyoIJFujSkjiuqwU7P+kT+Plj
LIgnIqdwv+HTJCMXC4zO3WezU8HO1/PY+QGOFsQXUVL4EzRl2jk7C0QHHzeT
W1IYymgVvWwsiDdiReHLet9by3pb4JT80q9jvSk88NT3LpdbEH+kD7t+f0ty
+0ks8OHxjeeO/SismV7zZjPPgngk1hTMVSt/fuppAasd1SXF/Sl8+FBVN7Wb
BfFJBlAYHD583wUDC/hPenXUayCFAYee2Sv/mhOvxJZClUPbvq2t5kgx/JZQ
O4jCt6d36n41mxO/ZDCFSUa7mxc1mePelb9RwUMoXA/Y+aT6nTnxTOzZ9730
d8eEl+YwWmMyt9mB/Xyu2KLgmTnxTRwp/H2gWGf3yBxj7CSuG50ozNrgdySr
0px4J8MoHOry46Ciwhzr3vftZzycgpIaE7qnzJz4JyMovLNbbyi6Zo4zGUN7
prhQmLajPiSlwJx4KCMpWFfm7xGcM8enOWNblKMpOPRzSkvNMyc+CihcUecs
kOWYozd/am3uGAr7fvq0HMw0J16KK4XQVxFTrA+YI+BuwFVnNwqNEyZEnU43
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
cJNeNk6LM6Uho7W3xcTjGq/FucX6r3BDDOmempBfE7Qwi1v/QK9ETHwudy3c
lvv2KC4Uw9f3tTftwcbjReOdzCUx8bomaRE8wCJw4jkxtvVoHmo6WYtxqZyY
HqfFxO/y0mJtYFD9w1wxysr+Sfd4s79vkBy/56iYeF5TtLjNsaKCMsX4p+6h
33eaFk4bdl2xPSgmvpePFiM2Lh7T9p8Yw5yljad9tTAMNDe5kSom3pcfO74X
jua7ksVY0dzv7qgZbL6ecooMShQT/2sm+/3OB3oNjRfjWI5j/q1ZWnRv+fGt
yyYx8cDmaFHhfU5YS4vxKsgtffpc9vezFlMn1GLig/lrUdcSb8usF0NmMU3z
MoD9e9hRizlrxMQLm8/mb+qoqfarxPB7NC94+QIt3ijul5qEi4kftlCLmIpX
698tFWN7YphnW6AWV879WVkSLCae2CIttnsfOHZgoRg33NcPiQ3WIrXbNJU6
QEx8scVa7M3Z/SRgthh6BptFnBAt4qe23Bs9XUy8saVaFDg0GaqmiTH8csrf
vcvY8WzrHt3ZS0z8sVAtXsy91++Duxirog6/tl6uxUjb64L748TEIwtn83V6
6JjzY8Q4bnv61tkILb7198reP1JMfLIVWtiJmj02O4vx5l1R3phVWvxpqOsX
OVRMvLJILeQZaWPmDxbD4uCdlDtRWmwJy0mePFBM/LI1bH06sUfpYi3GjNlP
N8yK1qJrv6/vbHqLiWe2VouhZ+zeyZRiJHLfL3yzTotVru8sTM3FxDfboIXA
4r/t+mIxyit+TlwRw47vTfXQXzwx8c42amFvJ+c19RJDP9Zw0B+1Fss+6Fm/
NhET/4xi52eWfuQzIzFGjObwN2vZ/vHkeEu1oZh4aLQWcy5sO3ZfT4zIVnk7
T8f2i042uyo6RMRHi9VCdbpnfnmrCLmnBjYciNNCWXe9y80WEfHSNmnx1awm
/sZXEd4uHXFjwBYt6Oz7425+EhE/bSvbX+qdB99qFEFu5Z57IV6LXf4ZXnde
i4into3Np1sJeyvrRZj5fPpOtwQtjjjsNH/0TER8tUR2PhIc7j5/LMKOlKC1
95O0CL/y78SbKhHx1nZqkR/PFH2+L8Jt75Xz5iZrMeW8+7/WChHx13Zp8dm7
IcywXATDbppxjSlahE6vMjYrFRGPLVWLbudOVltcE2Fk8TabyDR2fpbo3x14
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
75NrSxJ/8on3uYfGpr1cq+Xf+fi9vXP14L1sPU5pK/L8yif+5z42nlpVLgOa
+BgykVtwZT+NwPAxqSYf+MQDPUgjPFK/quktH8s6KQ+6Z7CfzxB+ufeKT3zQ
QzT6Lhr0/nQ9H4cv2cZVH2brTXr7tZTnfOKFHqHR73v/tetr+Xi+yiVsQRYb
LzvCey54xCd+aDaNO7x11IQqPoQDPXyajtJ4n/S70raSTzzRHLZ/7zzwT3CX
jylvZzivPc72v0gLY73bfOKL5tJYrt/n2/sbfGzev0je+SSNCmZJftV1PvFG
89j6emWXz9VrfBTPXNU56RS7H3Gad/d4IZ/4o6dpNDSttUov4KPdjPooy6dR
Oz/Zb9MFPvFIz7L9UzN/wZqzfDjc3l6ZfY6GYZcdExaf5hOf9Dyb7zFPus48
yUcY8995h4s02nSfDrof5xOv9BKN5MxovstRPo6MPLb3agENq8ChCwcd4RO/
9Aq7n4i7H2d5iI8XP8/TnoU01tV2ihUd4BPPtIjdD/VYO7fnXj5EeaUhj6/S
WPTig3HndD7xTYvZ/cV7o6SOFD6mhjz0Diqh0WXAps8tO/nEO71Oo4WSWH5O
5GOLqmHo11IaCQOjbBu38Yl/eoPGGw+PXq+28FHy9LN0w00aU/y9b9bF8YmH
Wk5jxKJh058yfHQkd3Qyus0+r/78xccUn/ioFTRK8unmmo18DPUybtx5h4av
6xS9mvV84qXepXEh5P7L6mg+lncV3ZXfp1F650JaTRSf+KmV7P7mYZHV45V8
ZF/tnZ/zgJ2/Oel0bTifeKoPadjcaj/7PJSPhrX26U7VbH1rSC9oCOETX7WG
xrvXA5LfBvMhsR+jKXlE48WuRaM/BfKJt/qExrw1bZeb5/Ph88kr2LuWrceh
h03a/PnEX31KY6ofz1Z/Dh/xmXM9nz6j8V+LobL7TD7xWOtojOxu/Ybnx0dp
wNIhi1+w+XfJcZ18Gp/4rPVs/a5/86K/Nx9/hdGi7w3s/qLuE9/Jk0+81lc0
jHfoydzc+XCq1P3d+JqGh/OTb1PH84nf+obGzcSBu+eP5SNiy87Xxu/Y/VTN
6e4R4BPPtZFGcBeFt2YkH0fHHryV8p7d360etCBpOJ/4rh9oiGN3jjnkxMfL
jhN5qk/svxcbfT3rwCfeaxObz36uoeWD+ZCeu5xy4jMNp3etZ5/b8on/+oWG
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
nyB+wMN8nfFc63YS3+vbeQ9qeNS/+yjBvHud2kPv87Cv2eJ7/ScJFrHtK70q
edTD6yD7v/UB6+IdHq7E2TWv6JSA+8Cl9c8tHvXxvkjwMS57qW0pD18XuN1o
/yrBhLM5KxJKeNTL+y7BuKPGfW+KeTDq752+44cE+7f+MZ9YxKN+3k+yfwN/
9A8r4GFtSaBc+T8J7kxt21SXx6OeXjeZXzWzfHQu8pAUFLY1+hfpJ2GiP/7Z
POrr9ZB5qb5Lr+wcD48mxLgO+UPeZ7Jxm3omj3p7veR9z0ZYeGfwwGtPmpnx
l9Tzi08Mi07zqL/XR+LJ728WJ5UH69NZuhOVpAgOqyhblcyjHp+yFBl6HP/L
iTyEel5hSlSkcBiceol1jEd9vv5SrO70lK1K4KFo4J1OW1UpZgvV/ys4xKNe
3wAp+tYndnMP8vC95uGjR2pSFO2ujPaK5lG/jyXFooXbi67LeTCWvCpezZZi
uSxgp6aURz0/jhRpEYn3tkTy4IXO1M9cKarib1yqPMCjvh9fCrtxRSajw3hI
7vkj3iUg6/NZYbFvL496f0Ip/NdHPH8SzENTHsuvv7oUdw2VNabs4lH/T0MK
n46slkM7eBD4ai05OFBK/ie4Tf0ayKMeoKYUhkEv9Rdu5cFWX3/6cC0pPtcO
OnvBj0d9wMFSLPnVWMzZzMP+F5N0ModIUW79bfXmDTzqBQ6Volk8+/h9bx6K
j0LVbLgUtiuT15ms41E/cIQUoxyf3IxezcOPxQs/3dSWosWuNvvLCh71BEeS
+39bPM7ZkwcT9vJ6+1FSqLvOsCxw51FfUFeKdK81rwa78uB9e+OVx6Ol4LUl
auxdwqPeoL4UWzRKH79ezMPJkJ3J6wykcH6UYWKzkEf9QUMpokP11bPteXhs
Hhn+ZYwUboMGSjXseNQjHCvFR459TLA1D8IvhzbuMZbCI/eU3pu5POoTmkix
06RjwYLZPNhlpi5SGy/F+87+yvmWPOoVTpBCXF9uPXwmD+FrcszjTcnzev4N
E0/nUb9wohRmvdFhX6fwcH3o9WE6k6W4csF2u6cZj3qGZlJ4XlPrvjuRh66G
KuXz5lLcKUxlJk/gUd9wihS1iR2ZKSY8jI9+/H7KNCm01csfc8fyqHc4XYrs
yX2Hgw158LFuq7k1QwrO3YBXH/R41D+cKcVuoz9X3XR5SP33PX/hLCkCWjeP
qtDhUQ/RUgrr5NODpo7g4UmRUuJTKymEPVuPnx3Koz7ibCkGFBdkDR7Mg3og
P2z9HClGVM+zkWvyqJc4V4qTEf8F9KrzYG88fP33eeT3qWeN/IU86idaS1Go
NnbLGx4PEW+NHPbZSIGby61cOTzqKdqSeKwWJd9jeChJnjqJvUCKPQ5jJFYD
eNRXtJeiX/T2v5f78fCf6/zBRxzIev3q/41V5lFv0VGKhAOaMaf6uJggXNI3
apEUfneHZQ7u5VJ/cbEUXu3Fjgd7uNhQtfpttpMU4/7V7GO6udRjdJai/u84
i/0/uTh1YMu96Uul8L5x6cDvb1zqM7pIMcZ5ksv2L1y0WIRcvOMqRe7Y6LzO
z1zqNbpL4fTf4cSNH7kY2CU74rRMin8bjXht77nUb/Qg8btLh72mjQvHnKMh
zz2lmHPSOe75Gy71HFdIYaqeeNrjFRdin4y1G1dK8Wd23azm51zqO64i8f2r
bq1rCxc3R+bbdq2WYo1vgKixmUu9x7VSFEyKtlvaxMWvJ6Xj96+TIn/gP/aj
Bi71H73IektTXZbWczExvnYgbz3Jr/t2Ro21XOpB+kghG90U6VrNxSaHZ7+P
bZDi264Rm5uruNSH3Ej279GfZo8KLtJUP77S2yyFvr593fNyLvUifaUInN3q
uOYWF89udN+96CdFsnvq0rabXOpHbpFC19OjdWMJF5q7VLNnbpUiKq6jp7OY
Sz3JACkiB0w6tr2IS/6na8RXBkpRMaz/jd8FXOpLbpdi/1DLzfvzuZB8HLl7
6Q4pdpgVpTCXuNSbDJJC+dtCz4M5XJSmjV/1aqcUD5KeJg++wKX+5G5Sfxun
+pzK4qJn+cz5vsFSOBrMvjL2LJd6lHtI/VGui76czsWkQQuMf4VIwTW58dHy
NJf6lPukuDzpfU1VChe+dW6iiFApmn4YTHVJ5lKvMozUG01Xg9eJXGRIvbsF
B6TYGOOU5HeMS/3KcClW4WfC7wQuXsze9jwpgpxf96BB0ngu9SwjpViWc3jY
oDgutP6E3TaUSNGe43AmPYZLfUupFF1VmoWTo7hYfDkmK18mxW2d+wtuy7jU
u5RLcfWvndcSCRcyvxOxVlFkPSf8VN5GcKl/GS1F6kiB/o4DXNwyOLfjfgx5
fi+nekAYl3qYB6V44Ter+9heLv68vOLpFkfO91/YGeM9XOpjHpIixSDvyY1d
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
c9OFE2qCKExR/dodsZYPOyldleeBFPJ+f2+rteQjYnbGk48BFCza/jSJWPGx
9YJl/pg/hQ/Xhas3rOejRVYnX5xwpEC0OHkDH69umzxR20dhmq9U9quNpL/S
A5UX7qVQsVYhRX0zHxtMG+NW+1Gwm6Uav8OaD53vC1UdfSkMC888WGBD+rW8
sM13DwXe27n7hm35UGzXKYvaTWHurQUeS7fwYfGjsOKkD4WGVMMth+z58HWZ
1ZW7i4Lnfqy968DH3J38+dU7KQhZWyyb7Ejm/WFn1lNvCmd1N8zf5MRHwiMp
w94dxOfE7DRObePjgJbKjz9eFF70Osm9cebjQ+zPVinCgXe3i2i4kvkbO/N6
picFyaxdf7zdyPvNpRljD+JzB/d9LXTn49LC2XabtlNY4xjyfmQ7HzI1fxu9
3InPGRx6bujJxy7DQ+4H3ChEycQ0HPbiY96N86qJrsTnviVU1u/gI/Cbh1CO
C4XKh0mFYjtJXrAqmCpn4nO5aZmbd5H5yE/Xf7aNwkhM5okUHz5MRFlR/U7E
57bnxHbs5mP5677vE44U5pkWhf3nS+qfvIorT/i+SumeXX58FGyTstTZSnzu
103XK3v5ePRz5VxzBwrCrbXWP/aReUh6rudkT3yu+P4q4wA+Pg9XOwZsoWDM
e7I0KpCP1pO/L8fZEZ/zaZvbEMSHdNEhlSxbCkEWnaoSwXxY3jK7Vm5DfE6z
Z6pNCB972s19n1hTKBT6TKWF8sEeCbHq20x8rmP4Z2cYH8H81o1ChD9WjH3S
PEDuM8o+RHET8blTQp0+EXyM24zW6m2koBbIbrl6kI+x1bkL1m4gPrdxyt3R
Q3xc79t5z309BYd5cjeWRfLBctE7FG5FfE5kWt6RKD70L/zYemIdhcQejbON
R0g91xVvLbCkoFurLZgSzUf9EueD9WuJz2XoHbWN4aPv39DdzjUUvA8sCT4d
y4ftlx16vyyIzzks3/XuGNkfA6W3pxLOXLRq26w4PijLFwFzVxOfm2q1cU88
yY/hmrWrVlFo/2K98loCyccYf3NXc+JzTVsX/+KQ+9n2ZnuYGQXpHDet5Tyy
Tzz+Zp9YSXzuqLdKNJ+PmWONk4tWUFjn5jelSUDOI7EsuRHE55btnySVRO5f
eP2KD6YUopUivtud4OP5wx9Tx5cTnxs90pueTPJXaT6jRLjqadyr9yf52L/x
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
1HVfU2wrzsM1acxeWLhxoM6wjUN/rK+eb+5n07bVB5+3w98KY+TM4NS8n+Vn
33PI4V96dUkfm37OPf5A5QP2l/qqC+qw8eXxomp4cu3QtrheNnH/+ud6fuRQ
C0/GcCr8cR9f+ox2fP8Ts2V+X9m0qOXcjXx4wfgRo8EeNvmuE75u/Qnnecd1
+13w8zuhUb/gn9IPQuq+sOk/JVFOXAeHPqytr10Fu/IiLhp9xvoXaVIq6GZT
IVvq7Cd4zrTnYUow/4HYU0GduF//uCUc1cWmLe9lj6p24X7i7BktBCesTzrw
HO4UktQ/0cmmwRIld69uDi08Fz/Y+5lNK9TSdot+wf3onEDRDvhS1IIdBfDq
gtWc2g42NQvkWNv04P5VvN1vJax6eMmm33C00Wq//E9sOvLpjum1r1h/P/6G
K8Hlm/SMqZdDtwID70S1s0ns4X2DDvhKbN3AZNhx4Urtc304T3s6l/t+ZFN2
bLmGWj/uc7PvRw18YNPfyevUXsDKn7YIOcLmx54r7B9Ar/XfuPT6PZtiujbI
iA1iP+jLll8Lf7GqlyiErSP2Vxe3sUm7bOt02yH05ZWPQepw0OJmoT/wniS2
1fVWNr2Ot2euf+OQvveLpaKw/LSPf+g7h+TySfXsOzbt9939swMel9u2aLSF
TQ++dg2cG8bneYqZuMNTtrl/UfuB82WL+8G2ZjbZVfS3v4ANzu7I2QTfWub9
bv9PzMf73azyJjaNJv9oEBvhUEfhpD068BqxYzWF8DLloubbb9nEC/hTYTuK
3qv+4SgLtw/4Pf4DyzuUjnMa2aS5g7l3fYxDN+NEbgvAfs+DClb+wnlh9GHv
8TdserF8ctZnuFFwiUF/A5tm3wpJPf+bQxdz+OUd4b2SMxLn/8F6H9sk9eY1
m4rO8mJewuKJ4gqmsMCwZMSBcfweNzPD+/VssnKMCRX/y6F/M755LIaTauec
vwNvthPISqlj09CKxIBtExwSmBzIloYNMxRPjMN6ba6uYa/YFCp961D8P/Tl
tewPDPzugrrnKhaX0gS3uR+tZZPaaJZLJ7zg6w7Bvho2HXXW2nWBzaUj7Ad3
dsHPXhduU2e4pDLn0LE3L9k0c9Vyyxp46LfvejPYKad0vTcflzrcGrUevmBT
jiytncnPpXQNX/Wl8L+QMqMiOEHUUzvtOZss/qxdbifApX+fkixl4di91Vp/
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
TvL/OLHR6Szqg0n2/o1b6CSg+7ntXxp6rkqeqoE1HR58soIv7MhTc5TBes4n
Zq9i0HPJqopLt9LJz0/+o1thXr6SbdnwyjHb6Mho9NyV3ZLG2+iE4hzQnY1C
z/2oWj8Fx2ovXm4Bzx7bv5YhSycxOdX9VZHouVd1K9W34333r30nDccoGfJ+
gSd4uWrC76Dn/mvkvCZHJ9FyIe+mIljUjhVHmBt30Em1V9x3M9jPr/V3DVw0
uYu/Mhw9N2L2y1Ee603VRV8KXney6+dSBTo57yFJCwtjUWfeWPdnw00vzoxP
3kbPqfZ3GSvSyW9phZNmMNcDx7Yp+O0n37aKW+i51cNNDCW8r3EDeyn4v8Dz
9erKdHLdP5Y9PBQ9N/Hr5ReYV8omZ+omes7Ko+zaTjo5LpB2zhwOa5jL36RC
J1yHrTSrbqDnNK4+fQXvWHNHZAss84iVeUYV69VFkfdOCHpubdB9XjU6aZzU
4Z0NZlGvQhYnP4Ele+pETsGrZ0IZh9Ux79peaNZcR8/ZLYuchkcOLT+/DX7a
HBkau4tORB+8zYkOYlFManXQLg28v5fj7H8D0XNPYq92wd8uetjbwImiIp7+
mnSy7oh5W10Aeu5WygUJLTpZ451sLg+r/tno9BoeC9Eci/VHzzmm2zrtppPc
F0rRrGvouU9bLPgonAdrAnUc4U37HpvmwK8NJXkb/VjUxec7jEwInSynC39T
gSvEc/VmYBW6xasUX/TcHRXtuD100vpmrHgxfHKhSENDm070499Unr+KnnPR
2tkNPx8ea231Qc91VMoF7KUT6xizhd2wjt6+LZv3Yf6qcSs/vMKiaPm1G2vh
ovHZK/xw3+YDIs778efWUh8ue6PnYt6vXqaD9/s2Sv2bF3qO3WT5U7hwn9oz
PbjhwifuI7qYN55C6s8uo+e6T7DPwgOp25qFYWfDL3/j9OjkyEVX70BP9Fyx
1bSGPp0Y/P2pMOzBohbL9I12w59/Rv89ApvGnh4MMKCThuunP5a6o+e4fn7b
fIBOerrtSyXhX27nPtfCbg9uv4hwQ8/1Tnx0NsTvv6Gt/Lcres7YvWHZQezH
P/vareEv5b9fP4WN8z6x119iUVu3+1QeOUQn7DWBGkqwdyKzaBZ+sepQcNJF
9NySwNx4Izpp81f8ygWv8eLK1jTGeVKyXf/CBRZlN3DzwVe4uHv3y/bz6Lmj
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
Skr4aNoxQ3y/85617rDHjbbkP/DxYfmE6Vj03Ix5bNJBnA/c3d7u8Er77kjq
EPabvu/paQZ67oPNrV749DiftTv8hHwPCjbC+hgLPT1NR889OeO7xRjrLWjS
2x02EBvxfAtPqeokTNPQc7cvXDx/mEH+6gfVusODfyadVpowSOHcQ/aZGPTc
GU+7PDh61zM9Dzio9Y/F8SPYP0bJSTPR6Ll9vsf+wkqVLgsesHgum3HyUZxf
DetcZqPQcxuv6xNTBik7//C7J1x6h3tvH8wrt/Lc70j0HPOWZsgxPD/DY+xe
sNnZ5Soyxxmkvtrt3twd9NznqB3v4B0fHY294Vm9NTIXTjDIHh5F3r8R6LmC
uE0CZgxyMK3pwxU4WlJU9AW89Oeeh/PhTOpbzN01J8xxnrUE3rwK7+CQ4J+H
5R5EeS6EoecuPuBJOckgn4fPXfKD33bLcOyxYBDuoTXerNtMSvhg9nwf3BMf
Eu4PnymRnwk5xSCdtyqesMP5MnljMpYMsqSo7EvgLfRcnOqPd/COZ/5CnLDJ
4pKeC1Y4/woXWwWHoufcd3cKWDPIpQbD3MXweG9Vywt4i6/J6ps30XOH978/
YcMgca9XBy6BwyrqaufhAtWYf7duoOe2G1al2DLIyqb6ID54S1Jj8R47rI/1
JUIRIUzKc+mRvH54sZNtIT/8yqs1+4Y9ft6zMoeoYPTcoNnDrQ4M8jXk3YZV
sI1pV2oDvPnn7QHadSaV89I64eJpBpl1ni8ShJkK/TGrHLGfTYQT4oLQc6mO
4fnwinu9IevghOXDIWZnGGT+5zH/pEAm9ePqef9/8OQOt5D1sOrwL++7TjhP
2VXjUwPQc2YebtrODDJhd7dwE/yxdu7sd/jzYFZ/mj+T2qhy9fRNF8yHdnMx
afhiGstq21kG4duVaZt5DT0nEGT2Hh5OYeRtg/kCFh+5dI5BEvnEVz3xQ8+N
hxquPo95sGa/nzyceWqZTgG8tYJj9rkveu5tJGV+gUHqes2u7IT371qtvgAH
ze/jLbyKnsuIVUy9yCD7emsydsG9giKyey8xyLH+NpMyH/RccIrkABxndHUJ
gf2mNm4IdWUQD9mcd9VX0HM26Wtl3RjkypvzSfthkaYtAo1wfnGxV503em73
Y15XdwYZORRlcwAueLyDa40Hft/I8WPvvdBzIrnMAnj/qk8nDsNHQ1XmzD0x
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
          "]]}}}, {{}, {}}}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {200.0000265306127, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 0.618, Axes -> {True, True}, 
     AxesLabel -> {
       FormBox[
        TemplateBox[{"\"\[CapitalOmega] \"", "\"(MHz)\""}, "RowDefault"], 
        TraditionalForm], 
       FormBox[
        TemplateBox[{"S", "\"(\"", 
          SubscriptBox["\[Omega]", "\"m\""], "\")\""}, "RowDefault"], 
        TraditionalForm]}, AxesOrigin -> {200.00002653061225`, 0}, 
     BaseStyle -> {FontFamily -> "Times New Roman", 16}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, {0., 33.47452596541971}}, 
     PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
       StyleBox[
       "\"PD, N=1\"", FontFamily -> "Times New Roman", 14, StripOnInput -> 
        False], 
       StyleBox[
       "\"PD, N=2\"", FontFamily -> "Times New Roman", 14, StripOnInput -> 
        False], 
       StyleBox[
       "\"PD, N=3\"", FontFamily -> "Times New Roman", 14, StripOnInput -> 
        False], 
       StyleBox[
       "\"PD, N=4\"", FontFamily -> "Times New Roman", 14, StripOnInput -> 
        False]}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {40, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.880722, 0.611041, 0.142051]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.880722, 0.611041, 0.142051]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {40, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}, {
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Dashing[{0, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Dashing[{0, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               
               TemplateBox[<|
                "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                "RGBColorSwatchTemplate"], ",", 
               
               TemplateBox[<|
                "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                "RGBColorSwatchTemplate"], ",", 
               RowBox[{"{", 
                 RowBox[{
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "}"}], 
               ",", 
               RowBox[{"{", 
                 RowBox[{
                   
                   TemplateBox[<|"color" -> RGBColor[1, 0, 0]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small"}], "}"}], "]"}]}], "}"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {2, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Above"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8697673526464386`*^9, 3.869767363266034*^9}, 
   3.869767398379747*^9, {3.870010222171203*^9, 3.8700102679215865`*^9}, 
   3.8702844236142282`*^9},
 CellLabel->
  "Out[245]=",ExpressionUUID->"dfb6d0d0-b5e4-4416-9ef3-055f9dddf143"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1430.25, 738.75},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
TaggingRules-><|"TryRealOnly" -> False|>,
FrontEndVersion->"13.0 for Mac OS X ARM (64-bit) (February 4, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"5d9d6c47-743a-43c8-8539-31c50f838cae"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 309, 7, 133, "Input",ExpressionUUID->"3db6f3dd-841e-4a6f-9bcd-4c0a15026451"],
Cell[CellGroupData[{
Cell[892, 31, 163, 3, 67, "Section",ExpressionUUID->"602ada67-5a27-4283-a4c2-9c1b72ca574d"],
Cell[1058, 36, 354, 9, 46, "Input",ExpressionUUID->"1198645c-241a-4de7-b248-2715065a82b4",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[1449, 50, 333, 5, 67, "Section",ExpressionUUID->"82684d56-8309-4db6-9228-826b28f78ed4"],
Cell[CellGroupData[{
Cell[1807, 59, 219, 4, 54, "Subsection",ExpressionUUID->"f013a760-8f33-402c-8872-0791025025dc"],
Cell[2029, 65, 226, 5, 35, "Text",ExpressionUUID->"813f50e5-478f-4913-abfb-48784c42d6fb"],
Cell[2258, 72, 2576, 70, 382, "Input",ExpressionUUID->"c53597f6-cabe-42d8-9425-2ed2ddb1d78d",
 InitializationCell->True],
Cell[4837, 144, 8093, 216, 491, "Input",ExpressionUUID->"42ddad65-e8b4-4be1-aa81-5b3a07e98a94",
 InitializationCell->True],
Cell[12933, 362, 171, 3, 35, "Text",ExpressionUUID->"34a80752-47f4-46ea-8d62-95dbc28fc1e2"],
Cell[13107, 367, 2229, 63, 89, "Input",ExpressionUUID->"3277bb11-9566-403e-b261-ef78c72b3e91",
 InitializationCell->True],
Cell[15339, 432, 100, 0, 35, "Text",ExpressionUUID->"d1a517ff-08dc-4ddc-aae8-c81246f06d59"],
Cell[15442, 434, 662, 15, 46, "Input",ExpressionUUID->"b367610a-f38b-494b-a903-f56b58e40747",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[16141, 454, 117, 0, 38, "Subsection",ExpressionUUID->"f28167ca-6d68-486c-8fab-14bed0337d97"],
Cell[CellGroupData[{
Cell[16283, 458, 759, 20, 110, "Input",ExpressionUUID->"385bccdb-8d04-4e91-ac49-fc8e4cf50897",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True],
Cell[17045, 480, 326, 6, 46, "Input",ExpressionUUID->"b452dac3-d073-4e4c-9295-7a8e21a0c6ed",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[17374, 488, 2056, 60, 192, "Output",ExpressionUUID->"f55b5b5e-d89b-43cc-9b72-dd45e81834aa",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[19433, 550, 324, 6, 46, "Input",ExpressionUUID->"58219d23-2952-4c7c-8022-1a8d226242b7",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[19760, 558, 1618, 48, 148, "Output",ExpressionUUID->"08d23d63-ebf9-45fd-9cfd-115985fe72f0",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[21381, 608, 298, 5, 46, "Input",ExpressionUUID->"9b82c750-3260-4232-887b-f6f7d6bd369a",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[21682, 615, 1863, 52, 148, "Output",ExpressionUUID->"ccefcc49-a036-43bd-93f5-c99959b99ef8",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[23594, 673, 246, 6, 38, "Subsection",ExpressionUUID->"71cf1a8e-abc6-4448-a7ef-983790c180c1"],
Cell[23843, 681, 2575, 72, 102, "Input",ExpressionUUID->"36b9d24d-8318-4910-8787-007368672269",
 InitializationCell->True],
Cell[26421, 755, 367, 11, 35, "Text",ExpressionUUID->"1fa5a3df-0e18-4883-8f47-bf92e346f0cf"],
Cell[CellGroupData[{
Cell[26813, 770, 183, 2, 28, "Input",ExpressionUUID->"22e6f9cf-8578-4274-9f2f-e083b04abbc8"],
Cell[26999, 774, 993, 29, 50, "Output",ExpressionUUID->"37236994-4c53-401b-88c5-cb9eff550927"]
}, Open  ]],
Cell[28007, 806, 367, 11, 35, "Text",ExpressionUUID->"e77d3cdd-7697-46d8-9eb3-9c485fbc11cc"],
Cell[CellGroupData[{
Cell[28399, 821, 185, 2, 28, "Input",ExpressionUUID->"7ab5d215-15b0-4f0b-a271-84e432eefcae"],
Cell[28587, 825, 1092, 32, 50, "Output",ExpressionUUID->"9745d78d-ad9b-46fe-98e9-da7c15695a52"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[29728, 863, 100, 0, 38, "Subsection",ExpressionUUID->"8e6c692f-9d81-46e6-bf18-2c5a9020f364"],
Cell[29831, 865, 2248, 61, 72, "Input",ExpressionUUID->"7745686f-0b32-47b7-a977-a6325096aa1c",
 InitializationCell->True]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[32128, 932, 268, 4, 67, "Section",ExpressionUUID->"7867eb35-49ae-477c-9336-97a74a0d9b87"],
Cell[CellGroupData[{
Cell[32421, 940, 251, 4, 54, "Subsection",ExpressionUUID->"ca1c2004-083d-492f-8618-0f8f5be2b9ef"],
Cell[32675, 946, 2156, 51, 136, "Input",ExpressionUUID->"5c80a481-be30-42f9-9a09-2ada8665e21e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[34868, 1002, 172, 3, 54, "Subsection",ExpressionUUID->"27782b09-ec61-41a6-9e28-e630d6218fa6"],
Cell[35043, 1007, 241, 6, 35, "Text",ExpressionUUID->"08ba62a5-acc7-409a-b5c2-8c65b3faf4e6"],
Cell[CellGroupData[{
Cell[35309, 1017, 655, 12, 46, "Input",ExpressionUUID->"26ab5ffe-71b4-4484-8baf-c02adab789ff",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[35967, 1031, 123739, 3113, 434, "Output",ExpressionUUID->"e26f6c5b-2d5b-4444-acad-2792ec1e715f",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[159709, 4146, 430, 10, 46, "Input",ExpressionUUID->"e4bb0d9b-81db-4030-a95f-052984063be5",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[160142, 4158, 123524, 3111, 434, "Output",ExpressionUUID->"027e11c3-9136-49ce-bb74-5bb272faf1fa",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[283669, 7271, 352, 8, 46, "Input",ExpressionUUID->"bf12d13d-ee25-463b-8ee5-2d8952747abb",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[284024, 7281, 63458, 1551, 428, "Output",ExpressionUUID->"38d1bde2-c4e9-495f-8acb-d2907a42f91b",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[347519, 8837, 731, 16, 46, "Input",ExpressionUUID->"3adefca1-2cc8-4e37-a31f-d54091c1e274",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[348253, 8855, 27835, 765, 362, "Output",ExpressionUUID->"b08a56ea-3b1a-45ad-970a-d4e859fe6687",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[376091, 9622, 537, 13, 46, "Input",ExpressionUUID->"240d6d79-cd2e-4355-8436-2f1ec61ca3ae",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[376631, 9637, 21592, 591, 328, "Output",ExpressionUUID->"65f27194-0d6f-496a-9cf2-35ba1e92fe96",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[398226, 10230, 463, 12, 46, "Input",ExpressionUUID->"5d96e545-c7a2-4625-b254-df98a7c37ff1",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[398692, 10244, 29443, 762, 380, "Output",ExpressionUUID->"52731fc8-2797-49e5-93a2-c7f143bc32b0",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[428184, 11012, 300, 4, 38, "Subsection",ExpressionUUID->"773d5a98-dece-40af-8a38-83c80fcb81b0"],
Cell[428487, 11018, 12757, 364, 600, "Input",ExpressionUUID->"aa2bbff3-efc4-492f-a52c-fc65a479a95a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[441281, 11387, 168, 3, 54, "Subsection",ExpressionUUID->"1a712c8f-eb7c-4f6a-910b-c7824cf64cce"],
Cell[CellGroupData[{
Cell[441474, 11394, 181, 3, 45, "Subsubsection",ExpressionUUID->"25e80e41-cf97-4092-9e48-5c21c040e9b9"],
Cell[441658, 11399, 1517, 45, 79, "Input",ExpressionUUID->"a36e42c6-f9d7-48c5-a06d-f92646410295"]
}, Open  ]],
Cell[CellGroupData[{
Cell[443212, 11449, 233, 4, 45, "Subsubsection",ExpressionUUID->"43cb6eeb-238a-4a01-91ab-919d64cfe1bc"],
Cell[CellGroupData[{
Cell[443470, 11457, 11835, 320, 608, "Input",ExpressionUUID->"0b9f5ed8-c04c-46c3-bf02-0f18c22b7185"],
Cell[455308, 11779, 58797, 1133, 409, "Output",ExpressionUUID->"ee19b80c-e46f-4ec6-b16e-eb463b78075e"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[514166, 12919, 207, 3, 54, "Subsection",ExpressionUUID->"cfbf1460-efcc-49da-97dc-07cb3b113e63"],
Cell[514376, 12924, 8187, 232, 585, "Input",ExpressionUUID->"651470f4-07f3-4342-a24b-24b302bdba50"]
}, Open  ]],
Cell[CellGroupData[{
Cell[522600, 13161, 237, 4, 54, "Subsection",ExpressionUUID->"a4ff9651-b134-4ae2-832d-1ada4a5f7bda"],
Cell[CellGroupData[{
Cell[522862, 13169, 4581, 122, 224, "Input",ExpressionUUID->"9e1df286-d148-4dc0-ac44-64cb6c2a1fdc"],
Cell[527446, 13293, 31892, 612, 300, "Output",ExpressionUUID->"2d9d0b90-320c-4861-8099-dd54ed56d8bc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[559375, 13910, 3961, 107, 161, "Input",ExpressionUUID->"99e75a30-8119-4678-ab88-48cf5e0f92fb"],
Cell[563339, 14019, 26203, 521, 291, "Output",ExpressionUUID->"82adeaa6-06ea-4bd3-bfb9-ddd4686de885"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[589603, 14547, 261, 4, 67, "Section",ExpressionUUID->"332741b7-feaf-4996-8b7c-781c76b931f0"],
Cell[CellGroupData[{
Cell[589889, 14555, 175, 3, 54, "Subsection",ExpressionUUID->"979e9437-9657-42cd-89a7-d3aef1c652c3"],
Cell[590067, 14560, 9402, 264, 451, "Input",ExpressionUUID->"71d70cab-88f5-49a4-ad91-1250631dafdb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[599506, 14829, 228, 4, 54, "Subsection",ExpressionUUID->"dc54fdb7-94cd-42bb-a8a0-8293eaa70c3e"],
Cell[CellGroupData[{
Cell[599759, 14837, 2021, 61, 115, "Input",ExpressionUUID->"90e4cc34-c444-4acd-a485-966cbc1953c2"],
Cell[601783, 14900, 670, 13, 46, "Message",ExpressionUUID->"1f5b1da2-2b6c-49ed-bad6-c05c0f82bdae"],
Cell[602456, 14915, 672, 13, 46, "Message",ExpressionUUID->"1730073c-87d9-4d93-b9be-ee7e6df5a5b9"]
}, Open  ]],
Cell[603143, 14931, 240, 6, 30, "Input",ExpressionUUID->"c482e3ad-0263-4efc-9095-ad8f0eba3482"],
Cell[CellGroupData[{
Cell[603408, 14941, 12458, 334, 514, "Input",ExpressionUUID->"ad611b00-99c5-4bb4-9755-0510dd9b3e81"],
Cell[615869, 15277, 71461, 1322, 386, "Output",ExpressionUUID->"d5f10bd5-d1b6-42ae-b491-a61cbb9520c1"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[687379, 16605, 232, 3, 54, "Subsection",ExpressionUUID->"066ee850-2345-42d9-9d58-dbce602d4e07"],
Cell[687614, 16610, 7560, 213, 535, "Input",ExpressionUUID->"864c3166-0d23-43f5-a583-82fb85538db3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[695211, 16828, 184, 3, 54, "Subsection",ExpressionUUID->"f1969d06-a0f7-48bb-88ff-445c0e53bdfb"],
Cell[CellGroupData[{
Cell[695420, 16835, 2962, 81, 157, "Input",ExpressionUUID->"ae2899e2-dff2-4a92-86c5-7a293e02b0d3"],
Cell[698385, 16918, 335724, 5591, 287, "Output",ExpressionUUID->"daf20e70-4059-461a-ad2c-0f8bdf5f5b73"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1034146, 22514, 3106, 85, 157, "Input",ExpressionUUID->"023414d0-6f7c-4f25-95a5-5568785b585a"],
Cell[1037255, 22601, 299328, 4990, 296, "Output",ExpressionUUID->"dfb6d0d0-b5e4-4416-9ef3-055f9dddf143"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

